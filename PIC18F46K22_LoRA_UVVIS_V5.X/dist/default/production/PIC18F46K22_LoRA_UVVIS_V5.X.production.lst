

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 18 16:12:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F46K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	idataCOMRAM
   122  00D181                     __pidataCOMRAM:
   123                           	callstack 0
   124                           
   125                           ;initializer for _bh1750Address
   126  00D181  46                 	db	70
   127                           
   128                           	psect	idataBANK0
   129  00D1A8                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _address
   133  00D1A8  6E                 	db	110
   134  00D1A9  DA                 	db	218
   135  00D1AA  82                 	db	130
   136  00D1AB  33                 	db	51
   137  00D1AC  33                 	db	51
   138  00D1AD  66                 	db	102
   139  00D1AE  F5                 	db	245
   140  00D1AF  E6                 	db	230
   141                           
   142                           	psect	mediumconst
   143  00FC4C                     __pmediumconst:
   144                           	callstack 0
   145  00FC4C  00                 	db	0
   146  00FC4D                     CRC16@wCRCTable:
   147                           	callstack 0
   148  00FC4D  0000               	dw	0
   149  00FC4F  C0C1               	dw	49345
   150  00FC51  C181               	dw	49537
   151  00FC53  0140               	dw	320
   152  00FC55  C301               	dw	49921
   153  00FC57  03C0               	dw	960
   154  00FC59  0280               	dw	640
   155  00FC5B  C241               	dw	49729
   156  00FC5D  C601               	dw	50689
   157  00FC5F  06C0               	dw	1728
   158  00FC61  0780               	dw	1920
   159  00FC63  C741               	dw	51009
   160  00FC65  0500               	dw	1280
   161  00FC67  C5C1               	dw	50625
   162  00FC69  C481               	dw	50305
   163  00FC6B  0440               	dw	1088
   164  00FC6D  CC01               	dw	52225
   165  00FC6F  0CC0               	dw	3264
   166  00FC71  0D80               	dw	3456
   167  00FC73  CD41               	dw	52545
   168  00FC75  0F00               	dw	3840
   169  00FC77  CFC1               	dw	53185
   170  00FC79  CE81               	dw	52865
   171  00FC7B  0E40               	dw	3648
   172  00FC7D  0A00               	dw	2560
   173  00FC7F  CAC1               	dw	51905
   174  00FC81  CB81               	dw	52097
   175  00FC83  0B40               	dw	2880
   176  00FC85  C901               	dw	51457
   177  00FC87  09C0               	dw	2496
   178  00FC89  0880               	dw	2176
   179  00FC8B  C841               	dw	51265
   180  00FC8D  D801               	dw	55297
   181  00FC8F  18C0               	dw	6336
   182  00FC91  1980               	dw	6528
   183  00FC93  D941               	dw	55617
   184  00FC95  1B00               	dw	6912
   185  00FC97  DBC1               	dw	56257
   186  00FC99  DA81               	dw	55937
   187  00FC9B  1A40               	dw	6720
   188  00FC9D  1E00               	dw	7680
   189  00FC9F  DEC1               	dw	57025
   190  00FCA1  DF81               	dw	57217
   191  00FCA3  1F40               	dw	8000
   192  00FCA5  DD01               	dw	56577
   193  00FCA7  1DC0               	dw	7616
   194  00FCA9  1C80               	dw	7296
   195  00FCAB  DC41               	dw	56385
   196  00FCAD  1400               	dw	5120
   197  00FCAF  D4C1               	dw	54465
   198  00FCB1  D581               	dw	54657
   199  00FCB3  1540               	dw	5440
   200  00FCB5  D701               	dw	55041
   201  00FCB7  17C0               	dw	6080
   202  00FCB9  1680               	dw	5760
   203  00FCBB  D641               	dw	54849
   204  00FCBD  D201               	dw	53761
   205  00FCBF  12C0               	dw	4800
   206  00FCC1  1380               	dw	4992
   207  00FCC3  D341               	dw	54081
   208  00FCC5  1100               	dw	4352
   209  00FCC7  D1C1               	dw	53697
   210  00FCC9  D081               	dw	53377
   211  00FCCB  1040               	dw	4160
   212  00FCCD  F001               	dw	61441
   213  00FCCF  30C0               	dw	12480
   214  00FCD1  3180               	dw	12672
   215  00FCD3  F141               	dw	61761
   216  00FCD5  3300               	dw	13056
   217  00FCD7  F3C1               	dw	62401
   218  00FCD9  F281               	dw	62081
   219  00FCDB  3240               	dw	12864
   220  00FCDD  3600               	dw	13824
   221  00FCDF  F6C1               	dw	63169
   222  00FCE1  F781               	dw	63361
   223  00FCE3  3740               	dw	14144
   224  00FCE5  F501               	dw	62721
   225  00FCE7  35C0               	dw	13760
   226  00FCE9  3480               	dw	13440
   227  00FCEB  F441               	dw	62529
   228  00FCED  3C00               	dw	15360
   229  00FCEF  FCC1               	dw	64705
   230  00FCF1  FD81               	dw	64897
   231  00FCF3  3D40               	dw	15680
   232  00FCF5  FF01               	dw	65281
   233  00FCF7  3FC0               	dw	16320
   234  00FCF9  3E80               	dw	16000
   235  00FCFB  FE41               	dw	65089
   236  00FCFD  FA01               	dw	64001
   237  00FCFF  3AC0               	dw	15040
   238  00FD01  3B80               	dw	15232
   239  00FD03  FB41               	dw	64321
   240  00FD05  3900               	dw	14592
   241  00FD07  F9C1               	dw	63937
   242  00FD09  F881               	dw	63617
   243  00FD0B  3840               	dw	14400
   244  00FD0D  2800               	dw	10240
   245  00FD0F  E8C1               	dw	59585
   246  00FD11  E981               	dw	59777
   247  00FD13  2940               	dw	10560
   248  00FD15  EB01               	dw	60161
   249  00FD17  2BC0               	dw	11200
   250  00FD19  2A80               	dw	10880
   251  00FD1B  EA41               	dw	59969
   252  00FD1D  EE01               	dw	60929
   253  00FD1F  2EC0               	dw	11968
   254  00FD21  2F80               	dw	12160
   255  00FD23  EF41               	dw	61249
   256  00FD25  2D00               	dw	11520
   257  00FD27  EDC1               	dw	60865
   258  00FD29  EC81               	dw	60545
   259  00FD2B  2C40               	dw	11328
   260  00FD2D  E401               	dw	58369
   261  00FD2F  24C0               	dw	9408
   262  00FD31  2580               	dw	9600
   263  00FD33  E541               	dw	58689
   264  00FD35  2700               	dw	9984
   265  00FD37  E7C1               	dw	59329
   266  00FD39  E681               	dw	59009
   267  00FD3B  2640               	dw	9792
   268  00FD3D  2200               	dw	8704
   269  00FD3F  E2C1               	dw	58049
   270  00FD41  E381               	dw	58241
   271  00FD43  2340               	dw	9024
   272  00FD45  E101               	dw	57601
   273  00FD47  21C0               	dw	8640
   274  00FD49  2080               	dw	8320
   275  00FD4B  E041               	dw	57409
   276  00FD4D  A001               	dw	40961
   277  00FD4F  60C0               	dw	24768
   278  00FD51  6180               	dw	24960
   279  00FD53  A141               	dw	41281
   280  00FD55  6300               	dw	25344
   281  00FD57  A3C1               	dw	41921
   282  00FD59  A281               	dw	41601
   283  00FD5B  6240               	dw	25152
   284  00FD5D  6600               	dw	26112
   285  00FD5F  A6C1               	dw	42689
   286  00FD61  A781               	dw	42881
   287  00FD63  6740               	dw	26432
   288  00FD65  A501               	dw	42241
   289  00FD67  65C0               	dw	26048
   290  00FD69  6480               	dw	25728
   291  00FD6B  A441               	dw	42049
   292  00FD6D  6C00               	dw	27648
   293  00FD6F  ACC1               	dw	44225
   294  00FD71  AD81               	dw	44417
   295  00FD73  6D40               	dw	27968
   296  00FD75  AF01               	dw	44801
   297  00FD77  6FC0               	dw	28608
   298  00FD79  6E80               	dw	28288
   299  00FD7B  AE41               	dw	44609
   300  00FD7D  AA01               	dw	43521
   301  00FD7F  6AC0               	dw	27328
   302  00FD81  6B80               	dw	27520
   303  00FD83  AB41               	dw	43841
   304  00FD85  6900               	dw	26880
   305  00FD87  A9C1               	dw	43457
   306  00FD89  A881               	dw	43137
   307  00FD8B  6840               	dw	26688
   308  00FD8D  7800               	dw	30720
   309  00FD8F  B8C1               	dw	47297
   310  00FD91  B981               	dw	47489
   311  00FD93  7940               	dw	31040
   312  00FD95  BB01               	dw	47873
   313  00FD97  7BC0               	dw	31680
   314  00FD99  7A80               	dw	31360
   315  00FD9B  BA41               	dw	47681
   316  00FD9D  BE01               	dw	48641
   317  00FD9F  7EC0               	dw	32448
   318  00FDA1  7F80               	dw	32640
   319  00FDA3  BF41               	dw	48961
   320  00FDA5  7D00               	dw	32000
   321  00FDA7  BDC1               	dw	48577
   322  00FDA9  BC81               	dw	48257
   323  00FDAB  7C40               	dw	31808
   324  00FDAD  B401               	dw	46081
   325  00FDAF  74C0               	dw	29888
   326  00FDB1  7580               	dw	30080
   327  00FDB3  B541               	dw	46401
   328  00FDB5  7700               	dw	30464
   329  00FDB7  B7C1               	dw	47041
   330  00FDB9  B681               	dw	46721
   331  00FDBB  7640               	dw	30272
   332  00FDBD  7200               	dw	29184
   333  00FDBF  B2C1               	dw	45761
   334  00FDC1  B381               	dw	45953
   335  00FDC3  7340               	dw	29504
   336  00FDC5  B101               	dw	45313
   337  00FDC7  71C0               	dw	29120
   338  00FDC9  7080               	dw	28800
   339  00FDCB  B041               	dw	45121
   340  00FDCD  5000               	dw	20480
   341  00FDCF  90C1               	dw	37057
   342  00FDD1  9181               	dw	37249
   343  00FDD3  5140               	dw	20800
   344  00FDD5  9301               	dw	37633
   345  00FDD7  53C0               	dw	21440
   346  00FDD9  5280               	dw	21120
   347  00FDDB  9241               	dw	37441
   348  00FDDD  9601               	dw	38401
   349  00FDDF  56C0               	dw	22208
   350  00FDE1  5780               	dw	22400
   351  00FDE3  9741               	dw	38721
   352  00FDE5  5500               	dw	21760
   353  00FDE7  95C1               	dw	38337
   354  00FDE9  9481               	dw	38017
   355  00FDEB  5440               	dw	21568
   356  00FDED  9C01               	dw	39937
   357  00FDEF  5CC0               	dw	23744
   358  00FDF1  5D80               	dw	23936
   359  00FDF3  9D41               	dw	40257
   360  00FDF5  5F00               	dw	24320
   361  00FDF7  9FC1               	dw	40897
   362  00FDF9  9E81               	dw	40577
   363  00FDFB  5E40               	dw	24128
   364  00FDFD  5A00               	dw	23040
   365  00FDFF  9AC1               	dw	39617
   366  00FE01  9B81               	dw	39809
   367  00FE03  5B40               	dw	23360
   368  00FE05  9901               	dw	39169
   369  00FE07  59C0               	dw	22976
   370  00FE09  5880               	dw	22656
   371  00FE0B  9841               	dw	38977
   372  00FE0D  8801               	dw	34817
   373  00FE0F  48C0               	dw	18624
   374  00FE11  4980               	dw	18816
   375  00FE13  8941               	dw	35137
   376  00FE15  4B00               	dw	19200
   377  00FE17  8BC1               	dw	35777
   378  00FE19  8A81               	dw	35457
   379  00FE1B  4A40               	dw	19008
   380  00FE1D  4E00               	dw	19968
   381  00FE1F  8EC1               	dw	36545
   382  00FE21  8F81               	dw	36737
   383  00FE23  4F40               	dw	20288
   384  00FE25  8D01               	dw	36097
   385  00FE27  4DC0               	dw	19904
   386  00FE29  4C80               	dw	19584
   387  00FE2B  8C41               	dw	35905
   388  00FE2D  4400               	dw	17408
   389  00FE2F  84C1               	dw	33985
   390  00FE31  8581               	dw	34177
   391  00FE33  4540               	dw	17728
   392  00FE35  8701               	dw	34561
   393  00FE37  47C0               	dw	18368
   394  00FE39  4680               	dw	18048
   395  00FE3B  8641               	dw	34369
   396  00FE3D  8201               	dw	33281
   397  00FE3F  42C0               	dw	17088
   398  00FE41  4380               	dw	17280
   399  00FE43  8341               	dw	33601
   400  00FE45  4100               	dw	16640
   401  00FE47  81C1               	dw	33217
   402  00FE49  8081               	dw	32897
   403  00FE4B  4040               	dw	16448
   404  00FE4D                     __end_ofCRC16@wCRCTable:
   405                           	callstack 0
   406  00FE4D                     __powers_:
   407                           	callstack 0
   408  00FE4D  0000               	dw	0
   409  00FE4F  3F80               	dw	16256
   410  00FE51  0000               	dw	0
   411  00FE53  4120               	dw	16672
   412  00FE55  0000               	dw	0
   413  00FE57  42C8               	dw	17096
   414  00FE59  0000               	dw	0
   415  00FE5B  447A               	dw	17530
   416  00FE5D  4000               	dw	16384
   417  00FE5F  461C               	dw	17948
   418  00FE61  5000               	dw	20480
   419  00FE63  47C3               	dw	18371
   420  00FE65  2400               	dw	9216
   421  00FE67  4974               	dw	18804
   422  00FE69  9680               	dw	38528
   423  00FE6B  4B18               	dw	19224
   424  00FE6D  BC20               	dw	48160
   425  00FE6F  4CBE               	dw	19646
   426  00FE71  6B28               	dw	27432
   427  00FE73  4E6E               	dw	20078
   428  00FE75  02F9               	dw	761
   429  00FE77  5015               	dw	20501
   430  00FE79  78EC               	dw	30956
   431  00FE7B  60AD               	dw	24749
   432  00FE7D  F2CA               	dw	62154
   433  00FE7F  7149               	dw	29001
   434  00FE81                     __end_of__powers_:
   435                           	callstack 0
   436  00FE81                     __npowers_:
   437                           	callstack 0
   438  00FE81  0000               	dw	0
   439  00FE83  3F80               	dw	16256
   440  00FE85  CCCD               	dw	52429
   441  00FE87  3DCC               	dw	15820
   442  00FE89  D70A               	dw	55050
   443  00FE8B  3C23               	dw	15395
   444  00FE8D  126F               	dw	4719
   445  00FE8F  3A83               	dw	14979
   446  00FE91  B717               	dw	46871
   447  00FE93  38D1               	dw	14545
   448  00FE95  C5AC               	dw	50604
   449  00FE97  3727               	dw	14119
   450  00FE99  37BD               	dw	14269
   451  00FE9B  3586               	dw	13702
   452  00FE9D  BF95               	dw	49045
   453  00FE9F  33D6               	dw	13270
   454  00FEA1  CC77               	dw	52343
   455  00FEA3  322B               	dw	12843
   456  00FEA5  705F               	dw	28767
   457  00FEA7  3089               	dw	12425
   458  00FEA9  E6FF               	dw	59135
   459  00FEAB  2EDB               	dw	11995
   460  00FEAD  E508               	dw	58632
   461  00FEAF  1E3C               	dw	7740
   462  00FEB1  4260               	dw	16992
   463  00FEB3  0DA2               	dw	3490
   464  00FEB5                     __end_of__npowers_:
   465                           	callstack 0
   466  00FEB5                     _hexpowers:
   467                           	callstack 0
   468  00FEB5  0001               	dw	1
   469  00FEB7  0000               	dw	0
   470  00FEB9  0010               	dw	16
   471  00FEBB  0000               	dw	0
   472  00FEBD  0100               	dw	256
   473  00FEBF  0000               	dw	0
   474  00FEC1  1000               	dw	4096
   475  00FEC3  0000               	dw	0
   476  00FEC5  0000               	dw	0
   477  00FEC7  0001               	dw	1
   478  00FEC9  0000               	dw	0
   479  00FECB  0010               	dw	16
   480  00FECD  0000               	dw	0
   481  00FECF  0100               	dw	256
   482  00FED1  0000               	dw	0
   483  00FED3  1000               	dw	4096
   484  00FED5                     __end_of_hexpowers:
   485                           	callstack 0
   486  00FED5                     _dpowers:
   487                           	callstack 0
   488  00FED5  0001               	dw	1
   489  00FED7  0000               	dw	0
   490  00FED9  000A               	dw	10
   491  00FEDB  0000               	dw	0
   492  00FEDD  0064               	dw	100
   493  00FEDF  0000               	dw	0
   494  00FEE1  03E8               	dw	1000
   495  00FEE3  0000               	dw	0
   496  00FEE5  2710               	dw	10000
   497  00FEE7  0000               	dw	0
   498  00FEE9  86A0               	dw	34464
   499  00FEEB  0001               	dw	1
   500  00FEED  4240               	dw	16960
   501  00FEEF  000F               	dw	15
   502  00FEF1  9680               	dw	38528
   503  00FEF3  0098               	dw	152
   504  00FEF5  E100               	dw	57600
   505  00FEF7  05F5               	dw	1525
   506  00FEF9  CA00               	dw	51712
   507  00FEFB  3B9A               	dw	15258
   508  00FEFD                     __end_of_dpowers:
   509                           	callstack 0
   510  0000                     _ANSELCbits	set	3898
   511  0000                     _PMD2	set	3901
   512  0000                     _PMD1	set	3902
   513  0000                     _PMD0	set	3903
   514  0000                     _ANSELDbits	set	3899
   515  0000                     _VREFCON0bits	set	3906
   516  0000                     _ANSELBbits	set	3897
   517  0000                     _ANSELEbits	set	3900
   518  0000                     _ANSELAbits	set	3896
   519  0000                     _PMD1bits	set	3902
   520  0000                     _PMD0bits	set	3903
   521  0000                     _PMD2bits	set	3901
   522  0000                     _SSPBUF	set	4041
   523  0000                     _SSP1BUF	set	4041
   524  0000                     _PIR1bits	set	3998
   525  0000                     _SSP1CON2bits	set	4037
   526  0000                     _SSP1CON2	set	4037
   527  0000                     _SSP1STAT	set	4039
   528  0000                     _PORTCbits	set	3970
   529  0000                     _SSP1ADD	set	4040
   530  0000                     _SSP1CON1	set	4038
   531  0000                     _TXREG2	set	3955
   532  0000                     _SPBRG2	set	3957
   533  0000                     _SPBRGH2	set	3958
   534  0000                     _BAUDCON2bits	set	3952
   535  0000                     _RCSTA2bits	set	3953
   536  0000                     _TXSTA2bits	set	3954
   537  0000                     _SSP2BUF	set	3951
   538  0000                     _SSP2STATbits	set	3949
   539  0000                     _SSP2CON1bits	set	3948
   540  0000                     _ADCON2bits	set	4032
   541  0000                     _ADRESL	set	4035
   542  0000                     _ADRESH	set	4036
   543  0000                     _ADCON1bits	set	4033
   544  0000                     _LATDbits	set	3980
   545  0000                     _TRISDbits	set	3989
   546  0000                     _LATCbits	set	3979
   547  0000                     _TRISCbits	set	3988
   548  0000                     _LATE	set	3981
   549  0000                     _LATD	set	3980
   550  0000                     _LATC	set	3979
   551  0000                     _LATB	set	3978
   552  0000                     _LATA	set	3977
   553  0000                     _TRISE	set	3990
   554  0000                     _TRISD	set	3989
   555  0000                     _TRISC	set	3988
   556  0000                     _TRISB	set	3987
   557  0000                     _TRISA	set	3986
   558  0000                     _ADCON0bits	set	4034
   559  0000                     _TRISEbits	set	3990
   560  0000                     _LATAbits	set	3977
   561  0000                     _TRISAbits	set	3986
   562  0000                     _LATEbits	set	3981
   563  0000                     _ACKEN1	set	32300
   564  0000                     _ACKDT1	set	32301
   565  0000                     _RCEN1	set	32299
   566  0000                     _TRMT2	set	31633
   567  0000                     _SSP2IF	set	32039
   568  00FEFD  57                 	db	87	;'W'
   569  00FEFE  61                 	db	97	;'a'
   570  00FEFF  69                 	db	105	;'i'
   571  00FF00  74                 	db	116	;'t'
   572  00FF01  20                 	db	32
   573  00FF02  66                 	db	102	;'f'
   574  00FF03  6F                 	db	111	;'o'
   575  00FF04  72                 	db	114	;'r'
   576  00FF05  20                 	db	32
   577  00FF06  65                 	db	101	;'e'
   578  00FF07  6E                 	db	110	;'n'
   579  00FF08  64                 	db	100	;'d'
   580  00FF09  20                 	db	32
   581  00FF0A  6F                 	db	111	;'o'
   582  00FF0B  66                 	db	102	;'f'
   583  00FF0C  20                 	db	32
   584  00FF0D  74                 	db	116	;'t'
   585  00FF0E  72                 	db	114	;'r'
   586  00FF0F  61                 	db	97	;'a'
   587  00FF10  6E                 	db	110	;'n'
   588  00FF11  73                 	db	115	;'s'
   589  00FF12  6D                 	db	109	;'m'
   590  00FF13  69                 	db	105	;'i'
   591  00FF14  73                 	db	115	;'s'
   592  00FF15  73                 	db	115	;'s'
   593  00FF16  69                 	db	105	;'i'
   594  00FF17  6F                 	db	111	;'o'
   595  00FF18  6E                 	db	110	;'n'
   596  00FF19  2E                 	db	46
   597  00FF1A  2E                 	db	46
   598  00FF1B  2E                 	db	46
   599  00FF1C  0D                 	db	13
   600  00FF1D  0A                 	db	10
   601  00FF1E  00                 	db	0
   602  00FF1F  4C                 	db	76	;'L'
   603  00FF20  6F                 	db	111	;'o'
   604  00FF21  52                 	db	82	;'R'
   605  00FF22  61                 	db	97	;'a'
   606  00FF23  38                 	db	56	;'8'
   607  00FF24  36                 	db	54	;'6'
   608  00FF25  38                 	db	56	;'8'
   609  00FF26  20                 	db	32
   610  00FF27  55                 	db	85	;'U'
   611  00FF28  56                 	db	86	;'V'
   612  00FF29  2F                 	db	47
   613  00FF2A  56                 	db	86	;'V'
   614  00FF2B  69                 	db	105	;'i'
   615  00FF2C  73                 	db	115	;'s'
   616  00FF2D  69                 	db	105	;'i'
   617  00FF2E  62                 	db	98	;'b'
   618  00FF2F  6C                 	db	108	;'l'
   619  00FF30  65                 	db	101	;'e'
   620  00FF31  20                 	db	32
   621  00FF32  4C                 	db	76	;'L'
   622  00FF33  69                 	db	105	;'i'
   623  00FF34  67                 	db	103	;'g'
   624  00FF35  68                 	db	104	;'h'
   625  00FF36  74                 	db	116	;'t'
   626  00FF37  20                 	db	32
   627  00FF38  53                 	db	83	;'S'
   628  00FF39  65                 	db	101	;'e'
   629  00FF3A  6E                 	db	110	;'n'
   630  00FF3B  73                 	db	115	;'s'
   631  00FF3C  6F                 	db	111	;'o'
   632  00FF3D  72                 	db	114	;'r'
   633  00FF3E  0D                 	db	13
   634  00FF3F  0A                 	db	10
   635  00FF40  00                 	db	0
   636  00FF41  53                 	db	83	;'S'
   637  00FF42  74                 	db	116	;'t'
   638  00FF43  61                 	db	97	;'a'
   639  00FF44  72                 	db	114	;'r'
   640  00FF45  74                 	db	116	;'t'
   641  00FF46  69                 	db	105	;'i'
   642  00FF47  6E                 	db	110	;'n'
   643  00FF48  67                 	db	103	;'g'
   644  00FF49  20                 	db	32
   645  00FF4A  74                 	db	116	;'t'
   646  00FF4B  72                 	db	114	;'r'
   647  00FF4C  61                 	db	97	;'a'
   648  00FF4D  6E                 	db	110	;'n'
   649  00FF4E  73                 	db	115	;'s'
   650  00FF4F  6D                 	db	109	;'m'
   651  00FF50  69                 	db	105	;'i'
   652  00FF51  74                 	db	116	;'t'
   653  00FF52  74                 	db	116	;'t'
   654  00FF53  65                 	db	101	;'e'
   655  00FF54  72                 	db	114	;'r'
   656  00FF55  2E                 	db	46
   657  00FF56  2E                 	db	46
   658  00FF57  2E                 	db	46
   659  00FF58  0D                 	db	13
   660  00FF59  0A                 	db	10
   661  00FF5A  00                 	db	0
   662  00FF5B  54                 	db	84	;'T'
   663  00FF5C  72                 	db	114	;'r'
   664  00FF5D  61                 	db	97	;'a'
   665  00FF5E  6E                 	db	110	;'n'
   666  00FF5F  73                 	db	115	;'s'
   667  00FF60  6D                 	db	109	;'m'
   668  00FF61  69                 	db	105	;'i'
   669  00FF62  74                 	db	116	;'t'
   670  00FF63  74                 	db	116	;'t'
   671  00FF64  69                 	db	105	;'i'
   672  00FF65  6E                 	db	110	;'n'
   673  00FF66  67                 	db	103	;'g'
   674  00FF67  2E                 	db	46
   675  00FF68  2E                 	db	46
   676  00FF69  2E                 	db	46
   677  00FF6A  2E                 	db	46
   678  00FF6B  20                 	db	32
   679  00FF6C  00                 	db	0
   680  00FF6D                     STR_19:
   681  00FF6D  30                 	db	48	;'0'
   682  00FF6E  31                 	db	49	;'1'
   683  00FF6F  32                 	db	50	;'2'
   684  00FF70  33                 	db	51	;'3'
   685  00FF71  34                 	db	52	;'4'
   686  00FF72  35                 	db	53	;'5'
   687  00FF73  36                 	db	54	;'6'
   688  00FF74  37                 	db	55	;'7'
   689  00FF75  38                 	db	56	;'8'
   690  00FF76  39                 	db	57	;'9'
   691  00FF77  41                 	db	65	;'A'
   692  00FF78  42                 	db	66	;'B'
   693  00FF79  43                 	db	67	;'C'
   694  00FF7A  44                 	db	68	;'D'
   695  00FF7B  45                 	db	69	;'E'
   696  00FF7C  46                 	db	70	;'F'
   697  00FF7D  00                 	db	0
   698  00FF7E  52                 	db	82	;'R'
   699  00FF7F  65                 	db	101	;'e'
   700  00FF80  67                 	db	103	;'g'
   701  00FF81  20                 	db	32
   702  00FF82  25                 	db	37
   703  00FF83  58                 	db	88	;'X'
   704  00FF84  3A                 	db	58	;':'
   705  00FF85  25                 	db	37
   706  00FF86  58                 	db	88	;'X'
   707  00FF87  0D                 	db	13
   708  00FF88  0A                 	db	10
   709  00FF89  00                 	db	0
   710  00FF8A  53                 	db	83	;'S'
   711  00FF8B  6C                 	db	108	;'l'
   712  00FF8C  65                 	db	101	;'e'
   713  00FF8D  65                 	db	101	;'e'
   714  00FF8E  70                 	db	112	;'p'
   715  00FF8F  69                 	db	105	;'i'
   716  00FF90  6E                 	db	110	;'n'
   717  00FF91  67                 	db	103	;'g'
   718  00FF92  0D                 	db	13
   719  00FF93  0A                 	db	10
   720  00FF94  00                 	db	0
   721  00FF95  54                 	db	84	;'T'
   722  00FF96  58                 	db	88	;'X'
   723  00FF97  20                 	db	32
   724  00FF98  4D                 	db	77	;'M'
   725  00FF99  6F                 	db	111	;'o'
   726  00FF9A  64                 	db	100	;'d'
   727  00FF9B  65                 	db	101	;'e'
   728  00FF9C  0D                 	db	13
   729  00FF9D  0A                 	db	10
   730  00FF9E  00                 	db	0
   731  00FF9F  43                 	db	67	;'C'
   732  00FFA0  4D                 	db	77	;'M'
   733  00FFA1  50                 	db	80	;'P'
   734  00FFA2  31                 	db	49	;'1'
   735  00FFA3  20                 	db	32
   736  00FFA4  25                 	db	37
   737  00FFA5  64                 	db	100	;'d'
   738  00FFA6  0D                 	db	13
   739  00FFA7  0A                 	db	10
   740  00FFA8  00                 	db	0
   741  00FFA9  43                 	db	67	;'C'
   742  00FFAA  4D                 	db	77	;'M'
   743  00FFAB  50                 	db	80	;'P'
   744  00FFAC  32                 	db	50	;'2'
   745  00FFAD  20                 	db	32
   746  00FFAE  25                 	db	37
   747  00FFAF  64                 	db	100	;'d'
   748  00FFB0  0D                 	db	13
   749  00FFB1  0A                 	db	10
   750  00FFB2  00                 	db	0
   751  00FFB3  54                 	db	84	;'T'
   752  00FFB4  45                 	db	69	;'E'
   753  00FFB5  4D                 	db	77	;'M'
   754  00FFB6  50                 	db	80	;'P'
   755  00FFB7  20                 	db	32
   756  00FFB8  25                 	db	37
   757  00FFB9  64                 	db	100	;'d'
   758  00FFBA  0D                 	db	13
   759  00FFBB  0A                 	db	10
   760  00FFBC  00                 	db	0
   761  00FFBD  42                 	db	66	;'B'
   762  00FFBE  41                 	db	65	;'A'
   763  00FFBF  54                 	db	84	;'T'
   764  00FFC0  54                 	db	84	;'T'
   765  00FFC1  20                 	db	32
   766  00FFC2  25                 	db	37
   767  00FFC3  64                 	db	100	;'d'
   768  00FFC4  0D                 	db	13
   769  00FFC5  0A                 	db	10
   770  00FFC6  00                 	db	0
   771  00FFC7  54                 	db	84	;'T'
   772  00FFC8  58                 	db	88	;'X'
   773  00FFC9  46                 	db	70	;'F'
   774  00FFCA  3A                 	db	58	;':'
   775  00FFCB  20                 	db	32
   776  00FFCC  25                 	db	37
   777  00FFCD  66                 	db	102	;'f'
   778  00FFCE  0D                 	db	13
   779  00FFCF  0A                 	db	10
   780  00FFD0  00                 	db	0
   781  00FFD1  54                 	db	84	;'T'
   782  00FFD2  58                 	db	88	;'X'
   783  00FFD3  20                 	db	32
   784  00FFD4  46                 	db	70	;'F'
   785  00FFD5  61                 	db	97	;'a'
   786  00FFD6  69                 	db	105	;'i'
   787  00FFD7  6C                 	db	108	;'l'
   788  00FFD8  0D                 	db	13
   789  00FFD9  0A                 	db	10
   790  00FFDA  00                 	db	0
   791  00FFDB  55                 	db	85	;'U'
   792  00FFDC  56                 	db	86	;'V'
   793  00FFDD  41                 	db	65	;'A'
   794  00FFDE  20                 	db	32
   795  00FFDF  25                 	db	37
   796  00FFE0  64                 	db	100	;'d'
   797  00FFE1  0D                 	db	13
   798  00FFE2  0A                 	db	10
   799  00FFE3  00                 	db	0
   800  00FFE4  55                 	db	85	;'U'
   801  00FFE5  56                 	db	86	;'V'
   802  00FFE6  42                 	db	66	;'B'
   803  00FFE7  20                 	db	32
   804  00FFE8  25                 	db	37
   805  00FFE9  64                 	db	100	;'d'
   806  00FFEA  0D                 	db	13
   807  00FFEB  0A                 	db	10
   808  00FFEC  00                 	db	0
   809  00FFED  56                 	db	86	;'V'
   810  00FFEE  49                 	db	73	;'I'
   811  00FFEF  53                 	db	83	;'S'
   812  00FFF0  20                 	db	32
   813  00FFF1  25                 	db	37
   814  00FFF2  64                 	db	100	;'d'
   815  00FFF3  0D                 	db	13
   816  00FFF4  0A                 	db	10
   817  00FFF5  00                 	db	0
   818  00FFF6                     STR_14:
   819  00FFF6  44                 	db	68	;'D'
   820  00FFF7  6F                 	db	111	;'o'
   821  00FFF8  6E                 	db	110	;'n'
   822  00FFF9  65                 	db	101	;'e'
   823  00FFFA  2E                 	db	46
   824  00FFFB  0D                 	db	13
   825  00FFFC  0A                 	db	10
   826  00FFFD  00                 	db	0
   827  00FFFE  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           ; #config settings
   830                           
   831                           	psect	cinit
   832  00D6E2                     __pcinit:
   833                           	callstack 0
   834  00D6E2                     start_initialization:
   835                           	callstack 0
   836  00D6E2                     __initialization:
   837                           	callstack 0
   838                           
   839                           ; Initialize objects allocated to BANK0 (8 bytes)
   840                           ; load TBLPTR registers with __pidataBANK0
   841  00D6E2  0EA8               	movlw	low __pidataBANK0
   842  00D6E4  6EF6               	movwf	tblptrl,c
   843  00D6E6  0ED1               	movlw	high __pidataBANK0
   844  00D6E8  6EF7               	movwf	tblptrh,c
   845  00D6EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   846  00D6EC  6EF8               	movwf	tblptru,c
   847  00D6EE  EE00  F0C3         	lfsr	0,__pdataBANK0
   848  00D6F2  EE10 F008          	lfsr	1,8
   849  00D6F6                     copy_data0:
   850  00D6F6  0009               	tblrd		*+
   851  00D6F8  CFF5 FFEE          	movff	tablat,postinc0
   852  00D6FC  50E5               	movf	postdec1,w,c
   853  00D6FE  50E1               	movf	fsr1l,w,c
   854  00D700  E1FA               	bnz	copy_data0
   855                           
   856                           ; Initialize objects allocated to COMRAM (1 bytes)
   857                           ; load TBLPTR registers with __pidataCOMRAM
   858  00D702  0E81               	movlw	low __pidataCOMRAM
   859  00D704  6EF6               	movwf	tblptrl,c
   860  00D706  0ED1               	movlw	high __pidataCOMRAM
   861  00D708  6EF7               	movwf	tblptrh,c
   862  00D70A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   863  00D70C  6EF8               	movwf	tblptru,c
   864  00D70E  0009               	tblrd		*+	;fetch initializer
   865  00D710  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   866                           
   867                           ; Clear objects allocated to BANK0 (68 bytes)
   868  00D714  EE00  F060         	lfsr	0,__pbssBANK0
   869  00D718  0E44               	movlw	68
   870  00D71A                     clear_0:
   871  00D71A  6AEE               	clrf	postinc0,c
   872  00D71C  06E8               	decf	wreg,f,c
   873  00D71E  E1FD               	bnz	clear_0
   874                           
   875                           ; Clear objects allocated to COMRAM (1 bytes)
   876  00D720  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   877  00D722                     end_of_initialization:
   878                           	callstack 0
   879  00D722                     __end_of__initialization:
   880                           	callstack 0
   881  00D722  0E00               	movlw	low (__Lmediumconst shr (0+16))
   882  00D724  6EF8               	movwf	tblptru,c
   883  00D726  0100               	movlb	0
   884  00D728  EF88  F06F         	goto	_main	;jump to C main() function
   885                           
   886                           	psect	bssCOMRAM
   887  00005E                     __pbssCOMRAM:
   888                           	callstack 0
   889  00005E                     _i2cFault:
   890                           	callstack 0
   891  00005E                     	ds	1
   892                           
   893                           	psect	dataCOMRAM
   894  00005F                     __pdataCOMRAM:
   895                           	callstack 0
   896  00005F                     _bh1750Address:
   897                           	callstack 0
   898  00005F                     	ds	1
   899                           
   900                           	psect	bssBANK0
   901  000060                     __pbssBANK0:
   902                           	callstack 0
   903  000060                     _messageCount:
   904                           	callstack 0
   905  000060                     	ds	4
   906  000064                     _temp:
   907                           	callstack 0
   908  000064                     	ds	2
   909  000066                     _batt:
   910                           	callstack 0
   911  000066                     	ds	2
   912  000068                     _vis:
   913                           	callstack 0
   914  000068                     	ds	2
   915  00006A                     _comp2Reading:
   916                           	callstack 0
   917  00006A                     	ds	2
   918  00006C                     _comp1Reading:
   919                           	callstack 0
   920  00006C                     	ds	2
   921  00006E                     _uvbReading:
   922                           	callstack 0
   923  00006E                     	ds	2
   924  000070                     _uvaReading:
   925                           	callstack 0
   926  000070                     	ds	2
   927  000072                     _txData:
   928                           	callstack 0
   929  000072                     	ds	50
   930                           
   931                           	psect	dataBANK0
   932  0000C3                     __pdataBANK0:
   933                           	callstack 0
   934  0000C3                     _address:
   935                           	callstack 0
   936  0000C3                     	ds	8
   937                           
   938                           	psect	cstackBANK0
   939  0000A4                     __pcstackBANK0:
   940                           	callstack 0
   941  0000A4                     _printf$2776:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x0
   945  0000A4                     	ds	4
   946  0000A8                     printf@idx:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x4
   950  0000A8                     	ds	1
   951  0000A9                     printf@ap:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x5
   955  0000A9                     	ds	1
   956  0000AA                     printf@flag:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x6
   960  0000AA                     	ds	2
   961  0000AC                     printf@prec:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x8
   965  0000AC                     	ds	2
   966  0000AE                     printf@eexp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xA
   970  0000AE                     	ds	2
   971  0000B0                     printf@tmpval:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0xC
   975  0000B0                     	ds	4
   976  0000B4                     printf@val:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x10
   980  0000B4                     	ds	4
   981  0000B8                     printf@fval:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x14
   985  0000B8                     	ds	4
   986  0000BC                     printf@c:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x18
   990  0000BC                     	ds	1
   991  0000BD                     transmitValues@flags:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x19
   995  0000BD                     	ds	1
   996  0000BE                     transmitValues@calcCRC:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1A
  1000  0000BE                     	ds	2
  1001  0000C0                     transmitValues@i_810:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x1C
  1005  0000C0                     	ds	1
  1006  0000C1                     transmitValues@j:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x1D
  1010  0000C1                     	ds	1
  1011  0000C2                     transmitValues@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x1E
  1015  0000C2                     	ds	1
  1016                           
  1017                           	psect	cstackCOMRAM
  1018  000001                     __pcstackCOMRAM:
  1019                           	callstack 0
  1020  000001                     ??_I2C1_Check_Data_Stuck:
  1021  000001                     ??_LoRaReset:
  1022  000001                     ??_I2C1_Wait:
  1023  000001                     ?_readBattery:
  1024                           	callstack 0
  1025  000001                     ?_readTemperature:
  1026                           	callstack 0
  1027  000001                     ?_CRC16:
  1028                           	callstack 0
  1029  000001                     ?___wmul:
  1030                           	callstack 0
  1031  000001                     ?___awmod:
  1032                           	callstack 0
  1033  000001                     ?__tdiv_to_l_:
  1034                           	callstack 0
  1035  000001                     ?__div_to_l_:
  1036                           	callstack 0
  1037  000001                     ?___lldiv:
  1038                           	callstack 0
  1039  000001                     ?___flneg:
  1040                           	callstack 0
  1041  000001                     ?___xxtofl:
  1042                           	callstack 0
  1043  000001                     SPI2WriteByte@data:
  1044                           	callstack 0
  1045  000001                     SPI2ReadByte@address:
  1046                           	callstack 0
  1047  000001                     USART2_Start@baudrate:
  1048                           	callstack 0
  1049  000001                     putch@data:
  1050                           	callstack 0
  1051  000001                     setBH1750Address@add:
  1052                           	callstack 0
  1053  000001                     CRC16@nData:
  1054                           	callstack 0
  1055  000001                     ___lbmod@divisor:
  1056                           	callstack 0
  1057  000001                     ___wmul@multiplier:
  1058                           	callstack 0
  1059  000001                     ___awmod@dividend:
  1060                           	callstack 0
  1061  000001                     ___lldiv@dividend:
  1062                           	callstack 0
  1063  000001                     __div_to_l_@f1:
  1064                           	callstack 0
  1065  000001                     ___fleq@ff1:
  1066                           	callstack 0
  1067  000001                     ___flge@ff1:
  1068                           	callstack 0
  1069  000001                     ___flneg@f1:
  1070                           	callstack 0
  1071  000001                     __tdiv_to_l_@f1:
  1072                           	callstack 0
  1073  000001                     ___xxtofl@val:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x0
  1077  000001                     	ds	1
  1078  000002                     SPI2ReadByte@dataByte:
  1079                           	callstack 0
  1080  000002                     I2C1_Check_Data_Stuck@i:
  1081                           	callstack 0
  1082  000002                     I2C1_Wait@tries:
  1083                           	callstack 0
  1084  000002                     ___lbmod@dividend:
  1085                           	callstack 0
  1086  000002                     CRC16@wLength:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x1
  1090  000002                     	ds	1
  1091  000003                     ??_readBattery:
  1092  000003                     ??_readTemperature:
  1093  000003                     SPI2WriteByte@address:
  1094                           	callstack 0
  1095  000003                     LoRaGetIRQFlags@regValue:
  1096                           	callstack 0
  1097  000003                     I2C1_Write_Byte_Read_Ack@d:
  1098                           	callstack 0
  1099  000003                     I2C1_Read_Byte@a:
  1100                           	callstack 0
  1101  000003                     ___lbmod@counter:
  1102                           	callstack 0
  1103  000003                     ___wmul@multiplicand:
  1104                           	callstack 0
  1105  000003                     ___awmod@divisor:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  000003                     	ds	1
  1110  000004                     ??_CRC16:
  1111  000004                     writeOpModeRegister@regValue:
  1112                           	callstack 0
  1113  000004                     I2C1_Write_Byte_Read_Ack@tries:
  1114                           	callstack 0
  1115  000004                     I2C1_Read_Byte@temp:
  1116                           	callstack 0
  1117  000004                     ___lbmod@rem:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x3
  1121  000004                     	ds	1
  1122  000005                     ??___xxtofl:
  1123  000005                     ?_BH1750ReadValue:
  1124                           	callstack 0
  1125  000005                     ?_readVEML6075:
  1126                           	callstack 0
  1127  000005                     setLoRaMode@regValue:
  1128                           	callstack 0
  1129  000005                     LoRaStandbyMode@regValue:
  1130                           	callstack 0
  1131  000005                     LoRaSleepMode@regValue:
  1132                           	callstack 0
  1133  000005                     writeVEML6075@command:
  1134                           	callstack 0
  1135  000005                     readVEML6075@command:
  1136                           	callstack 0
  1137  000005                     BH1750WriteCommand@command:
  1138                           	callstack 0
  1139  000005                     ___awmod@counter:
  1140                           	callstack 0
  1141  000005                     ___lbdiv@divisor:
  1142                           	callstack 0
  1143  000005                     readBattery@result:
  1144                           	callstack 0
  1145  000005                     readTemperature@result:
  1146                           	callstack 0
  1147  000005                     ___wmul@product:
  1148                           	callstack 0
  1149  000005                     ___lldiv@divisor:
  1150                           	callstack 0
  1151  000005                     __div_to_l_@f2:
  1152                           	callstack 0
  1153  000005                     ___fleq@ff2:
  1154                           	callstack 0
  1155  000005                     ___flge@ff2:
  1156                           	callstack 0
  1157  000005                     __tdiv_to_l_@f2:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x4
  1161  000005                     	ds	1
  1162  000006                     ??_LoRaOptimalLoad:
  1163  000006                     writeVEML6075@dataByteLow:
  1164                           	callstack 0
  1165  000006                     BH1750WriteCommand@address:
  1166                           	callstack 0
  1167  000006                     CRC16@nTemp:
  1168                           	callstack 0
  1169  000006                     ___awmod@sign:
  1170                           	callstack 0
  1171  000006                     ___lbdiv@dividend:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x5
  1175  000006                     	ds	1
  1176  000007                     ??_BH1750ReadValue:
  1177  000007                     ??_readVEML6075:
  1178  000007                     ?___awdiv:
  1179                           	callstack 0
  1180  000007                     LoRaOptimalLoad@syncWord:
  1181                           	callstack 0
  1182  000007                     writeVEML6075@dataByteHigh:
  1183                           	callstack 0
  1184  000007                     ___lbdiv@counter:
  1185                           	callstack 0
  1186  000007                     CRC16@wCRCWord:
  1187                           	callstack 0
  1188  000007                     ___awdiv@dividend:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x6
  1192  000007                     	ds	1
  1193  000008                     writeVEML6075@address:
  1194                           	callstack 0
  1195  000008                     ___lbdiv@quotient:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x7
  1199  000008                     	ds	1
  1200  000009                     ??__tdiv_to_l_:
  1201  000009                     ??___fleq:
  1202  000009                     ??___flge:
  1203  000009                     readVEML6075@lsb:
  1204                           	callstack 0
  1205  000009                     VEML6075Start@configLSB:
  1206                           	callstack 0
  1207  000009                     BH1750ReadValue@msb:
  1208                           	callstack 0
  1209  000009                     ___xxtofl@sign:
  1210                           	callstack 0
  1211  000009                     ___awdiv@divisor:
  1212                           	callstack 0
  1213  000009                     ___lldiv@quotient:
  1214                           	callstack 0
  1215  000009                     __div_to_l_@quot:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x8
  1219  000009                     	ds	1
  1220  00000A                     readVEML6075@msb:
  1221                           	callstack 0
  1222  00000A                     BH1750ReadValue@lsb:
  1223                           	callstack 0
  1224  00000A                     ___xxtofl@exp:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x9
  1228  00000A                     	ds	1
  1229  00000B                     readVEML6075@address:
  1230                           	callstack 0
  1231  00000B                     ___awdiv@counter:
  1232                           	callstack 0
  1233  00000B                     ___xxtofl@arg:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0xA
  1237  00000B                     	ds	1
  1238  00000C                     ___awdiv@sign:
  1239                           	callstack 0
  1240  00000C                     __tdiv_to_l_@quot:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0xB
  1244  00000C                     	ds	1
  1245  00000D                     ___lldiv@counter:
  1246                           	callstack 0
  1247  00000D                     __div_to_l_@cntr:
  1248                           	callstack 0
  1249  00000D                     ___awdiv@quotient:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0xC
  1253  00000D                     	ds	1
  1254  00000E                     ?___llmod:
  1255                           	callstack 0
  1256  00000E                     __div_to_l_@exp1:
  1257                           	callstack 0
  1258  00000E                     I2C1_Initialize@c:
  1259                           	callstack 0
  1260  00000E                     ___llmod@dividend:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0xD
  1264  00000E                     	ds	1
  1265  00000F                     ?___fldiv:
  1266                           	callstack 0
  1267  00000F                     ?___flmul:
  1268                           	callstack 0
  1269  00000F                     ___fldiv@b:
  1270                           	callstack 0
  1271  00000F                     ___flmul@b:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0xE
  1275  00000F                     	ds	1
  1276  000010                     __tdiv_to_l_@cntr:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0xF
  1280  000010                     	ds	1
  1281  000011                     __tdiv_to_l_@exp1:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x10
  1285  000011                     	ds	1
  1286  000012                     ??_I2C1_Initialize:
  1287  000012                     ___llmod@divisor:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x11
  1291  000012                     	ds	1
  1292  000013                     ___fldiv@a:
  1293                           	callstack 0
  1294  000013                     ___flmul@a:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x12
  1298  000013                     	ds	3
  1299  000016                     ___llmod@counter:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x15
  1303  000016                     	ds	1
  1304  000017                     ??___fldiv:
  1305  000017                     ??___flmul:
  1306                           
  1307                           ; 1 bytes @ 0x16
  1308  000017                     	ds	4
  1309  00001B                     ___flmul@sign:
  1310                           	callstack 0
  1311  00001B                     ___fldiv@rem:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x1A
  1315  00001B                     	ds	1
  1316  00001C                     ___flmul@aexp:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x1B
  1320  00001C                     	ds	1
  1321  00001D                     ___flmul@grs:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x1C
  1325  00001D                     	ds	2
  1326  00001F                     ___fldiv@sign:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x1E
  1330  00001F                     	ds	1
  1331  000020                     ___fldiv@new_exp:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x1F
  1335  000020                     	ds	1
  1336  000021                     ___flmul@bexp:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x20
  1340  000021                     	ds	1
  1341  000022                     ___fldiv@grs:
  1342                           	callstack 0
  1343  000022                     ___flmul@prod:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x21
  1347  000022                     	ds	4
  1348  000026                     ___fldiv@bexp:
  1349                           	callstack 0
  1350  000026                     ___flmul@temp:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x25
  1354  000026                     	ds	1
  1355  000027                     ___fldiv@aexp:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x26
  1359  000027                     	ds	1
  1360  000028                     ?_LoRaGetFrequency:
  1361                           	callstack 0
  1362  000028                     ?_fround:
  1363                           	callstack 0
  1364  000028                     ?_scale:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x27
  1368  000028                     	ds	4
  1369  00002C                     ??_LoRaGetFrequency:
  1370  00002C                     ??_fround:
  1371  00002C                     _scale$2775:
  1372                           	callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x2B
  1375  00002C                     	ds	2
  1376  00002E                     _fround$2774:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x2D
  1380  00002E                     	ds	2
  1381  000030                     scale@scl:
  1382                           	callstack 0
  1383                           
  1384                           ; 1 bytes @ 0x2F
  1385  000030                     	ds	1
  1386  000031                     ?___fltol:
  1387                           	callstack 0
  1388  000031                     ___fltol@f1:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x30
  1392  000031                     	ds	1
  1393  000032                     _fround$2773:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x31
  1397  000032                     	ds	3
  1398  000035                     ??___fltol:
  1399                           
  1400                           ; 1 bytes @ 0x34
  1401  000035                     	ds	1
  1402  000036                     fround@prec:
  1403                           	callstack 0
  1404                           
  1405                           ; 1 bytes @ 0x35
  1406  000036                     	ds	1
  1407  000037                     ?___fladd:
  1408                           	callstack 0
  1409  000037                     ___fladd@b:
  1410                           	callstack 0
  1411                           
  1412                           ; 4 bytes @ 0x36
  1413  000037                     	ds	1
  1414  000038                     LoRaGetFrequency@intermediate:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x37
  1418  000038                     	ds	1
  1419  000039                     ___fltol@sign1:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0x38
  1423  000039                     	ds	1
  1424  00003A                     ___fltol@exp1:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x39
  1428  00003A                     	ds	1
  1429  00003B                     LoRaSetFrequency@freqMHz:
  1430                           	callstack 0
  1431  00003B                     ___fladd@a:
  1432                           	callstack 0
  1433                           
  1434                           ; 4 bytes @ 0x3A
  1435  00003B                     	ds	1
  1436  00003C                     LoRaGetFrequency@freqMHz:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x3B
  1440  00003C                     	ds	3
  1441  00003F                     ??___fladd:
  1442  00003F                     LoRaSetFrequency@msb:
  1443                           	callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x3E
  1446  00003F                     	ds	1
  1447  000040                     LoRaSetFrequency@mid:
  1448                           	callstack 0
  1449  000040                     LoRaGetFrequency@msb:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x3F
  1453  000040                     	ds	1
  1454  000041                     LoRaSetFrequency@lsb:
  1455                           	callstack 0
  1456  000041                     LoRaGetFrequency@mid:
  1457                           	callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x40
  1460  000041                     	ds	1
  1461  000042                     LoRaGetFrequency@lsb:
  1462                           	callstack 0
  1463  000042                     LoRaSetFrequency@intermediate:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x41
  1467  000042                     	ds	1
  1468  000043                     ___fladd@signs:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x42
  1472  000043                     	ds	1
  1473  000044                     ___fladd@aexp:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x43
  1477  000044                     	ds	1
  1478  000045                     ___fladd@bexp:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x44
  1482  000045                     	ds	1
  1483  000046                     ___fladd@grs:
  1484                           	callstack 0
  1485  000046                     LoRaStart@freq:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x45
  1489  000046                     	ds	1
  1490  000047                     ?___flsub:
  1491                           	callstack 0
  1492  000047                     ___flsub@b:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x46
  1496  000047                     	ds	3
  1497  00004A                     LoRaStart@syncWord:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x49
  1501  00004A                     	ds	1
  1502  00004B                     ??_LoRaStart:
  1503  00004B                     ___flsub@a:
  1504                           	callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x4A
  1507  00004B                     	ds	4
  1508  00004F                     ?_printf:
  1509                           	callstack 0
  1510  00004F                     printf@f:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x4E
  1514  00004F                     	ds	6
  1515  000055                     ??_printf:
  1516                           
  1517                           ; 1 bytes @ 0x54
  1518  000055                     	ds	2
  1519  000057                     LoRaTXMode@regValue:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x56
  1523  000057                     	ds	1
  1524  000058                     LoRaTXData@data:
  1525                           	callstack 0
  1526                           
  1527                           ; 1 bytes @ 0x57
  1528  000058                     	ds	1
  1529  000059                     LoRaTXData@dataLength:
  1530                           	callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x58
  1533  000059                     	ds	1
  1534  00005A                     LoRaTXData@i:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x59
  1538  00005A                     	ds	1
  1539  00005B                     ??_transmitValues:
  1540                           
  1541                           ; 1 bytes @ 0x5A
  1542  00005B                     	ds	1
  1543  00005C                     ??_main:
  1544                           
  1545                           ; 1 bytes @ 0x5B
  1546  00005C                     	ds	2
  1547                           
  1548 ;;
  1549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1550 ;;
  1551 ;; *************** function _main *****************
  1552 ;; Defined at:
  1553 ;;		line 94 in file "main.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels required when called:    6
  1573 ;; This function calls:
  1574 ;;		_configureIO
  1575 ;;		_printf
  1576 ;;		_readBattery
  1577 ;;		_readTemperature
  1578 ;;		_readUV
  1579 ;;		_readVisValue
  1580 ;;		_setBH1750ContinuousHResolutionMode
  1581 ;;		_transmitValues
  1582 ;;		_turnStuffOff
  1583 ;; This function is called by:
  1584 ;;		Startup code after reset
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text0
  1589  00DF10                     __ptext0:
  1590                           	callstack 0
  1591  00DF10                     _main:
  1592                           	callstack 25
  1593                           
  1594                           ;main.c: 96: configureIO();
  1595                           
  1596                           ;incstack = 0
  1597                           ;main.c: 95: start:
  1598  00DF10  ECE2  F06A         	call	_configureIO	;wreg free
  1599                           
  1600                           ;main.c: 101: };main.c: 102: setBH1750ContinuousHResolutionMode();
  1601                           
  1602                           ;main.c: 99: if(0){
  1603  00DF14  ECDD  F068         	call	_setBH1750ContinuousHResolutionMode	;wreg free
  1604                           
  1605                           ;main.c: 103: _delay((unsigned long)((180)*(64000000/4000.0)));
  1606  00DF18  0E0F               	movlw	15
  1607  00DF1A  6E5D               	movwf	(??_main+1)^0,c
  1608  00DF1C  0E9D               	movlw	157
  1609  00DF1E  6E5C               	movwf	??_main^0,c
  1610  00DF20  0E36               	movlw	54
  1611  00DF22                     u4237:
  1612  00DF22  2EE8               	decfsz	wreg,f,c
  1613  00DF24  D7FE               	bra	u4237
  1614  00DF26  2E5C               	decfsz	??_main^0,f,c
  1615  00DF28  D7FC               	bra	u4237
  1616  00DF2A  2E5D               	decfsz	(??_main+1)^0,f,c
  1617  00DF2C  D7FA               	bra	u4237
  1618  00DF2E  D000               	nop2	
  1619                           
  1620                           ;main.c: 104: readUV();
  1621  00DF30  EC96  F06B         	call	_readUV	;wreg free
  1622                           
  1623                           ;main.c: 110: };main.c: 111: readVisValue();
  1624                           
  1625                           ;main.c: 105: if(0){
  1626  00DF34  ECEF  F068         	call	_readVisValue	;wreg free
  1627                           
  1628                           ;main.c: 114: };main.c: 116: batt = readBattery();
  1629                           
  1630                           ;main.c: 112: if(0){
  1631  00DF38  ECC9  F069         	call	_readBattery	;wreg free
  1632  00DF3C  C001  F066         	movff	?_readBattery,_batt
  1633  00DF40  C002  F067         	movff	?_readBattery+1,_batt+1
  1634                           
  1635                           ;main.c: 117: temp = readTemperature();
  1636  00DF44  EC1F  F06A         	call	_readTemperature	;wreg free
  1637  00DF48  C001  F064         	movff	?_readTemperature,_temp
  1638  00DF4C  C002  F065         	movff	?_readTemperature+1,_temp+1
  1639                           
  1640                           ;main.c: 121: };main.c: 122: if(batt>2100/4){
  1641                           
  1642                           ;main.c: 118: if(0){
  1643  00DF50  0E0E               	movlw	14
  1644  00DF52  0100               	movlb	0	; () banked
  1645  00DF54  5D66               	subwf	_batt& (0+255),w,b
  1646  00DF56  0E02               	movlw	2
  1647  00DF58  5967               	subwfb	(_batt+1)& (0+255),w,b
  1648  00DF5A  A0D8               	btfss	status,0,c
  1649  00DF5C  D003               	goto	l150
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;main.c: 123: transmitValues();
  1653  00DF5E  EC84  F070         	call	_transmitValues	;wreg free
  1654                           
  1655                           ;main.c: 124: }
  1656  00DF62  D048               	goto	l5013
  1657  00DF64                     l150:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;main.c: 125: else{;main.c: 127: LATEbits.LATE2=1;
  1661  00DF64  848D               	bsf	141,2,c	;volatile
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 128: _delay((unsigned long)((300)*(64000000/4000.0)));
  1665  00DF66  0E19               	movlw	25
  1666  00DF68  6E5D               	movwf	(??_main+1)^0,c
  1667  00DF6A  0E5A               	movlw	90
  1668  00DF6C  6E5C               	movwf	??_main^0,c
  1669  00DF6E  0EB2               	movlw	178
  1670  00DF70                     u4247:
  1671  00DF70  2EE8               	decfsz	wreg,f,c
  1672  00DF72  D7FE               	bra	u4247
  1673  00DF74  2E5C               	decfsz	??_main^0,f,c
  1674  00DF76  D7FC               	bra	u4247
  1675  00DF78  2E5D               	decfsz	(??_main+1)^0,f,c
  1676  00DF7A  D7FA               	bra	u4247
  1677                           
  1678                           ;main.c: 129: LATEbits.LATE2=0;
  1679  00DF7C  948D               	bcf	141,2,c	;volatile
  1680                           
  1681                           ;main.c: 130: _delay((unsigned long)((300)*(64000000/4000.0)));
  1682  00DF7E  0E19               	movlw	25
  1683  00DF80  6E5D               	movwf	(??_main+1)^0,c
  1684  00DF82  0E5A               	movlw	90
  1685  00DF84  6E5C               	movwf	??_main^0,c
  1686  00DF86  0EB2               	movlw	178
  1687  00DF88                     u4257:
  1688  00DF88  2EE8               	decfsz	wreg,f,c
  1689  00DF8A  D7FE               	bra	u4257
  1690  00DF8C  2E5C               	decfsz	??_main^0,f,c
  1691  00DF8E  D7FC               	bra	u4257
  1692  00DF90  2E5D               	decfsz	(??_main+1)^0,f,c
  1693  00DF92  D7FA               	bra	u4257
  1694                           
  1695                           ;main.c: 131: LATEbits.LATE2=1;
  1696  00DF94  848D               	bsf	141,2,c	;volatile
  1697                           
  1698                           ;main.c: 132: _delay((unsigned long)((300)*(64000000/4000.0)));
  1699  00DF96  0E19               	movlw	25
  1700  00DF98  6E5D               	movwf	(??_main+1)^0,c
  1701  00DF9A  0E5A               	movlw	90
  1702  00DF9C  6E5C               	movwf	??_main^0,c
  1703  00DF9E  0EB2               	movlw	178
  1704  00DFA0                     u4267:
  1705  00DFA0  2EE8               	decfsz	wreg,f,c
  1706  00DFA2  D7FE               	bra	u4267
  1707  00DFA4  2E5C               	decfsz	??_main^0,f,c
  1708  00DFA6  D7FC               	bra	u4267
  1709  00DFA8  2E5D               	decfsz	(??_main+1)^0,f,c
  1710  00DFAA  D7FA               	bra	u4267
  1711                           
  1712                           ;main.c: 133: LATEbits.LATE2=0;
  1713  00DFAC  948D               	bcf	141,2,c	;volatile
  1714                           
  1715                           ;main.c: 134: _delay((unsigned long)((300)*(64000000/4000.0)));
  1716  00DFAE  0E19               	movlw	25
  1717  00DFB0  6E5D               	movwf	(??_main+1)^0,c
  1718  00DFB2  0E5A               	movlw	90
  1719  00DFB4  6E5C               	movwf	??_main^0,c
  1720  00DFB6  0EB2               	movlw	178
  1721  00DFB8                     u4277:
  1722  00DFB8  2EE8               	decfsz	wreg,f,c
  1723  00DFBA  D7FE               	bra	u4277
  1724  00DFBC  2E5C               	decfsz	??_main^0,f,c
  1725  00DFBE  D7FC               	bra	u4277
  1726  00DFC0  2E5D               	decfsz	(??_main+1)^0,f,c
  1727  00DFC2  D7FA               	bra	u4277
  1728                           
  1729                           ;main.c: 135: LATEbits.LATE2=1;
  1730  00DFC4  848D               	bsf	141,2,c	;volatile
  1731                           
  1732                           ;main.c: 136: _delay((unsigned long)((300)*(64000000/4000.0)));
  1733  00DFC6  0E19               	movlw	25
  1734  00DFC8  6E5D               	movwf	(??_main+1)^0,c
  1735  00DFCA  0E5A               	movlw	90
  1736  00DFCC  6E5C               	movwf	??_main^0,c
  1737  00DFCE  0EB2               	movlw	178
  1738  00DFD0                     u4287:
  1739  00DFD0  2EE8               	decfsz	wreg,f,c
  1740  00DFD2  D7FE               	bra	u4287
  1741  00DFD4  2E5C               	decfsz	??_main^0,f,c
  1742  00DFD6  D7FC               	bra	u4287
  1743  00DFD8  2E5D               	decfsz	(??_main+1)^0,f,c
  1744  00DFDA  D7FA               	bra	u4287
  1745                           
  1746                           ;main.c: 137: LATEbits.LATE2=0;
  1747  00DFDC  948D               	bcf	141,2,c	;volatile
  1748                           
  1749                           ;main.c: 138: _delay((unsigned long)((300)*(64000000/4000.0)));
  1750  00DFDE  0E19               	movlw	25
  1751  00DFE0  6E5D               	movwf	(??_main+1)^0,c
  1752  00DFE2  0E5A               	movlw	90
  1753  00DFE4  6E5C               	movwf	??_main^0,c
  1754  00DFE6  0EB2               	movlw	178
  1755  00DFE8                     u4297:
  1756  00DFE8  2EE8               	decfsz	wreg,f,c
  1757  00DFEA  D7FE               	bra	u4297
  1758  00DFEC  2E5C               	decfsz	??_main^0,f,c
  1759  00DFEE  D7FC               	bra	u4297
  1760  00DFF0  2E5D               	decfsz	(??_main+1)^0,f,c
  1761  00DFF2  D7FA               	bra	u4297
  1762  00DFF4                     l5013:
  1763                           
  1764                           ;main.c: 139: };main.c: 140: turnStuffOff();
  1765  00DFF4  ECD8  F068         	call	_turnStuffOff	;wreg free
  1766                           
  1767                           ; BSR set to: 15
  1768                           ;main.c: 141: messageCount++;
  1769  00DFF8  0E01               	movlw	1
  1770  00DFFA  0100               	movlb	0	; () banked
  1771  00DFFC  2760               	addwf	_messageCount& (0+255),f,b
  1772  00DFFE  0E00               	movlw	0
  1773  00E000  2361               	addwfc	(_messageCount+1)& (0+255),f,b
  1774  00E002  2362               	addwfc	(_messageCount+2)& (0+255),f,b
  1775  00E004  2363               	addwfc	(_messageCount+3)& (0+255),f,b
  1776                           
  1777                           ; BSR set to: 0
  1778                           
  1779                           ;main.c: 142: if(0){
  1780  00E006  0003               	sleep		;# 
  1781                           
  1782                           ;main.c: 149: goto start;
  1783  00E008  D783               	goto	_main
  1784  00E00A                     __end_of_main:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _turnStuffOff *****************
  1788 ;; Defined at:
  1789 ;;		line 285 in file "main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 3F/F
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		_USART2_Stop
  1812 ;;		_disablePeripherals
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text1
  1819  00D1B0                     __ptext1:
  1820                           	callstack 0
  1821  00D1B0                     _turnStuffOff:
  1822                           	callstack 29
  1823                           
  1824                           ;main.c: 286: USART2_Stop();
  1825                           
  1826                           ;incstack = 0
  1827  00D1B0  ECC1  F068         	call	_USART2_Stop	;wreg free
  1828                           
  1829                           ;main.c: 287: disablePeripherals();
  1830  00D1B4  EC28  F06B         	call	_disablePeripherals	;wreg free
  1831                           
  1832                           ; BSR set to: 15
  1833  00D1B8  0012               	return		;funcret
  1834  00D1BA                     __end_of_turnStuffOff:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _disablePeripherals *****************
  1838 ;; Defined at:
  1839 ;;		line 290 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 3F/F
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_turnStuffOff
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text2
  1867  00D650                     __ptext2:
  1868                           	callstack 0
  1869  00D650                     _disablePeripherals:
  1870                           	callstack 29
  1871                           
  1872                           ;main.c: 291: ADCON0bits.ADON=0;
  1873                           
  1874                           ; BSR set to: 15
  1875                           ;incstack = 0
  1876  00D650  90C2               	bcf	194,0,c	;volatile
  1877                           
  1878                           ;main.c: 292: VREFCON0bits.FVREN=0;
  1879  00D652  010F               	movlb	15	; () banked
  1880  00D654  9F42               	bcf	66,7,b	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           ;main.c: 294: TRISA=0;
  1884  00D656  0E00               	movlw	0
  1885  00D658  6E92               	movwf	146,c	;volatile
  1886                           
  1887                           ;main.c: 295: TRISB=0;
  1888  00D65A  0E00               	movlw	0
  1889  00D65C  6E93               	movwf	147,c	;volatile
  1890                           
  1891                           ;main.c: 296: TRISC=0;
  1892  00D65E  0E00               	movlw	0
  1893  00D660  6E94               	movwf	148,c	;volatile
  1894                           
  1895                           ;main.c: 297: TRISD=0;
  1896  00D662  0E00               	movlw	0
  1897  00D664  6E95               	movwf	149,c	;volatile
  1898                           
  1899                           ;main.c: 298: TRISE=0;
  1900  00D666  0E00               	movlw	0
  1901  00D668  6E96               	movwf	150,c	;volatile
  1902                           
  1903                           ;main.c: 299: LATA=0;
  1904  00D66A  0E00               	movlw	0
  1905  00D66C  6E89               	movwf	137,c	;volatile
  1906                           
  1907                           ;main.c: 300: LATB=0;
  1908  00D66E  0E00               	movlw	0
  1909  00D670  6E8A               	movwf	138,c	;volatile
  1910                           
  1911                           ;main.c: 301: LATC=0;
  1912  00D672  0E00               	movlw	0
  1913  00D674  6E8B               	movwf	139,c	;volatile
  1914                           
  1915                           ;main.c: 302: LATD=0;
  1916  00D676  0E00               	movlw	0
  1917  00D678  6E8C               	movwf	140,c	;volatile
  1918                           
  1919                           ;main.c: 303: LATE=0;
  1920  00D67A  0E00               	movlw	0
  1921  00D67C  6E8D               	movwf	141,c	;volatile
  1922                           
  1923                           ; BSR set to: 15
  1924                           ;main.c: 304: TRISCbits.RC6=1;
  1925  00D67E  8C94               	bsf	148,6,c	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928                           ;main.c: 305: LATCbits.LATC6=1;
  1929  00D680  8C8B               	bsf	139,6,c	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;main.c: 306: TRISCbits.RC3=1;
  1933  00D682  8694               	bsf	148,3,c	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;main.c: 307: TRISCbits.RC4=1;
  1937  00D684  8894               	bsf	148,4,c	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;main.c: 308: LATAbits.LA2=1;
  1941  00D686  8489               	bsf	137,2,c	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944                           ;main.c: 309: TRISDbits.RD7=1;
  1945  00D688  8E95               	bsf	149,7,c	;volatile
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;main.c: 311: TRISDbits.RD1=1;
  1949  00D68A  8295               	bsf	149,1,c	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952                           ;main.c: 312: ANSELDbits.ANSD1=0;
  1953  00D68C  933B               	bcf	59,1,b	;volatile
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;main.c: 313: LATDbits.LATD3=1;
  1957  00D68E  868C               	bsf	140,3,c	;volatile
  1958                           
  1959                           ; BSR set to: 15
  1960                           ;main.c: 324: PMD0=0xFF;
  1961  00D690  693F               	setf	63,b	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;main.c: 325: PMD1=0xFF;
  1965  00D692  693E               	setf	62,b	;volatile
  1966                           
  1967                           ; BSR set to: 15
  1968                           ;main.c: 326: PMD2=0xFF;
  1969  00D694  693D               	setf	61,b	;volatile
  1970                           
  1971                           ; BSR set to: 15
  1972  00D696  0012               	return		;funcret
  1973  00D698                     __end_of_disablePeripherals:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _USART2_Stop *****************
  1977 ;; Defined at:
  1978 ;;		line 102 in file "usart2.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		None
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_turnStuffOff
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text3
  2006  00D182                     __ptext3:
  2007                           	callstack 0
  2008  00D182                     _USART2_Stop:
  2009                           	callstack 29
  2010                           
  2011                           ;usart2.c: 103: RCSTA2bits.SPEN = 0;
  2012                           
  2013                           ; BSR set to: 15
  2014                           ;incstack = 0
  2015  00D182  9E71               	bcf	113,7,c	;volatile
  2016                           
  2017                           ;usart2.c: 104: RCSTA2bits.CREN = 0;
  2018  00D184  9871               	bcf	113,4,c	;volatile
  2019  00D186  0012               	return		;funcret
  2020  00D188                     __end_of_USART2_Stop:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _transmitValues *****************
  2024 ;; Defined at:
  2025 ;;		line 188 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  flags           1   25[BANK0 ] unsigned char 
  2030 ;;  i               1   28[BANK0 ] unsigned char 
  2031 ;;  i               1   30[BANK0 ] unsigned char 
  2032 ;;  calcCRC         2   26[BANK0 ] unsigned short 
  2033 ;;  j               1   29[BANK0 ] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 3F/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        7 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    5
  2050 ;; This function calls:
  2051 ;;		_CRC16
  2052 ;;		_LoRaClearIRQFlags
  2053 ;;		_LoRaGetFrequency
  2054 ;;		_LoRaGetIRQFlags
  2055 ;;		_LoRaSleepMode
  2056 ;;		_LoRaStart
  2057 ;;		_LoRaTXData
  2058 ;;		_printf
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text4
  2065  00E108                     __ptext4:
  2066                           	callstack 0
  2067  00E108                     _transmitValues:
  2068                           	callstack 25
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 189: txData[0] = 50;
  2072                           
  2073                           ;incstack = 0
  2074  00E108  0E32               	movlw	50
  2075  00E10A  6F72               	movwf	_txData& (0+255),b
  2076                           
  2077                           ;main.c: 190: txData[1] = 0x00;
  2078  00E10C  0E00               	movlw	0
  2079  00E10E  6F73               	movwf	(_txData+1)& (0+255),b
  2080                           
  2081                           ;main.c: 191: txData[2] = 0x02;
  2082  00E110  0E02               	movlw	2
  2083  00E112  6F74               	movwf	(_txData+2)& (0+255),b
  2084                           
  2085                           ;main.c: 192: for(uint8_t i=0;i<8;i++){
  2086  00E114  0E00               	movlw	0
  2087  00E116  6FC2               	movwf	transmitValues@i& (0+255),b
  2088  00E118                     l4867:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 193: txData[i+3] = address[i];
  2092  00E118  51C2               	movf	transmitValues@i& (0+255),w,b
  2093  00E11A  0FC3               	addlw	low _address
  2094  00E11C  6ED9               	movwf	fsr2l,c
  2095  00E11E  6ADA               	clrf	fsr2h,c
  2096  00E120  51C2               	movf	transmitValues@i& (0+255),w,b
  2097  00E122  0F75               	addlw	low (_txData+3)
  2098  00E124  6EE1               	movwf	fsr1l,c
  2099  00E126  6AE2               	clrf	fsr1h,c
  2100  00E128  CFDF FFE7          	movff	indf2,indf1
  2101                           
  2102                           ; BSR set to: 0
  2103  00E12C  2BC2               	incf	transmitValues@i& (0+255),f,b
  2104                           
  2105                           ; BSR set to: 0
  2106  00E12E  0E07               	movlw	7
  2107  00E130  65C2               	cpfsgt	transmitValues@i& (0+255),b
  2108  00E132  D7F2               	goto	l4867
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 194: };main.c: 195: txData[11] = 0x05;
  2112  00E134  0E05               	movlw	5
  2113  00E136  6F7D               	movwf	(_txData+11)& (0+255),b
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 198: txData[12]=(uint8_t)((messageCount>>24)&0xFF);
  2117  00E138  C063  F07E         	movff	_messageCount+3,_txData+12
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 199: txData[13]=(uint8_t)((messageCount>>16)&0xFF);
  2121  00E13C  C062  F07F         	movff	_messageCount+2,_txData+13
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 200: txData[14]=(uint8_t)((messageCount>>8)&0xFF);
  2125  00E140  C061  F080         	movff	_messageCount+1,_txData+14
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;main.c: 201: txData[15]=(uint8_t)((messageCount & 0xFF));
  2129  00E144  C060  F081         	movff	_messageCount,_txData+15
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;main.c: 204: txData[16]=(uint8_t)((batt>>8)&0xFF);
  2133  00E148  C067  F082         	movff	_batt+1,_txData+16
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;main.c: 205: txData[17]=(uint8_t)(batt & 0xFF);
  2137  00E14C  C066  F083         	movff	_batt,_txData+17
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;main.c: 208: txData[18]=(uint8_t)((temp>>8)&0xFF);
  2141  00E150  C065  F084         	movff	_temp+1,_txData+18
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;main.c: 209: txData[19]=(uint8_t)(temp & 0xFF);
  2145  00E154  C064  F085         	movff	_temp,_txData+19
  2146                           
  2147                           ;main.c: 212: txData[20] = 0;
  2148  00E158  0E00               	movlw	0
  2149  00E15A  6F86               	movwf	(_txData+20)& (0+255),b
  2150                           
  2151                           ;main.c: 213: txData[21] = 0;
  2152  00E15C  0E00               	movlw	0
  2153  00E15E  6F87               	movwf	(_txData+21)& (0+255),b
  2154                           
  2155                           ;main.c: 216: txData[22] = 0;
  2156  00E160  0E00               	movlw	0
  2157  00E162  6F88               	movwf	(_txData+22)& (0+255),b
  2158                           
  2159                           ;main.c: 217: txData[23] = 0;
  2160  00E164  0E00               	movlw	0
  2161  00E166  6F89               	movwf	(_txData+23)& (0+255),b
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;main.c: 220: txData[24]=(uint8_t)((uvaReading>>8)&0xFF);
  2165  00E168  C071  F08A         	movff	_uvaReading+1,_txData+24
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 221: txData[25]=(uint8_t)(uvaReading & 0xFF);
  2169  00E16C  C070  F08B         	movff	_uvaReading,_txData+25
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 224: txData[26]=(uint8_t)((uvbReading>>8)&0xFF);
  2173  00E170  C06F  F08C         	movff	_uvbReading+1,_txData+26
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 225: txData[27]=(uint8_t)(uvbReading & 0xFF);
  2177  00E174  C06E  F08D         	movff	_uvbReading,_txData+27
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;main.c: 228: txData[28]=(uint8_t)((comp1Reading>>8)&0xFF);
  2181  00E178  C06D  F08E         	movff	_comp1Reading+1,_txData+28
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;main.c: 229: txData[29]=(uint8_t)(comp1Reading & 0xFF);
  2185  00E17C  C06C  F08F         	movff	_comp1Reading,_txData+29
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 232: txData[30]=(uint8_t)((comp2Reading>>8)&0xFF);
  2189  00E180  C06B  F090         	movff	_comp2Reading+1,_txData+30
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;main.c: 233: txData[31]=(uint8_t)(comp2Reading & 0xFF);
  2193  00E184  C06A  F091         	movff	_comp2Reading,_txData+31
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;main.c: 236: txData[32]=(uint8_t)((vis>>8)&0xFF);
  2197  00E188  C069  F092         	movff	_vis+1,_txData+32
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main.c: 237: txData[33]=(uint8_t)(vis & 0xFF);
  2201  00E18C  C068  F093         	movff	_vis,_txData+33
  2202                           
  2203                           ;main.c: 240: for(uint8_t i=34;i<48;i++){
  2204  00E190  0E22               	movlw	34
  2205  00E192  6FC0               	movwf	transmitValues@i_810& (0+255),b
  2206  00E194                     l4915:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 241: txData[i] = 0;
  2210  00E194  51C0               	movf	transmitValues@i_810& (0+255),w,b
  2211  00E196  0F72               	addlw	low _txData
  2212  00E198  6ED9               	movwf	fsr2l,c
  2213  00E19A  6ADA               	clrf	fsr2h,c
  2214  00E19C  0E00               	movlw	0
  2215  00E19E  6EDF               	movwf	indf2,c
  2216                           
  2217                           ; BSR set to: 0
  2218  00E1A0  2BC0               	incf	transmitValues@i_810& (0+255),f,b
  2219                           
  2220                           ; BSR set to: 0
  2221  00E1A2  0E2F               	movlw	47
  2222  00E1A4  65C0               	cpfsgt	transmitValues@i_810& (0+255),b
  2223  00E1A6  D7F6               	goto	l4915
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 242: };main.c: 245: unsigned short int calcCRC = CRC16(txData, 50-2);
  2227  00E1A8  0E72               	movlw	low _txData
  2228  00E1AA  6E01               	movwf	CRC16@nData^0,c
  2229  00E1AC  0E00               	movlw	0
  2230  00E1AE  6E03               	movwf	(CRC16@wLength+1)^0,c
  2231  00E1B0  0E30               	movlw	48
  2232  00E1B2  6E02               	movwf	CRC16@wLength^0,c
  2233  00E1B4  ECE8  F06B         	call	_CRC16	;wreg free
  2234  00E1B8  C001  F0BE         	movff	?_CRC16,transmitValues@calcCRC
  2235  00E1BC  C002  F0BF         	movff	?_CRC16+1,transmitValues@calcCRC+1
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;main.c: 246: txData[49] = (calcCRC&0xFF00u)>>8u;
  2239  00E1C0  C0BF  F0A3         	movff	transmitValues@calcCRC+1,_txData+49
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 247: txData[48] = (calcCRC&0xFF);
  2243  00E1C4  C0BE  F0A2         	movff	transmitValues@calcCRC,_txData+48
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;main.c: 252: };main.c: 253: LoRaStart(866.5, 0x55);
  2247                           
  2248                           ;main.c: 250: if(0){
  2249  00E1C8  0E00               	movlw	0
  2250  00E1CA  6E46               	movwf	LoRaStart@freq^0,c
  2251  00E1CC  0EA0               	movlw	160
  2252  00E1CE  6E47               	movwf	(LoRaStart@freq+1)^0,c
  2253  00E1D0  0E58               	movlw	88
  2254  00E1D2  6E48               	movwf	(LoRaStart@freq+2)^0,c
  2255  00E1D4  0E44               	movlw	68
  2256  00E1D6  6E49               	movwf	(LoRaStart@freq+3)^0,c
  2257  00E1D8  0E55               	movlw	85
  2258  00E1DA  6E4A               	movwf	LoRaStart@syncWord^0,c
  2259  00E1DC  EC43  F06C         	call	_LoRaStart	;wreg free
  2260                           
  2261                           ;main.c: 256: };main.c: 257: LoRaClearIRQFlags();
  2262                           
  2263                           ;main.c: 254: if(0){
  2264  00E1E0  ECE3  F068         	call	_LoRaClearIRQFlags	;wreg free
  2265                           
  2266                           ;main.c: 258: LATEbits.LATE2=1;
  2267  00E1E4  848D               	bsf	141,2,c	;volatile
  2268                           
  2269                           ;main.c: 259: LoRaTXData(txData, 50);
  2270  00E1E6  0E72               	movlw	low _txData
  2271  00E1E8  6E58               	movwf	LoRaTXData@data^0,c
  2272  00E1EA  0E32               	movlw	50
  2273  00E1EC  6E59               	movwf	LoRaTXData@dataLength^0,c
  2274  00E1EE  EC4C  F06B         	call	_LoRaTXData	;wreg free
  2275                           
  2276                           ;main.c: 260: LATEbits.LATE2=0;
  2277  00E1F2  948D               	bcf	141,2,c	;volatile
  2278                           
  2279                           ;main.c: 265: for(j=0;j<50;j++){
  2280                           
  2281                           ;main.c: 261: if(0){
  2282  00E1F4  0E00               	movlw	0
  2283  00E1F6  0100               	movlb	0	; () banked
  2284  00E1F8  6FC1               	movwf	transmitValues@j& (0+255),b
  2285  00E1FA                     l4951:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 266: uint8_t flags = LoRaGetIRQFlags();
  2289  00E1FA  ECE9  F068         	call	_LoRaGetIRQFlags	;wreg free
  2290  00E1FE  0100               	movlb	0	; () banked
  2291  00E200  6FBD               	movwf	transmitValues@flags& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 268: if(flags>0){
  2295  00E202  51BD               	movf	transmitValues@flags& (0+255),w,b
  2296  00E204  A4D8               	btfss	status,2,c
  2297  00E206  D00C               	goto	u4210
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;main.c: 270: };main.c: 271: _delay((unsigned long)((10)*(64000000/4000.0)));
  2301  00E208  0ED0               	movlw	208
  2302  00E20A  6E5B               	movwf	??_transmitValues^0,c
  2303  00E20C  0ECA               	movlw	202
  2304  00E20E                     u4307:
  2305  00E20E  2EE8               	decfsz	wreg,f,c
  2306  00E210  D7FE               	bra	u4307
  2307  00E212  2E5B               	decfsz	??_transmitValues^0,f,c
  2308  00E214  D7FC               	bra	u4307
  2309  00E216  0100               	movlb	0	; () banked
  2310  00E218  2BC1               	incf	transmitValues@j& (0+255),f,b
  2311  00E21A  0E31               	movlw	49
  2312  00E21C  65C1               	cpfsgt	transmitValues@j& (0+255),b
  2313  00E21E  D7ED               	goto	l4951
  2314  00E220                     u4210:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;main.c: 279: };main.c: 280: };main.c: 281: LoRaSleepMode();
  2318  00E220  EC0F  F069         	call	_LoRaSleepMode	;wreg free
  2319                           
  2320                           ;main.c: 282: _delay((unsigned long)((10)*(64000000/4000.0)));
  2321  00E224  0ED0               	movlw	208
  2322  00E226  6E5B               	movwf	??_transmitValues^0,c
  2323  00E228  0ECA               	movlw	202
  2324  00E22A                     u4317:
  2325  00E22A  2EE8               	decfsz	wreg,f,c
  2326  00E22C  D7FE               	bra	u4317
  2327  00E22E  2E5B               	decfsz	??_transmitValues^0,f,c
  2328  00E230  D7FC               	bra	u4317
  2329  00E232  0012               	return		;funcret
  2330  00E234                     __end_of_transmitValues:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _LoRaTXData *****************
  2334 ;; Defined at:
  2335 ;;		line 141 in file "LoRa.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  data            1   87[COMRAM] PTR unsigned char 
  2338 ;;		 -> txData(50), 
  2339 ;;  dataLength      1   88[COMRAM] unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  i               1   89[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    4
  2358 ;; This function calls:
  2359 ;;		_LoRaStandbyMode
  2360 ;;		_LoRaTXMode
  2361 ;;		_SPI2WriteByte
  2362 ;;		_printf
  2363 ;; This function is called by:
  2364 ;;		_transmitValues
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text5
  2369  00D698                     __ptext5:
  2370                           	callstack 0
  2371  00D698                     _LoRaTXData:
  2372                           	callstack 25
  2373                           
  2374                           ;LoRa.c: 143: LoRaStandbyMode();
  2375                           
  2376                           ;incstack = 0
  2377  00D698  EC2F  F069         	call	_LoRaStandbyMode	;wreg free
  2378                           
  2379                           ;LoRa.c: 146: };LoRa.c: 147: SPI2WriteByte(0x0D, 0);
  2380                           
  2381                           ;LoRa.c: 144: if(0){
  2382  00D69C  0E00               	movlw	0
  2383  00D69E  6E01               	movwf	SPI2WriteByte@data^0,c
  2384  00D6A0  0E0D               	movlw	13
  2385  00D6A2  ECA1  F06A         	call	_SPI2WriteByte
  2386                           
  2387                           ;LoRa.c: 148: SPI2WriteByte(0x22, 0);
  2388  00D6A6  0E00               	movlw	0
  2389  00D6A8  6E01               	movwf	SPI2WriteByte@data^0,c
  2390  00D6AA  0E22               	movlw	34
  2391  00D6AC  ECA1  F06A         	call	_SPI2WriteByte
  2392                           
  2393                           ;LoRa.c: 151: for(uint8_t i=0;i<dataLength;i++){
  2394  00D6B0  0E00               	movlw	0
  2395  00D6B2  6E5A               	movwf	LoRaTXData@i^0,c
  2396  00D6B4  D00A               	goto	l4771
  2397  00D6B6                     l4767:
  2398                           
  2399                           ;LoRa.c: 152: SPI2WriteByte(0x00, data[i]);
  2400  00D6B6  5058               	movf	LoRaTXData@data^0,w,c
  2401  00D6B8  245A               	addwf	LoRaTXData@i^0,w,c
  2402  00D6BA  6ED9               	movwf	fsr2l,c
  2403  00D6BC  6ADA               	clrf	fsr2h,c
  2404  00D6BE  50DF               	movf	indf2,w,c
  2405  00D6C0  6E01               	movwf	SPI2WriteByte@data^0,c
  2406  00D6C2  0E00               	movlw	0
  2407  00D6C4  ECA1  F06A         	call	_SPI2WriteByte
  2408  00D6C8  2A5A               	incf	LoRaTXData@i^0,f,c
  2409  00D6CA                     l4771:
  2410  00D6CA  5059               	movf	LoRaTXData@dataLength^0,w,c
  2411  00D6CC  5C5A               	subwf	LoRaTXData@i^0,w,c
  2412  00D6CE  A0D8               	btfss	status,0,c
  2413  00D6D0  D7F2               	goto	l4767
  2414                           
  2415                           ;LoRa.c: 153: };LoRa.c: 154: SPI2WriteByte(0x22, dataLength);
  2416  00D6D2  C059  F001         	movff	LoRaTXData@dataLength,SPI2WriteByte@data
  2417  00D6D6  0E22               	movlw	34
  2418  00D6D8  ECA1  F06A         	call	_SPI2WriteByte
  2419                           
  2420                           ;LoRa.c: 155: LoRaTXMode();
  2421  00D6DC  EC3C  F069         	call	_LoRaTXMode	;wreg free
  2422                           
  2423                           ;LoRa.c: 156: if(0){
  2424  00D6E0  0012               	return		;funcret
  2425  00D6E2                     __end_of_LoRaTXData:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _LoRaTXMode *****************
  2429 ;; Defined at:
  2430 ;;		line 194 in file "LoRa.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  regValue        1   86[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:        1 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    3
  2451 ;; This function calls:
  2452 ;;		_printf
  2453 ;;		_readOpModeRegister
  2454 ;;		_writeOpModeRegister
  2455 ;; This function is called by:
  2456 ;;		_LoRaTXData
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text6
  2461  00D278                     __ptext6:
  2462                           	callstack 0
  2463  00D278                     _LoRaTXMode:
  2464                           	callstack 25
  2465                           
  2466                           ;LoRa.c: 197: };LoRa.c: 198: uint8_t regValue = readOpModeRegister();
  2467                           
  2468                           ;LoRa.c: 195: if(0){
  2469                           
  2470                           ;incstack = 0
  2471  00D278  ECD0  F068         	call	_readOpModeRegister	;wreg free
  2472  00D27C  6E57               	movwf	LoRaTXMode@regValue^0,c
  2473                           
  2474                           ;LoRa.c: 199: regValue = regValue & 0b11111000;
  2475  00D27E  5057               	movf	LoRaTXMode@regValue^0,w,c
  2476  00D280  0BF8               	andlw	248
  2477  00D282  6E57               	movwf	LoRaTXMode@regValue^0,c
  2478                           
  2479                           ;LoRa.c: 200: regValue = regValue | 0b00000011;
  2480  00D284  5057               	movf	LoRaTXMode@regValue^0,w,c
  2481  00D286  0903               	iorlw	3
  2482  00D288  6E57               	movwf	LoRaTXMode@regValue^0,c
  2483                           
  2484                           ;LoRa.c: 201: writeOpModeRegister(regValue);
  2485  00D28A  5057               	movf	LoRaTXMode@regValue^0,w,c
  2486  00D28C  ECF6  F068         	call	_writeOpModeRegister
  2487  00D290  0012               	return		;funcret
  2488  00D292                     __end_of_LoRaTXMode:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _printf *****************
  2492 ;; Defined at:
  2493 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  f               2   78[COMRAM] PTR const unsigned char 
  2496 ;;		 -> STR_18(12), STR_17(10), STR_16(8), STR_15(18), 
  2497 ;;		 -> STR_14(8), STR_13(10), STR_12(34), STR_11(10), 
  2498 ;;		 -> STR_10(26), STR_9(11), STR_8(10), STR_7(10), 
  2499 ;;		 -> STR_6(9), STR_5(10), STR_4(10), STR_3(9), 
  2500 ;;		 -> STR_2(9), STR_1(34), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  idx             1    4[BANK0 ] unsigned char 
  2503 ;;  fval            4   20[BANK0 ] unsigned char 
  2504 ;;  val             4   16[BANK0 ] unsigned long 
  2505 ;;  tmpval          4   12[BANK0 ] struct .
  2506 ;;  cp              3    0        PTR const unsigned char 
  2507 ;;  eexp            2   10[BANK0 ] int 
  2508 ;;  prec            2    8[BANK0 ] int 
  2509 ;;  flag            2    6[BANK0 ] unsigned short 
  2510 ;;  len             2    0        unsigned int 
  2511 ;;  width           2    0        int 
  2512 ;;  c               1   24[BANK0 ] unsigned char 
  2513 ;;  ap              1    5[BANK0 ] PTR void [1]
  2514 ;;		 -> ?_printf(2), 
  2515 ;;  d               1    0        unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2   78[COMRAM] int 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 3F/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Totals:         8      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;Total ram usage:       33 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    2
  2532 ;; This function calls:
  2533 ;;		___awdiv
  2534 ;;		___fladd
  2535 ;;		___fleq
  2536 ;;		___flge
  2537 ;;		___flmul
  2538 ;;		___flneg
  2539 ;;		___flsub
  2540 ;;		___fltol
  2541 ;;		___lldiv
  2542 ;;		___llmod
  2543 ;;		___wmul
  2544 ;;		___xxtofl
  2545 ;;		__div_to_l_
  2546 ;;		__tdiv_to_l_
  2547 ;;		_fround
  2548 ;;		_putch
  2549 ;;		_scale
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;;		_transmitValues
  2553 ;;		_LoRaTXData
  2554 ;;		_LoRaTXMode
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text7
  2559  00F3F4                     __ptext7:
  2560                           	callstack 0
  2561  00F3F4                     _printf:
  2562                           	callstack 27
  2563                           
  2564                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2565                           
  2566                           ;incstack = 0
  2567  00F3F4  0E51               	movlw	low (?_printf+2)
  2568  00F3F6  0100               	movlb	0	; () banked
  2569  00F3F8  6FA9               	movwf	printf@ap& (0+255),b
  2570                           
  2571                           ;doprnt.c: 553: while((c = *f++)) {
  2572  00F3FA  EF17  F07E         	goto	u3770
  2573  00F3FE                     l4109:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;doprnt.c: 555: if(c != '%')
  2577  00F3FE  0E25               	movlw	37
  2578  00F400  19BC               	xorwf	printf@c& (0+255),w,b
  2579  00F402  B4D8               	btfsc	status,2,c
  2580  00F404  D005               	goto	l4113
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2584  00F406  51BC               	movf	printf@c& (0+255),w,b
  2585  00F408  ECFD  F068         	call	_putch
  2586                           
  2587                           ;doprnt.c: 559: continue;
  2588  00F40C  EF17  F07E         	goto	u3770
  2589  00F410                     l4113:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2593  00F410  0E00               	movlw	0
  2594  00F412  6FAB               	movwf	(printf@flag+1)& (0+255),b
  2595  00F414  0E00               	movlw	0
  2596  00F416  6FAA               	movwf	printf@flag& (0+255),b
  2597                           
  2598                           ;doprnt.c: 661: switch(c = *f++) {
  2599  00F418  D004               	goto	l4121
  2600  00F41A                     l4115:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;doprnt.c: 689: flag |= 0x400;
  2604  00F41A  85AB               	bsf	(printf@flag+1)& (0+255),2,b
  2605                           
  2606                           ;doprnt.c: 690: break;
  2607  00F41C  D01F               	goto	l4123
  2608  00F41E                     l4117:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;doprnt.c: 744: case 'x':;doprnt.c: 747: flag |= 0x80;
  2612  00F41E  8FAA               	bsf	printf@flag& (0+255),7,b
  2613                           
  2614                           ;doprnt.c: 749: break;
  2615  00F420  D01D               	goto	l4123
  2616  00F422                     l4121:
  2617                           
  2618                           ; BSR set to: 0
  2619  00F422  C04F  FFF6         	movff	printf@f,tblptrl
  2620  00F426  C050  FFF7         	movff	printf@f+1,tblptrh
  2621  00F42A  4A4F               	infsnz	printf@f^0,f,c
  2622  00F42C  2A50               	incf	(printf@f+1)^0,f,c
  2623  00F42E                     	if	0	;tblptru may be non-zero
  2624  00F42E                     	endif
  2625  00F42E                     	if	0	;tblptru may be non-zero
  2626  00F42E                     	endif
  2627  00F42E  0008               	tblrd		*
  2628  00F430  CFF5 F0BC          	movff	tablat,printf@c
  2629  00F434  51BC               	movf	printf@c& (0+255),w,b
  2630                           
  2631                           ; Switch size 1, requested type "simple"
  2632                           ; Number of cases is 6, Range of values is 0 to 120
  2633                           ; switch strategies available:
  2634                           ; Name         Instructions Cycles
  2635                           ; simple_byte           19    10 (average)
  2636                           ;	Chosen strategy is simple_byte
  2637  00F436  0A00               	xorlw	0	; case 0
  2638  00F438  B4D8               	btfsc	status,2,c
  2639  00F43A  0012               	return	
  2640  00F43C  0A58               	xorlw	88	; case 88
  2641  00F43E  B4D8               	btfsc	status,2,c
  2642  00F440  D7EE               	goto	l4117
  2643  00F442  0A3C               	xorlw	60	; case 100
  2644  00F444  B4D8               	btfsc	status,2,c
  2645  00F446  D00A               	goto	l4123
  2646  00F448  0A02               	xorlw	2	; case 102
  2647  00F44A  B4D8               	btfsc	status,2,c
  2648  00F44C  D7E6               	goto	l4115
  2649  00F44E  0A0F               	xorlw	15	; case 105
  2650  00F450  B4D8               	btfsc	status,2,c
  2651  00F452  D004               	goto	l4123
  2652  00F454  0A11               	xorlw	17	; case 120
  2653  00F456  B4D8               	btfsc	status,2,c
  2654  00F458  D7E2               	goto	l4117
  2655  00F45A  D3E9               	goto	u3770
  2656  00F45C                     l4123:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;doprnt.c: 851: if(flag & (0x700)) {
  2660  00F45C  0E07               	movlw	7
  2661  00F45E  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  2662  00F460  B4D8               	btfsc	status,2,c
  2663  00F462  D2E1               	goto	l602
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;doprnt.c: 855: prec = 6;
  2667  00F464  0E00               	movlw	0
  2668  00F466  6FAD               	movwf	(printf@prec+1)& (0+255),b
  2669  00F468  0E06               	movlw	6
  2670  00F46A  6FAC               	movwf	printf@prec& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2674  00F46C  51A9               	movf	printf@ap& (0+255),w,b
  2675  00F46E  6ED9               	movwf	fsr2l,c
  2676  00F470  6ADA               	clrf	fsr2h,c
  2677  00F472  CFDE F0B8          	movff	postinc2,printf@fval
  2678  00F476  CFDE F0B9          	movff	postinc2,printf@fval+1
  2679  00F47A  CFDE F0BA          	movff	postinc2,printf@fval+2
  2680  00F47E  CFDE F0BB          	movff	postinc2,printf@fval+3
  2681                           
  2682                           ; BSR set to: 0
  2683  00F482  0E04               	movlw	4
  2684  00F484  27A9               	addwf	printf@ap& (0+255),f,b
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;doprnt.c: 857: if(fval < 0.0) {
  2688  00F486  AFBB               	btfss	(printf@fval+3)& (0+255),7,b
  2689  00F488  D014               	goto	l4137
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;doprnt.c: 858: fval = -fval;
  2693  00F48A  C0B8  F001         	movff	printf@fval,___flneg@f1
  2694  00F48E  C0B9  F002         	movff	printf@fval+1,___flneg@f1+1
  2695  00F492  C0BA  F003         	movff	printf@fval+2,___flneg@f1+2
  2696  00F496  C0BB  F004         	movff	printf@fval+3,___flneg@f1+3
  2697  00F49A  EC36  F06A         	call	___flneg	;wreg free
  2698  00F49E  C001  F0B8         	movff	?___flneg,printf@fval
  2699  00F4A2  C002  F0B9         	movff	?___flneg+1,printf@fval+1
  2700  00F4A6  C003  F0BA         	movff	?___flneg+2,printf@fval+2
  2701  00F4AA  C004  F0BB         	movff	?___flneg+3,printf@fval+3
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;doprnt.c: 859: flag |= 0x03;
  2705  00F4AE  0E03               	movlw	3
  2706  00F4B0  13AA               	iorwf	printf@flag& (0+255),f,b
  2707  00F4B2                     l4137:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2711  00F4B2  0E00               	movlw	0
  2712  00F4B4  6FAF               	movwf	(printf@eexp+1)& (0+255),b
  2713  00F4B6  0E00               	movlw	0
  2714  00F4B8  6FAE               	movwf	printf@eexp& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;doprnt.c: 862: if( fval!=0) {
  2718  00F4BA  C0B8  F001         	movff	printf@fval,___fleq@ff1
  2719  00F4BE  C0B9  F002         	movff	printf@fval+1,___fleq@ff1+1
  2720  00F4C2  C0BA  F003         	movff	printf@fval+2,___fleq@ff1+2
  2721  00F4C6  C0BB  F004         	movff	printf@fval+3,___fleq@ff1+3
  2722  00F4CA  0E00               	movlw	0
  2723  00F4CC  6E05               	movwf	___fleq@ff2^0,c
  2724  00F4CE  0E00               	movlw	0
  2725  00F4D0  6E06               	movwf	(___fleq@ff2+1)^0,c
  2726  00F4D2  0E00               	movlw	0
  2727  00F4D4  6E07               	movwf	(___fleq@ff2+2)^0,c
  2728  00F4D6  0E00               	movlw	0
  2729  00F4D8  6E08               	movwf	(___fleq@ff2+3)^0,c
  2730  00F4DA  EC9E  F06D         	call	___fleq	;wreg free
  2731  00F4DE  B0D8               	btfsc	status,0,c
  2732  00F4E0  D082               	goto	l4165
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2736  00F4E2  35BA               	rlcf	(printf@fval+2)& (0+255),w,b
  2737  00F4E4  35BB               	rlcf	(printf@fval+3)& (0+255),w,b
  2738  00F4E6  0F82               	addlw	130
  2739  00F4E8  6FAE               	movwf	printf@eexp& (0+255),b
  2740  00F4EA  6BAF               	clrf	(printf@eexp+1)& (0+255),b
  2741  00F4EC  0EFF               	movlw	255
  2742  00F4EE  23AF               	addwfc	(printf@eexp+1)& (0+255),f,b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;doprnt.c: 864: eexp--;
  2746  00F4F0  07AE               	decf	printf@eexp& (0+255),f,b
  2747  00F4F2  A0D8               	btfss	status,0,c
  2748  00F4F4  07AF               	decf	(printf@eexp+1)& (0+255),f,b
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;doprnt.c: 865: eexp *= 3;
  2752  00F4F6  C0AE  F001         	movff	printf@eexp,___wmul@multiplier
  2753  00F4FA  C0AF  F002         	movff	printf@eexp+1,___wmul@multiplier+1
  2754  00F4FE  0E00               	movlw	0
  2755  00F500  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2756  00F502  0E03               	movlw	3
  2757  00F504  6E03               	movwf	___wmul@multiplicand^0,c
  2758  00F506  EC8D  F069         	call	___wmul	;wreg free
  2759  00F50A  C001  F0AE         	movff	?___wmul,printf@eexp
  2760  00F50E  C002  F0AF         	movff	?___wmul+1,printf@eexp+1
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;doprnt.c: 866: eexp /= 10;
  2764  00F512  C0AE  F007         	movff	printf@eexp,___awdiv@dividend
  2765  00F516  C0AF  F008         	movff	printf@eexp+1,___awdiv@dividend+1
  2766  00F51A  0E00               	movlw	0
  2767  00F51C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2768  00F51E  0E0A               	movlw	10
  2769  00F520  6E09               	movwf	___awdiv@divisor^0,c
  2770  00F522  EC5C  F06D         	call	___awdiv	;wreg free
  2771  00F526  C007  F0AE         	movff	?___awdiv,printf@eexp
  2772  00F52A  C008  F0AF         	movff	?___awdiv+1,printf@eexp+1
  2773                           
  2774                           ;doprnt.c: 867: if(eexp < 0)
  2775  00F52E  0100               	movlb	0	; () banked
  2776  00F530  AFAF               	btfss	(printf@eexp+1)& (0+255),7,b
  2777  00F532  D003               	goto	l4153
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;doprnt.c: 868: eexp--;
  2781  00F534  07AE               	decf	printf@eexp& (0+255),f,b
  2782  00F536  A0D8               	btfss	status,0,c
  2783  00F538  07AF               	decf	(printf@eexp+1)& (0+255),f,b
  2784  00F53A                     l4153:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  2788  00F53A  51AE               	movf	printf@eexp& (0+255),w,b
  2789  00F53C  0800               	sublw	0
  2790  00F53E  EC12  F078         	call	_scale
  2791  00F542  C028  F0B0         	movff	?_scale,printf@tmpval
  2792  00F546  C029  F0B1         	movff	?_scale+1,printf@tmpval+1
  2793  00F54A  C02A  F0B2         	movff	?_scale+2,printf@tmpval+2
  2794  00F54E  C02B  F0B3         	movff	?_scale+3,printf@tmpval+3
  2795                           
  2796                           ;doprnt.c: 873: tmpval.integ *= fval;
  2797  00F552  C0B0  F00F         	movff	printf@tmpval,___flmul@b
  2798  00F556  C0B1  F010         	movff	printf@tmpval+1,___flmul@b+1
  2799  00F55A  C0B2  F011         	movff	printf@tmpval+2,___flmul@b+2
  2800  00F55E  C0B3  F012         	movff	printf@tmpval+3,___flmul@b+3
  2801  00F562  C0B8  F013         	movff	printf@fval,___flmul@a
  2802  00F566  C0B9  F014         	movff	printf@fval+1,___flmul@a+1
  2803  00F56A  C0BA  F015         	movff	printf@fval+2,___flmul@a+2
  2804  00F56E  C0BB  F016         	movff	printf@fval+3,___flmul@a+3
  2805  00F572  EC7C  F076         	call	___flmul	;wreg free
  2806  00F576  C00F  F0B0         	movff	?___flmul,printf@tmpval
  2807  00F57A  C010  F0B1         	movff	?___flmul+1,printf@tmpval+1
  2808  00F57E  C011  F0B2         	movff	?___flmul+2,printf@tmpval+2
  2809  00F582  C012  F0B3         	movff	?___flmul+3,printf@tmpval+3
  2810                           
  2811                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  2812  00F586  C0B0  F001         	movff	printf@tmpval,___flge@ff1
  2813  00F58A  C0B1  F002         	movff	printf@tmpval+1,___flge@ff1+1
  2814  00F58E  C0B2  F003         	movff	printf@tmpval+2,___flge@ff1+2
  2815  00F592  C0B3  F004         	movff	printf@tmpval+3,___flge@ff1+3
  2816  00F596  0E00               	movlw	0
  2817  00F598  6E05               	movwf	___flge@ff2^0,c
  2818  00F59A  0E00               	movlw	0
  2819  00F59C  6E06               	movwf	(___flge@ff2+1)^0,c
  2820  00F59E  0E80               	movlw	128
  2821  00F5A0  6E07               	movwf	(___flge@ff2+2)^0,c
  2822  00F5A2  0E3F               	movlw	63
  2823  00F5A4  6E08               	movwf	(___flge@ff2+3)^0,c
  2824  00F5A6  ECA6  F06E         	call	___flge	;wreg free
  2825  00F5AA  B0D8               	btfsc	status,0,c
  2826  00F5AC  D005               	goto	l4161
  2827                           
  2828                           ;doprnt.c: 875: eexp--;
  2829  00F5AE  0100               	movlb	0	; () banked
  2830  00F5B0  07AE               	decf	printf@eexp& (0+255),f,b
  2831  00F5B2  A0D8               	btfss	status,0,c
  2832  00F5B4  07AF               	decf	(printf@eexp+1)& (0+255),f,b
  2833  00F5B6  D017               	goto	l4165
  2834  00F5B8                     l4161:
  2835                           
  2836                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  2837  00F5B8  C0B0  F001         	movff	printf@tmpval,___flge@ff1
  2838  00F5BC  C0B1  F002         	movff	printf@tmpval+1,___flge@ff1+1
  2839  00F5C0  C0B2  F003         	movff	printf@tmpval+2,___flge@ff1+2
  2840  00F5C4  C0B3  F004         	movff	printf@tmpval+3,___flge@ff1+3
  2841  00F5C8  0E00               	movlw	0
  2842  00F5CA  6E05               	movwf	___flge@ff2^0,c
  2843  00F5CC  0E00               	movlw	0
  2844  00F5CE  6E06               	movwf	(___flge@ff2+1)^0,c
  2845  00F5D0  0E20               	movlw	32
  2846  00F5D2  6E07               	movwf	(___flge@ff2+2)^0,c
  2847  00F5D4  0E41               	movlw	65
  2848  00F5D6  6E08               	movwf	(___flge@ff2+3)^0,c
  2849  00F5D8  ECA6  F06E         	call	___flge	;wreg free
  2850  00F5DC  A0D8               	btfss	status,0,c
  2851  00F5DE  D003               	goto	l4165
  2852                           
  2853                           ;doprnt.c: 877: eexp++;
  2854  00F5E0  0100               	movlb	0	; () banked
  2855  00F5E2  4BAE               	infsnz	printf@eexp& (0+255),f,b
  2856  00F5E4  2BAF               	incf	(printf@eexp+1)& (0+255),f,b
  2857  00F5E6                     l4165:
  2858                           
  2859                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  2860                           
  2861                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  2862  00F5E6  C0B8  F037         	movff	printf@fval,___fladd@b
  2863  00F5EA  C0B9  F038         	movff	printf@fval+1,___fladd@b+1
  2864  00F5EE  C0BA  F039         	movff	printf@fval+2,___fladd@b+2
  2865  00F5F2  C0BB  F03A         	movff	printf@fval+3,___fladd@b+3
  2866  00F5F6  0E06               	movlw	6
  2867  00F5F8  EC7D  F072         	call	_fround
  2868  00F5FC  C028  F03B         	movff	?_fround,___fladd@a
  2869  00F600  C029  F03C         	movff	?_fround+1,___fladd@a+1
  2870  00F604  C02A  F03D         	movff	?_fround+2,___fladd@a+2
  2871  00F608  C02B  F03E         	movff	?_fround+3,___fladd@a+3
  2872  00F60C  ECF6  F074         	call	___fladd	;wreg free
  2873  00F610  C037  F0B8         	movff	?___fladd,printf@fval
  2874  00F614  C038  F0B9         	movff	?___fladd+1,printf@fval+1
  2875  00F618  C039  F0BA         	movff	?___fladd+2,printf@fval+2
  2876  00F61C  C03A  F0BB         	movff	?___fladd+3,printf@fval+3
  2877                           
  2878                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2879  00F620  0100               	movlb	0	; () banked
  2880  00F622  BFAF               	btfsc	(printf@eexp+1)& (0+255),7,b
  2881  00F624  D006               	goto	u3560
  2882  00F626  51AF               	movf	(printf@eexp+1)& (0+255),w,b
  2883  00F628  E131               	bnz	l4177
  2884  00F62A  0E0A               	movlw	10
  2885  00F62C  5DAE               	subwf	printf@eexp& (0+255),w,b
  2886  00F62E  B0D8               	btfsc	status,0,c
  2887  00F630  D02D               	goto	u3590
  2888  00F632                     u3560:
  2889                           
  2890                           ; BSR set to: 0
  2891  00F632  C0B8  F001         	movff	printf@fval,___fleq@ff1
  2892  00F636  C0B9  F002         	movff	printf@fval+1,___fleq@ff1+1
  2893  00F63A  C0BA  F003         	movff	printf@fval+2,___fleq@ff1+2
  2894  00F63E  C0BB  F004         	movff	printf@fval+3,___fleq@ff1+3
  2895  00F642  0E00               	movlw	0
  2896  00F644  6E05               	movwf	___fleq@ff2^0,c
  2897  00F646  0E00               	movlw	0
  2898  00F648  6E06               	movwf	(___fleq@ff2+1)^0,c
  2899  00F64A  0E00               	movlw	0
  2900  00F64C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2901  00F64E  0E00               	movlw	0
  2902  00F650  6E08               	movwf	(___fleq@ff2+3)^0,c
  2903  00F652  EC9E  F06D         	call	___fleq	;wreg free
  2904  00F656  B0D8               	btfsc	status,0,c
  2905  00F658  D064               	goto	l4191
  2906                           
  2907                           ; BSR set to: 0
  2908  00F65A  C0B8  F031         	movff	printf@fval,___fltol@f1
  2909  00F65E  C0B9  F032         	movff	printf@fval+1,___fltol@f1+1
  2910  00F662  C0BA  F033         	movff	printf@fval+2,___fltol@f1+2
  2911  00F666  C0BB  F034         	movff	printf@fval+3,___fltol@f1+3
  2912  00F66A  ECE3  F06D         	call	___fltol	;wreg free
  2913  00F66E  5031               	movf	?___fltol^0,w,c
  2914  00F670  1032               	iorwf	(?___fltol+1)^0,w,c
  2915  00F672  1033               	iorwf	(?___fltol+2)^0,w,c
  2916  00F674  1034               	iorwf	(?___fltol+3)^0,w,c
  2917  00F676  A4D8               	btfss	status,2,c
  2918  00F678  D054               	goto	l4191
  2919  00F67A  0100               	movlb	0	; () banked
  2920  00F67C  BFAF               	btfsc	(printf@eexp+1)& (0+255),7,b
  2921  00F67E  D051               	goto	l4191
  2922  00F680  51AF               	movf	(printf@eexp+1)& (0+255),w,b
  2923  00F682  E104               	bnz	u3590
  2924  00F684  0E02               	movlw	2
  2925  00F686  5DAE               	subwf	printf@eexp& (0+255),w,b
  2926  00F688  A0D8               	btfss	status,0,c
  2927  00F68A  D04B               	goto	l4191
  2928  00F68C                     u3590:
  2929  00F68C                     l4177:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  2933  00F68C  C0B0  F001         	movff	printf@tmpval,___flge@ff1
  2934  00F690  C0B1  F002         	movff	printf@tmpval+1,___flge@ff1+1
  2935  00F694  C0B2  F003         	movff	printf@tmpval+2,___flge@ff1+2
  2936  00F698  C0B3  F004         	movff	printf@tmpval+3,___flge@ff1+3
  2937  00F69C  0E5F               	movlw	95
  2938  00F69E  6E05               	movwf	___flge@ff2^0,c
  2939  00F6A0  0E70               	movlw	112
  2940  00F6A2  6E06               	movwf	(___flge@ff2+1)^0,c
  2941  00F6A4  0E89               	movlw	137
  2942  00F6A6  6E07               	movwf	(___flge@ff2+2)^0,c
  2943  00F6A8  0E40               	movlw	64
  2944  00F6AA  6E08               	movwf	(___flge@ff2+3)^0,c
  2945  00F6AC  ECA6  F06E         	call	___flge	;wreg free
  2946  00F6B0  B0D8               	btfsc	status,0,c
  2947  00F6B2  D003               	goto	l4181
  2948                           
  2949                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2950  00F6B4  0100               	movlb	0	; () banked
  2951  00F6B6  0EF7               	movlw	247
  2952  00F6B8  D002               	goto	L1
  2953  00F6BA                     l4181:
  2954                           
  2955                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2956  00F6BA  0100               	movlb	0	; () banked
  2957  00F6BC  0EF8               	movlw	248
  2958  00F6BE                     L1:
  2959  00F6BE  27AE               	addwf	printf@eexp& (0+255),f,b
  2960  00F6C0  0EFF               	movlw	255
  2961  00F6C2  23AF               	addwfc	(printf@eexp+1)& (0+255),f,b
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2965  00F6C4  51AE               	movf	printf@eexp& (0+255),w,b
  2966  00F6C6  EC12  F078         	call	_scale
  2967  00F6CA  C028  F0B0         	movff	?_scale,printf@tmpval
  2968  00F6CE  C029  F0B1         	movff	?_scale+1,printf@tmpval+1
  2969  00F6D2  C02A  F0B2         	movff	?_scale+2,printf@tmpval+2
  2970  00F6D6  C02B  F0B3         	movff	?_scale+3,printf@tmpval+3
  2971  00F6DA  C0B8  F001         	movff	printf@fval,__div_to_l_@f1
  2972  00F6DE  C0B9  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  2973  00F6E2  C0BA  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  2974  00F6E6  C0BB  F004         	movff	printf@fval+3,__div_to_l_@f1+3
  2975  00F6EA  C0B0  F005         	movff	printf@tmpval,__div_to_l_@f2
  2976  00F6EE  C0B1  F006         	movff	printf@tmpval+1,__div_to_l_@f2+1
  2977  00F6F2  C0B2  F007         	movff	printf@tmpval+2,__div_to_l_@f2+2
  2978  00F6F6  C0B3  F008         	movff	printf@tmpval+3,__div_to_l_@f2+3
  2979  00F6FA  EC0E  F06F         	call	__div_to_l_	;wreg free
  2980  00F6FE  C001  F0B4         	movff	?__div_to_l_,printf@val
  2981  00F702  C002  F0B5         	movff	?__div_to_l_+1,printf@val+1
  2982  00F706  C003  F0B6         	movff	?__div_to_l_+2,printf@val+2
  2983  00F70A  C004  F0B7         	movff	?__div_to_l_+3,printf@val+3
  2984                           
  2985                           ;doprnt.c: 1155: fval = 0.0;
  2986  00F70E  0E00               	movlw	0
  2987  00F710  0100               	movlb	0	; () banked
  2988  00F712  6FB8               	movwf	printf@fval& (0+255),b
  2989  00F714  0E00               	movlw	0
  2990  00F716  6FB9               	movwf	(printf@fval+1)& (0+255),b
  2991  00F718  0E00               	movlw	0
  2992  00F71A  6FBA               	movwf	(printf@fval+2)& (0+255),b
  2993  00F71C  0E00               	movlw	0
  2994  00F71E  6FBB               	movwf	(printf@fval+3)& (0+255),b
  2995                           
  2996                           ;doprnt.c: 1156: } else {
  2997  00F720  D03C               	goto	l4195
  2998  00F722                     l4191:
  2999                           
  3000                           ;doprnt.c: 1157: val = (unsigned long)fval;
  3001  00F722  C0B8  F031         	movff	printf@fval,___fltol@f1
  3002  00F726  C0B9  F032         	movff	printf@fval+1,___fltol@f1+1
  3003  00F72A  C0BA  F033         	movff	printf@fval+2,___fltol@f1+2
  3004  00F72E  C0BB  F034         	movff	printf@fval+3,___fltol@f1+3
  3005  00F732  ECE3  F06D         	call	___fltol	;wreg free
  3006  00F736  C031  F0B4         	movff	?___fltol,printf@val
  3007  00F73A  C032  F0B5         	movff	?___fltol+1,printf@val+1
  3008  00F73E  C033  F0B6         	movff	?___fltol+2,printf@val+2
  3009  00F742  C034  F0B7         	movff	?___fltol+3,printf@val+3
  3010                           
  3011                           ;doprnt.c: 1158: fval -= (double)val;
  3012  00F746  C0B8  F047         	movff	printf@fval,___flsub@b
  3013  00F74A  C0B9  F048         	movff	printf@fval+1,___flsub@b+1
  3014  00F74E  C0BA  F049         	movff	printf@fval+2,___flsub@b+2
  3015  00F752  C0BB  F04A         	movff	printf@fval+3,___flsub@b+3
  3016  00F756  C0B4  F001         	movff	printf@val,___xxtofl@val
  3017  00F75A  C0B5  F002         	movff	printf@val+1,___xxtofl@val+1
  3018  00F75E  C0B6  F003         	movff	printf@val+2,___xxtofl@val+2
  3019  00F762  C0B7  F004         	movff	printf@val+3,___xxtofl@val+3
  3020  00F766  0E00               	movlw	0
  3021  00F768  EC1A  F071         	call	___xxtofl
  3022  00F76C  C001  F04B         	movff	?___xxtofl,___flsub@a
  3023  00F770  C002  F04C         	movff	?___xxtofl+1,___flsub@a+1
  3024  00F774  C003  F04D         	movff	?___xxtofl+2,___flsub@a+2
  3025  00F778  C004  F04E         	movff	?___xxtofl+3,___flsub@a+3
  3026  00F77C  EC05  F06B         	call	___flsub	;wreg free
  3027  00F780  C047  F0B8         	movff	?___flsub,printf@fval
  3028  00F784  C048  F0B9         	movff	?___flsub+1,printf@fval+1
  3029  00F788  C049  F0BA         	movff	?___flsub+2,printf@fval+2
  3030  00F78C  C04A  F0BB         	movff	?___flsub+3,printf@fval+3
  3031                           
  3032                           ;doprnt.c: 1159: eexp = 0;
  3033  00F790  0E00               	movlw	0
  3034  00F792  0100               	movlb	0	; () banked
  3035  00F794  6FAF               	movwf	(printf@eexp+1)& (0+255),b
  3036  00F796  0E00               	movlw	0
  3037  00F798  6FAE               	movwf	printf@eexp& (0+255),b
  3038  00F79A                     l4195:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3042  00F79A  0E01               	movlw	1
  3043  00F79C  6FBC               	movwf	printf@c& (0+255),b
  3044  00F79E                     l4201:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;doprnt.c: 1163: if(val < dpowers[c])
  3048  00F79E  51BC               	movf	printf@c& (0+255),w,b
  3049  00F7A0  0D04               	mullw	4
  3050  00F7A2  0ED5               	movlw	low _dpowers
  3051  00F7A4  24F3               	addwf	243,w,c
  3052  00F7A6  6EF6               	movwf	tblptrl,c
  3053  00F7A8  0EFE               	movlw	high _dpowers
  3054  00F7AA  20F4               	addwfc	244,w,c
  3055  00F7AC  6EF7               	movwf	tblptrh,c
  3056  00F7AE                     	if	0	;There are less than 3 active tblptr bytes
  3057  00F7AE                     	endif
  3058  00F7AE  0009               	tblrd		*+
  3059  00F7B0  50F5               	movf	tablat,w,c
  3060  00F7B2  5DB4               	subwf	printf@val& (0+255),w,b
  3061  00F7B4  0009               	tblrd		*+
  3062  00F7B6  50F5               	movf	tablat,w,c
  3063  00F7B8  59B5               	subwfb	(printf@val+1)& (0+255),w,b
  3064  00F7BA  0009               	tblrd		*+
  3065  00F7BC  50F5               	movf	tablat,w,c
  3066  00F7BE  59B6               	subwfb	(printf@val+2)& (0+255),w,b
  3067  00F7C0  0009               	tblrd		*+
  3068  00F7C2  50F5               	movf	tablat,w,c
  3069  00F7C4  59B7               	subwfb	(printf@val+3)& (0+255),w,b
  3070  00F7C6  A0D8               	btfss	status,0,c
  3071  00F7C8  D005               	goto	u3620
  3072                           
  3073                           ; BSR set to: 0
  3074  00F7CA  2BBC               	incf	printf@c& (0+255),f,b
  3075                           
  3076                           ; BSR set to: 0
  3077  00F7CC  0E0A               	movlw	10
  3078  00F7CE  19BC               	xorwf	printf@c& (0+255),w,b
  3079  00F7D0  A4D8               	btfss	status,2,c
  3080  00F7D2  D7E5               	goto	l4201
  3081  00F7D4                     u3620:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  3085  00F7D4  C0AA  F055         	movff	printf@flag,??_printf
  3086  00F7D8  0E03               	movlw	3
  3087  00F7DA  1655               	andwf	??_printf^0,f,c
  3088  00F7DC  B4D8               	btfsc	status,2,c
  3089  00F7DE  D049               	goto	l4219
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;doprnt.c: 1216: (putch('-') );
  3093  00F7E0  0E2D               	movlw	45
  3094  00F7E2  ECFD  F068         	call	_putch
  3095  00F7E6  D045               	goto	l4219
  3096  00F7E8                     l4213:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  3100  00F7E8  C0B4  F001         	movff	printf@val,___lldiv@dividend
  3101  00F7EC  C0B5  F002         	movff	printf@val+1,___lldiv@dividend+1
  3102  00F7F0  C0B6  F003         	movff	printf@val+2,___lldiv@dividend+2
  3103  00F7F4  C0B7  F004         	movff	printf@val+3,___lldiv@dividend+3
  3104  00F7F8  51BC               	movf	printf@c& (0+255),w,b
  3105  00F7FA  0D04               	mullw	4
  3106  00F7FC  0ED5               	movlw	low _dpowers
  3107  00F7FE  24F3               	addwf	243,w,c
  3108  00F800  6EF6               	movwf	tblptrl,c
  3109  00F802  0EFE               	movlw	high _dpowers
  3110  00F804  20F4               	addwfc	244,w,c
  3111  00F806  6EF7               	movwf	tblptrh,c
  3112  00F808                     	if	0	;There are less than 3 active tblptr bytes
  3113  00F808                     	endif
  3114  00F808  0009               	tblrd		*+
  3115  00F80A  CFF5 F005          	movff	tablat,___lldiv@divisor
  3116  00F80E  0009               	tblrd		*+
  3117  00F810  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3118  00F814  0009               	tblrd		*+
  3119  00F816  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3120  00F81A  000A               	tblrd		*-
  3121  00F81C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3122  00F820  EC1B  F06D         	call	___lldiv	;wreg free
  3123  00F824  C001  F0B0         	movff	?___lldiv,printf@tmpval
  3124  00F828  C002  F0B1         	movff	?___lldiv+1,printf@tmpval+1
  3125  00F82C  C003  F0B2         	movff	?___lldiv+2,printf@tmpval+2
  3126  00F830  C004  F0B3         	movff	?___lldiv+3,printf@tmpval+3
  3127                           
  3128                           ;doprnt.c: 1228: tmpval.vd %= 10;
  3129  00F834  C0B0  F00E         	movff	printf@tmpval,___llmod@dividend
  3130  00F838  C0B1  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  3131  00F83C  C0B2  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  3132  00F840  C0B3  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  3133  00F844  0E0A               	movlw	10
  3134  00F846  6E12               	movwf	___llmod@divisor^0,c
  3135  00F848  0E00               	movlw	0
  3136  00F84A  6E13               	movwf	(___llmod@divisor+1)^0,c
  3137  00F84C  0E00               	movlw	0
  3138  00F84E  6E14               	movwf	(___llmod@divisor+2)^0,c
  3139  00F850  0E00               	movlw	0
  3140  00F852  6E15               	movwf	(___llmod@divisor+3)^0,c
  3141  00F854  EC76  F06C         	call	___llmod	;wreg free
  3142  00F858  C00E  F0B0         	movff	?___llmod,printf@tmpval
  3143  00F85C  C00F  F0B1         	movff	?___llmod+1,printf@tmpval+1
  3144  00F860  C010  F0B2         	movff	?___llmod+2,printf@tmpval+2
  3145  00F864  C011  F0B3         	movff	?___llmod+3,printf@tmpval+3
  3146                           
  3147                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  3148  00F868  0100               	movlb	0	; () banked
  3149  00F86A  51B0               	movf	printf@tmpval& (0+255),w,b
  3150  00F86C  0F30               	addlw	48
  3151  00F86E  ECFD  F068         	call	_putch
  3152  00F872                     l4219:
  3153  00F872  0100               	movlb	0	; () banked
  3154  00F874  07BC               	decf	printf@c& (0+255),f,b
  3155  00F876  29BC               	incf	printf@c& (0+255),w,b
  3156  00F878  B4D8               	btfsc	status,2,c
  3157  00F87A  D008               	goto	l4225
  3158  00F87C  D7B5               	goto	l4213
  3159  00F87E                     l4221:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;doprnt.c: 1234: (putch('0') );
  3163  00F87E  0E30               	movlw	48
  3164  00F880  ECFD  F068         	call	_putch
  3165                           
  3166                           ;doprnt.c: 1235: eexp--;
  3167  00F884  0100               	movlb	0	; () banked
  3168  00F886  07AE               	decf	printf@eexp& (0+255),f,b
  3169  00F888  A0D8               	btfss	status,0,c
  3170  00F88A  07AF               	decf	(printf@eexp+1)& (0+255),f,b
  3171  00F88C                     l4225:
  3172                           
  3173                           ; BSR set to: 0
  3174  00F88C  BFAF               	btfsc	(printf@eexp+1)& (0+255),7,b
  3175  00F88E  D005               	goto	u3650
  3176  00F890  51AF               	movf	(printf@eexp+1)& (0+255),w,b
  3177  00F892  E1F5               	bnz	l4221
  3178  00F894  05AE               	decf	printf@eexp& (0+255),w,b
  3179  00F896  B0D8               	btfsc	status,0,c
  3180  00F898  D7F2               	goto	l4221
  3181  00F89A                     u3650:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3185  00F89A  BFAD               	btfsc	(printf@prec+1)& (0+255),7,b
  3186  00F89C  D009               	goto	l630
  3187  00F89E  51AD               	movf	(printf@prec+1)& (0+255),w,b
  3188  00F8A0  E104               	bnz	u3660
  3189  00F8A2  0E09               	movlw	9
  3190  00F8A4  5DAC               	subwf	printf@prec& (0+255),w,b
  3191  00F8A6  A0D8               	btfss	status,0,c
  3192  00F8A8  D003               	goto	l630
  3193  00F8AA                     u3660:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3197  00F8AA  0E08               	movlw	8
  3198  00F8AC  6FBC               	movwf	printf@c& (0+255),b
  3199  00F8AE  D002               	goto	l4231
  3200  00F8B0                     l630:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  3204  00F8B0  C0AC  F0BC         	movff	printf@prec,printf@c
  3205  00F8B4                     l4231:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;doprnt.c: 1241: prec -= (int)c;
  3209  00F8B4  51BC               	movf	printf@c& (0+255),w,b
  3210  00F8B6  5FAC               	subwf	printf@prec& (0+255),f,b
  3211  00F8B8  0E00               	movlw	0
  3212  00F8BA  5BAD               	subwfb	(printf@prec+1)& (0+255),f,b
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;doprnt.c: 1245: if(c)
  3216  00F8BC  51BC               	movf	printf@c& (0+255),w,b
  3217  00F8BE  B4D8               	btfsc	status,2,c
  3218  00F8C0  D003               	goto	l4237
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;doprnt.c: 1247: (putch('.') );
  3222  00F8C2  0E2E               	movlw	46
  3223  00F8C4  ECFD  F068         	call	_putch
  3224  00F8C8                     l4237:
  3225                           
  3226                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3227  00F8C8  0100               	movlb	0	; () banked
  3228  00F8CA  51BC               	movf	printf@c& (0+255),w,b
  3229  00F8CC  EC12  F078         	call	_scale
  3230  00F8D0  C028  F0A4         	movff	?_scale,_printf$2776
  3231  00F8D4  C029  F0A5         	movff	?_scale+1,_printf$2776+1
  3232  00F8D8  C02A  F0A6         	movff	?_scale+2,_printf$2776+2
  3233  00F8DC  C02B  F0A7         	movff	?_scale+3,_printf$2776+3
  3234                           
  3235                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3236  00F8E0  C0B8  F013         	movff	printf@fval,___flmul@a
  3237  00F8E4  C0B9  F014         	movff	printf@fval+1,___flmul@a+1
  3238  00F8E8  C0BA  F015         	movff	printf@fval+2,___flmul@a+2
  3239  00F8EC  C0BB  F016         	movff	printf@fval+3,___flmul@a+3
  3240  00F8F0  C0A4  F00F         	movff	_printf$2776,___flmul@b
  3241  00F8F4  C0A5  F010         	movff	_printf$2776+1,___flmul@b+1
  3242  00F8F8  C0A6  F011         	movff	_printf$2776+2,___flmul@b+2
  3243  00F8FC  C0A7  F012         	movff	_printf$2776+3,___flmul@b+3
  3244  00F900  EC7C  F076         	call	___flmul	;wreg free
  3245  00F904  C00F  F031         	movff	?___flmul,___fltol@f1
  3246  00F908  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  3247  00F90C  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  3248  00F910  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  3249  00F914  ECE3  F06D         	call	___fltol	;wreg free
  3250  00F918  C031  F0B4         	movff	?___fltol,printf@val
  3251  00F91C  C032  F0B5         	movff	?___fltol+1,printf@val+1
  3252  00F920  C033  F0B6         	movff	?___fltol+2,printf@val+2
  3253  00F924  C034  F0B7         	movff	?___fltol+3,printf@val+3
  3254                           
  3255                           ;doprnt.c: 1254: while(c--) {
  3256  00F928  D06C               	goto	l4247
  3257  00F92A                     l4241:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  3261  00F92A  C0B4  F001         	movff	printf@val,___lldiv@dividend
  3262  00F92E  C0B5  F002         	movff	printf@val+1,___lldiv@dividend+1
  3263  00F932  C0B6  F003         	movff	printf@val+2,___lldiv@dividend+2
  3264  00F936  C0B7  F004         	movff	printf@val+3,___lldiv@dividend+3
  3265  00F93A  51BC               	movf	printf@c& (0+255),w,b
  3266  00F93C  0D04               	mullw	4
  3267  00F93E  0ED5               	movlw	low _dpowers
  3268  00F940  24F3               	addwf	243,w,c
  3269  00F942  6EF6               	movwf	tblptrl,c
  3270  00F944  0EFE               	movlw	high _dpowers
  3271  00F946  20F4               	addwfc	244,w,c
  3272  00F948  6EF7               	movwf	tblptrh,c
  3273  00F94A                     	if	0	;There are less than 3 active tblptr bytes
  3274  00F94A                     	endif
  3275  00F94A  0009               	tblrd		*+
  3276  00F94C  CFF5 F005          	movff	tablat,___lldiv@divisor
  3277  00F950  0009               	tblrd		*+
  3278  00F952  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3279  00F956  0009               	tblrd		*+
  3280  00F958  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3281  00F95C  000A               	tblrd		*-
  3282  00F95E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3283  00F962  EC1B  F06D         	call	___lldiv	;wreg free
  3284  00F966  C001  F0B0         	movff	?___lldiv,printf@tmpval
  3285  00F96A  C002  F0B1         	movff	?___lldiv+1,printf@tmpval+1
  3286  00F96E  C003  F0B2         	movff	?___lldiv+2,printf@tmpval+2
  3287  00F972  C004  F0B3         	movff	?___lldiv+3,printf@tmpval+3
  3288                           
  3289                           ;doprnt.c: 1256: tmpval.vd %= 10;
  3290  00F976  C0B0  F00E         	movff	printf@tmpval,___llmod@dividend
  3291  00F97A  C0B1  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  3292  00F97E  C0B2  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  3293  00F982  C0B3  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  3294  00F986  0E0A               	movlw	10
  3295  00F988  6E12               	movwf	___llmod@divisor^0,c
  3296  00F98A  0E00               	movlw	0
  3297  00F98C  6E13               	movwf	(___llmod@divisor+1)^0,c
  3298  00F98E  0E00               	movlw	0
  3299  00F990  6E14               	movwf	(___llmod@divisor+2)^0,c
  3300  00F992  0E00               	movlw	0
  3301  00F994  6E15               	movwf	(___llmod@divisor+3)^0,c
  3302  00F996  EC76  F06C         	call	___llmod	;wreg free
  3303  00F99A  C00E  F0B0         	movff	?___llmod,printf@tmpval
  3304  00F99E  C00F  F0B1         	movff	?___llmod+1,printf@tmpval+1
  3305  00F9A2  C010  F0B2         	movff	?___llmod+2,printf@tmpval+2
  3306  00F9A6  C011  F0B3         	movff	?___llmod+3,printf@tmpval+3
  3307                           
  3308                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  3309  00F9AA  0100               	movlb	0	; () banked
  3310  00F9AC  51B0               	movf	printf@tmpval& (0+255),w,b
  3311  00F9AE  0F30               	addlw	48
  3312  00F9B0  ECFD  F068         	call	_putch
  3313                           
  3314                           ;doprnt.c: 1258: val %= dpowers[c];
  3315  00F9B4  C0B4  F00E         	movff	printf@val,___llmod@dividend
  3316  00F9B8  C0B5  F00F         	movff	printf@val+1,___llmod@dividend+1
  3317  00F9BC  C0B6  F010         	movff	printf@val+2,___llmod@dividend+2
  3318  00F9C0  C0B7  F011         	movff	printf@val+3,___llmod@dividend+3
  3319  00F9C4  0100               	movlb	0	; () banked
  3320  00F9C6  51BC               	movf	printf@c& (0+255),w,b
  3321  00F9C8  0D04               	mullw	4
  3322  00F9CA  0ED5               	movlw	low _dpowers
  3323  00F9CC  24F3               	addwf	243,w,c
  3324  00F9CE  6EF6               	movwf	tblptrl,c
  3325  00F9D0  0EFE               	movlw	high _dpowers
  3326  00F9D2  20F4               	addwfc	244,w,c
  3327  00F9D4  6EF7               	movwf	tblptrh,c
  3328  00F9D6                     	if	0	;There are less than 3 active tblptr bytes
  3329  00F9D6                     	endif
  3330  00F9D6  0009               	tblrd		*+
  3331  00F9D8  CFF5 F012          	movff	tablat,___llmod@divisor
  3332  00F9DC  0009               	tblrd		*+
  3333  00F9DE  CFF5 F013          	movff	tablat,___llmod@divisor+1
  3334  00F9E2  0009               	tblrd		*+
  3335  00F9E4  CFF5 F014          	movff	tablat,___llmod@divisor+2
  3336  00F9E8  000A               	tblrd		*-
  3337  00F9EA  CFF5 F015          	movff	tablat,___llmod@divisor+3
  3338  00F9EE  EC76  F06C         	call	___llmod	;wreg free
  3339  00F9F2  C00E  F0B4         	movff	?___llmod,printf@val
  3340  00F9F6  C00F  F0B5         	movff	?___llmod+1,printf@val+1
  3341  00F9FA  C010  F0B6         	movff	?___llmod+2,printf@val+2
  3342  00F9FE  C011  F0B7         	movff	?___llmod+3,printf@val+3
  3343  00FA02                     l4247:
  3344  00FA02  0100               	movlb	0	; () banked
  3345  00FA04  07BC               	decf	printf@c& (0+255),f,b
  3346  00FA06  29BC               	incf	printf@c& (0+255),w,b
  3347  00FA08  B4D8               	btfsc	status,2,c
  3348  00FA0A  D008               	goto	l4253
  3349  00FA0C  D78E               	goto	l4241
  3350  00FA0E                     l4249:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;doprnt.c: 1262: (putch('0') );
  3354  00FA0E  0E30               	movlw	48
  3355  00FA10  ECFD  F068         	call	_putch
  3356                           
  3357                           ;doprnt.c: 1263: prec--;
  3358  00FA14  0100               	movlb	0	; () banked
  3359  00FA16  07AC               	decf	printf@prec& (0+255),f,b
  3360  00FA18  A0D8               	btfss	status,0,c
  3361  00FA1A  07AD               	decf	(printf@prec+1)& (0+255),f,b
  3362  00FA1C                     l4253:
  3363                           
  3364                           ; BSR set to: 0
  3365  00FA1C  51AC               	movf	printf@prec& (0+255),w,b
  3366  00FA1E  11AD               	iorwf	(printf@prec+1)& (0+255),w,b
  3367  00FA20  B4D8               	btfsc	status,2,c
  3368  00FA22  D105               	goto	u3770
  3369  00FA24  D7F4               	goto	l4249
  3370  00FA26                     l602:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x80) == 0x00)
  3374  00FA26  BFAA               	btfsc	printf@flag& (0+255),7,b
  3375  00FA28  D01B               	goto	l4265
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)ap),
      +                           (int)0));
  3379  00FA2A  51A9               	movf	printf@ap& (0+255),w,b
  3380  00FA2C  6ED9               	movwf	fsr2l,c
  3381  00FA2E  6ADA               	clrf	fsr2h,c
  3382  00FA30  CFDE F0B4          	movff	postinc2,printf@val
  3383  00FA34  CFDD F0B5          	movff	postdec2,printf@val+1
  3384  00FA38  0E00               	movlw	0
  3385  00FA3A  BFB5               	btfsc	(printf@val+1)& (0+255),7,b
  3386  00FA3C  0EFF               	movlw	-1
  3387  00FA3E  6FB6               	movwf	(printf@val+2)& (0+255),b
  3388  00FA40  6FB7               	movwf	(printf@val+3)& (0+255),b
  3389                           
  3390                           ; BSR set to: 0
  3391  00FA42  0E02               	movlw	2
  3392  00FA44  27A9               	addwf	printf@ap& (0+255),f,b
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;doprnt.c: 1287: if((long)val < 0) {
  3396  00FA46  AFB7               	btfss	(printf@val+3)& (0+255),7,b
  3397  00FA48  D057               	goto	l4299
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;doprnt.c: 1288: flag |= 0x03;
  3401  00FA4A  0E03               	movlw	3
  3402  00FA4C  13AA               	iorwf	printf@flag& (0+255),f,b
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;doprnt.c: 1289: val = -val;
  3406  00FA4E  1FB7               	comf	(printf@val+3)& (0+255),f,b
  3407  00FA50  1FB6               	comf	(printf@val+2)& (0+255),f,b
  3408  00FA52  1FB5               	comf	(printf@val+1)& (0+255),f,b
  3409  00FA54  6DB4               	negf	printf@val& (0+255),b
  3410  00FA56  0E00               	movlw	0
  3411  00FA58  23B5               	addwfc	(printf@val+1)& (0+255),f,b
  3412  00FA5A  23B6               	addwfc	(printf@val+2)& (0+255),f,b
  3413  00FA5C  23B7               	addwfc	(printf@val+3)& (0+255),f,b
  3414  00FA5E  D04C               	goto	l4299
  3415  00FA60                     l4265:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  3419  00FA60  51A9               	movf	printf@ap& (0+255),w,b
  3420  00FA62  6ED9               	movwf	fsr2l,c
  3421  00FA64  6ADA               	clrf	fsr2h,c
  3422  00FA66  CFDE F055          	movff	postinc2,??_printf
  3423  00FA6A  CFDD F056          	movff	postdec2,??_printf+1
  3424  00FA6E  C055  F0B4         	movff	??_printf,printf@val
  3425  00FA72  C056  F0B5         	movff	??_printf+1,printf@val+1
  3426  00FA76  6BB6               	clrf	(printf@val+2)& (0+255),b
  3427  00FA78  6BB7               	clrf	(printf@val+3)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430  00FA7A  0E02               	movlw	2
  3431  00FA7C  27A9               	addwf	printf@ap& (0+255),f,b
  3432  00FA7E  D03C               	goto	l4299
  3433  00FA80                     l4269:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3437  00FA80  0E01               	movlw	1
  3438  00FA82  6FBC               	movwf	printf@c& (0+255),b
  3439  00FA84                     l4275:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;doprnt.c: 1332: if(val < dpowers[c])
  3443  00FA84  51BC               	movf	printf@c& (0+255),w,b
  3444  00FA86  0D04               	mullw	4
  3445  00FA88  0ED5               	movlw	low _dpowers
  3446  00FA8A  24F3               	addwf	243,w,c
  3447  00FA8C  6EF6               	movwf	tblptrl,c
  3448  00FA8E  0EFE               	movlw	high _dpowers
  3449  00FA90  20F4               	addwfc	244,w,c
  3450  00FA92  6EF7               	movwf	tblptrh,c
  3451  00FA94                     	if	0	;There are less than 3 active tblptr bytes
  3452  00FA94                     	endif
  3453  00FA94  0009               	tblrd		*+
  3454  00FA96  50F5               	movf	tablat,w,c
  3455  00FA98  5DB4               	subwf	printf@val& (0+255),w,b
  3456  00FA9A  0009               	tblrd		*+
  3457  00FA9C  50F5               	movf	tablat,w,c
  3458  00FA9E  59B5               	subwfb	(printf@val+1)& (0+255),w,b
  3459  00FAA0  0009               	tblrd		*+
  3460  00FAA2  50F5               	movf	tablat,w,c
  3461  00FAA4  59B6               	subwfb	(printf@val+2)& (0+255),w,b
  3462  00FAA6  0009               	tblrd		*+
  3463  00FAA8  50F5               	movf	tablat,w,c
  3464  00FAAA  59B7               	subwfb	(printf@val+3)& (0+255),w,b
  3465  00FAAC  A0D8               	btfss	status,0,c
  3466  00FAAE  D02C               	goto	l4301
  3467                           
  3468                           ; BSR set to: 0
  3469  00FAB0  2BBC               	incf	printf@c& (0+255),f,b
  3470                           
  3471                           ; BSR set to: 0
  3472  00FAB2  0E0A               	movlw	10
  3473  00FAB4  19BC               	xorwf	printf@c& (0+255),w,b
  3474  00FAB6  B4D8               	btfsc	status,2,c
  3475  00FAB8  D027               	goto	l4301
  3476  00FABA  D7E4               	goto	l4275
  3477  00FABC                     l4283:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3481  00FABC  0E01               	movlw	1
  3482  00FABE  6FBC               	movwf	printf@c& (0+255),b
  3483  00FAC0                     l4289:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;doprnt.c: 1343: if(val < hexpowers[c])
  3487  00FAC0  51BC               	movf	printf@c& (0+255),w,b
  3488  00FAC2  0D04               	mullw	4
  3489  00FAC4  0EB5               	movlw	low _hexpowers
  3490  00FAC6  24F3               	addwf	243,w,c
  3491  00FAC8  6EF6               	movwf	tblptrl,c
  3492  00FACA  0EFE               	movlw	high _hexpowers
  3493  00FACC  20F4               	addwfc	244,w,c
  3494  00FACE  6EF7               	movwf	tblptrh,c
  3495  00FAD0                     	if	0	;There are less than 3 active tblptr bytes
  3496  00FAD0                     	endif
  3497  00FAD0  0009               	tblrd		*+
  3498  00FAD2  50F5               	movf	tablat,w,c
  3499  00FAD4  5DB4               	subwf	printf@val& (0+255),w,b
  3500  00FAD6  0009               	tblrd		*+
  3501  00FAD8  50F5               	movf	tablat,w,c
  3502  00FADA  59B5               	subwfb	(printf@val+1)& (0+255),w,b
  3503  00FADC  0009               	tblrd		*+
  3504  00FADE  50F5               	movf	tablat,w,c
  3505  00FAE0  59B6               	subwfb	(printf@val+2)& (0+255),w,b
  3506  00FAE2  0009               	tblrd		*+
  3507  00FAE4  50F5               	movf	tablat,w,c
  3508  00FAE6  59B7               	subwfb	(printf@val+3)& (0+255),w,b
  3509  00FAE8  A0D8               	btfss	status,0,c
  3510  00FAEA  D00E               	goto	l4301
  3511                           
  3512                           ; BSR set to: 0
  3513  00FAEC  2BBC               	incf	printf@c& (0+255),f,b
  3514                           
  3515                           ; BSR set to: 0
  3516  00FAEE  0E08               	movlw	8
  3517  00FAF0  19BC               	xorwf	printf@c& (0+255),w,b
  3518  00FAF2  B4D8               	btfsc	status,2,c
  3519  00FAF4  D009               	goto	l4301
  3520  00FAF6  D7E4               	goto	l4289
  3521  00FAF8                     l4299:
  3522                           
  3523                           ; BSR set to: 0
  3524  00FAF8  51AA               	movf	printf@flag& (0+255),w,b
  3525  00FAFA  0B80               	andlw	128
  3526                           
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 2, Range of values is 0 to 128
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte            7     4 (average)
  3532                           ;	Chosen strategy is simple_byte
  3533  00FAFC  0A00               	xorlw	0	; case 0
  3534  00FAFE  B4D8               	btfsc	status,2,c
  3535  00FB00  D7BF               	goto	l4269
  3536  00FB02  0A80               	xorlw	128	; case 128
  3537  00FB04  B4D8               	btfsc	status,2,c
  3538  00FB06  D7DA               	goto	l4283
  3539  00FB08                     l4301:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3543  00FB08  C0AA  F055         	movff	printf@flag,??_printf
  3544  00FB0C  0E03               	movlw	3
  3545  00FB0E  1655               	andwf	??_printf^0,f,c
  3546  00FB10  B4D8               	btfsc	status,2,c
  3547  00FB12  D003               	goto	l4305
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;doprnt.c: 1465: (putch('-') );
  3551  00FB14  0E2D               	movlw	45
  3552  00FB16  ECFD  F068         	call	_putch
  3553  00FB1A                     l4305:
  3554                           
  3555                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3556  00FB1A  C0BC  F0AC         	movff	printf@c,printf@prec
  3557  00FB1E  0100               	movlb	0	; () banked
  3558  00FB20  6BAD               	clrf	(printf@prec+1)& (0+255),b
  3559                           
  3560                           ;doprnt.c: 1500: while(prec--) {
  3561  00FB22  D07C               	goto	l4319
  3562  00FB24                     l4307:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  3566  00FB24  C0AC  F055         	movff	printf@prec,??_printf
  3567  00FB28  C0AD  F056         	movff	printf@prec+1,??_printf+1
  3568  00FB2C  90D8               	bcf	status,0,c
  3569  00FB2E  3655               	rlcf	??_printf^0,f,c
  3570  00FB30  3656               	rlcf	(??_printf+1)^0,f,c
  3571  00FB32  90D8               	bcf	status,0,c
  3572  00FB34  3655               	rlcf	??_printf^0,f,c
  3573  00FB36  3656               	rlcf	(??_printf+1)^0,f,c
  3574  00FB38  0ED5               	movlw	low _dpowers
  3575  00FB3A  2455               	addwf	??_printf^0,w,c
  3576  00FB3C  6EF6               	movwf	tblptrl,c
  3577  00FB3E  0EFE               	movlw	high _dpowers
  3578  00FB40  2056               	addwfc	(??_printf+1)^0,w,c
  3579  00FB42  6EF7               	movwf	tblptrh,c
  3580  00FB44                     	if	0	;There are less than 3 active tblptr bytes
  3581  00FB44                     	endif
  3582  00FB44  0009               	tblrd		*+
  3583  00FB46  CFF5 F005          	movff	tablat,___lldiv@divisor
  3584  00FB4A  0009               	tblrd		*+
  3585  00FB4C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3586  00FB50  0009               	tblrd		*+
  3587  00FB52  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3588  00FB56  000A               	tblrd		*-
  3589  00FB58  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3590  00FB5C  C0B4  F001         	movff	printf@val,___lldiv@dividend
  3591  00FB60  C0B5  F002         	movff	printf@val+1,___lldiv@dividend+1
  3592  00FB64  C0B6  F003         	movff	printf@val+2,___lldiv@dividend+2
  3593  00FB68  C0B7  F004         	movff	printf@val+3,___lldiv@dividend+3
  3594  00FB6C  EC1B  F06D         	call	___lldiv	;wreg free
  3595  00FB70  C001  F00E         	movff	?___lldiv,___llmod@dividend
  3596  00FB74  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  3597  00FB78  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  3598  00FB7C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  3599  00FB80  0E0A               	movlw	10
  3600  00FB82  6E12               	movwf	___llmod@divisor^0,c
  3601  00FB84  0E00               	movlw	0
  3602  00FB86  6E13               	movwf	(___llmod@divisor+1)^0,c
  3603  00FB88  0E00               	movlw	0
  3604  00FB8A  6E14               	movwf	(___llmod@divisor+2)^0,c
  3605  00FB8C  0E00               	movlw	0
  3606  00FB8E  6E15               	movwf	(___llmod@divisor+3)^0,c
  3607  00FB90  EC76  F06C         	call	___llmod	;wreg free
  3608  00FB94  500E               	movf	?___llmod^0,w,c
  3609  00FB96  0F30               	addlw	48
  3610  00FB98  0100               	movlb	0	; () banked
  3611  00FB9A  6FBC               	movwf	printf@c& (0+255),b
  3612                           
  3613                           ;doprnt.c: 1517: break;
  3614  00FB9C  D03C               	goto	l4317
  3615  00FB9E                     l4309:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  3619  00FB9E  C0B4  F001         	movff	printf@val,___lldiv@dividend
  3620  00FBA2  C0B5  F002         	movff	printf@val+1,___lldiv@dividend+1
  3621  00FBA6  C0B6  F003         	movff	printf@val+2,___lldiv@dividend+2
  3622  00FBAA  C0B7  F004         	movff	printf@val+3,___lldiv@dividend+3
  3623  00FBAE  C0AC  F055         	movff	printf@prec,??_printf
  3624  00FBB2  C0AD  F056         	movff	printf@prec+1,??_printf+1
  3625  00FBB6  90D8               	bcf	status,0,c
  3626  00FBB8  3655               	rlcf	??_printf^0,f,c
  3627  00FBBA  3656               	rlcf	(??_printf+1)^0,f,c
  3628  00FBBC  90D8               	bcf	status,0,c
  3629  00FBBE  3655               	rlcf	??_printf^0,f,c
  3630  00FBC0  3656               	rlcf	(??_printf+1)^0,f,c
  3631  00FBC2  0EB5               	movlw	low _hexpowers
  3632  00FBC4  2455               	addwf	??_printf^0,w,c
  3633  00FBC6  6EF6               	movwf	tblptrl,c
  3634  00FBC8  0EFE               	movlw	high _hexpowers
  3635  00FBCA  2056               	addwfc	(??_printf+1)^0,w,c
  3636  00FBCC  6EF7               	movwf	tblptrh,c
  3637  00FBCE                     	if	0	;There are less than 3 active tblptr bytes
  3638  00FBCE                     	endif
  3639  00FBCE  0009               	tblrd		*+
  3640  00FBD0  CFF5 F005          	movff	tablat,___lldiv@divisor
  3641  00FBD4  0009               	tblrd		*+
  3642  00FBD6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3643  00FBDA  0009               	tblrd		*+
  3644  00FBDC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3645  00FBE0  000A               	tblrd		*-
  3646  00FBE2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3647  00FBE6  EC1B  F06D         	call	___lldiv	;wreg free
  3648  00FBEA  5001               	movf	?___lldiv^0,w,c
  3649  00FBEC  0B0F               	andlw	15
  3650  00FBEE  0100               	movlb	0	; () banked
  3651  00FBF0  6FA8               	movwf	printf@idx& (0+255),b
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;doprnt.c: 1530: c = "0123456789ABCDEF"[idx];
  3655  00FBF2  0E6D               	movlw	low STR_19
  3656  00FBF4  25A8               	addwf	printf@idx& (0+255),w,b
  3657  00FBF6  6EF6               	movwf	tblptrl,c
  3658  00FBF8  6AF7               	clrf	tblptrh,c
  3659  00FBFA  0EFF               	movlw	high STR_19
  3660  00FBFC  22F7               	addwfc	tblptrh,f,c
  3661  00FBFE                     	if	0	;There are less than 3 active tblptr bytes
  3662  00FBFE                     	endif
  3663  00FBFE  0008               	tblrd		*
  3664  00FC00  CFF5 F0BC          	movff	tablat,printf@c
  3665                           
  3666                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  3667  00FC04  D008               	goto	l4317
  3668  00FC06                     l4315:
  3669                           
  3670                           ; BSR set to: 0
  3671  00FC06  51AA               	movf	printf@flag& (0+255),w,b
  3672  00FC08  0B80               	andlw	128
  3673                           
  3674                           ; Switch size 1, requested type "simple"
  3675                           ; Number of cases is 2, Range of values is 0 to 128
  3676                           ; switch strategies available:
  3677                           ; Name         Instructions Cycles
  3678                           ; simple_byte            7     4 (average)
  3679                           ;	Chosen strategy is simple_byte
  3680  00FC0A  0A00               	xorlw	0	; case 0
  3681  00FC0C  B4D8               	btfsc	status,2,c
  3682  00FC0E  D78A               	goto	l4307
  3683  00FC10  0A80               	xorlw	128	; case 128
  3684  00FC12  B4D8               	btfsc	status,2,c
  3685  00FC14  D7C4               	goto	l4309
  3686  00FC16                     l4317:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;doprnt.c: 1550: (putch(c) );
  3690  00FC16  51BC               	movf	printf@c& (0+255),w,b
  3691  00FC18  ECFD  F068         	call	_putch
  3692  00FC1C                     l4319:
  3693  00FC1C  0100               	movlb	0	; () banked
  3694  00FC1E  07AC               	decf	printf@prec& (0+255),f,b
  3695  00FC20  A0D8               	btfss	status,0,c
  3696  00FC22  07AD               	decf	(printf@prec+1)& (0+255),f,b
  3697  00FC24  29AC               	incf	printf@prec& (0+255),w,b
  3698  00FC26  E1EF               	bnz	l4315
  3699  00FC28  29AD               	incf	(printf@prec+1)& (0+255),w,b
  3700  00FC2A  A4D8               	btfss	status,2,c
  3701  00FC2C  D7EC               	goto	l4315
  3702  00FC2E                     u3770:
  3703  00FC2E  C04F  FFF6         	movff	printf@f,tblptrl
  3704  00FC32  C050  FFF7         	movff	printf@f+1,tblptrh
  3705  00FC36  4A4F               	infsnz	printf@f^0,f,c
  3706  00FC38  2A50               	incf	(printf@f+1)^0,f,c
  3707  00FC3A                     	if	0	;tblptru may be non-zero
  3708  00FC3A                     	endif
  3709  00FC3A                     	if	0	;tblptru may be non-zero
  3710  00FC3A                     	endif
  3711  00FC3A  0008               	tblrd		*
  3712  00FC3C  CFF5 F0BC          	movff	tablat,printf@c
  3713  00FC40  0100               	movlb	0	; () banked
  3714  00FC42  51BC               	movf	printf@c& (0+255),w,b
  3715  00FC44  B4D8               	btfsc	status,2,c
  3716  00FC46  0012               	return	
  3717  00FC48  EFFF  F079         	goto	l4109
  3718  00FC4C                     __end_of_printf:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _scale *****************
  3722 ;; Defined at:
  3723 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  scl             1    wreg     char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  scl             1   47[COMRAM] char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  4   39[COMRAM] char 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 3F/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;Total ram usage:        9 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    1
  3744 ;; This function calls:
  3745 ;;		___awdiv
  3746 ;;		___awmod
  3747 ;;		___flmul
  3748 ;; This function is called by:
  3749 ;;		_printf
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text8
  3754  00F024                     __ptext8:
  3755                           	callstack 0
  3756  00F024                     _scale:
  3757                           	callstack 27
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;incstack = 0
  3761                           ;scale@scl stored from wreg
  3762  00F024  6E30               	movwf	scale@scl^0,c
  3763                           
  3764                           ;doprnt.c: 436: if(scl < 0) {
  3765  00F026  AE30               	btfss	scale@scl^0,7,c
  3766  00F028  D0F3               	goto	l3787
  3767                           
  3768                           ;doprnt.c: 437: scl = -scl;
  3769  00F02A  6C30               	negf	scale@scl^0,c
  3770                           
  3771                           ;doprnt.c: 438: if(scl>=110)
  3772  00F02C  5030               	movf	scale@scl^0,w,c
  3773  00F02E  0A80               	xorlw	128
  3774  00F030  0F12               	addlw	-238
  3775  00F032  A0D8               	btfss	status,0,c
  3776  00F034  D088               	goto	l3777
  3777                           
  3778                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3779  00F036  0E00               	movlw	0
  3780  00F038  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3781  00F03A  0E0A               	movlw	10
  3782  00F03C  6E09               	movwf	___awdiv@divisor^0,c
  3783  00F03E  0E00               	movlw	0
  3784  00F040  6E04               	movwf	(___awmod@divisor+1)^0,c
  3785  00F042  0E64               	movlw	100
  3786  00F044  6E03               	movwf	___awmod@divisor^0,c
  3787  00F046  5030               	movf	scale@scl^0,w,c
  3788  00F048  6E01               	movwf	___awmod@dividend^0,c
  3789  00F04A  6A02               	clrf	(___awmod@dividend+1)^0,c
  3790  00F04C  BE01               	btfsc	___awmod@dividend^0,7,c
  3791  00F04E  0602               	decf	(___awmod@dividend+1)^0,f,c
  3792  00F050  ECA9  F06C         	call	___awmod	;wreg free
  3793  00F054  C001  F007         	movff	?___awmod,___awdiv@dividend
  3794  00F058  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3795  00F05C  EC5C  F06D         	call	___awdiv	;wreg free
  3796  00F060  0E09               	movlw	9
  3797  00F062  2607               	addwf	?___awdiv^0,f,c
  3798  00F064  5007               	movf	?___awdiv^0,w,c
  3799  00F066  0D04               	mullw	4
  3800  00F068  0E81               	movlw	low __npowers_
  3801  00F06A  24F3               	addwf	243,w,c
  3802  00F06C  6EF6               	movwf	tblptrl,c
  3803  00F06E  0EFE               	movlw	high __npowers_
  3804  00F070  20F4               	addwfc	244,w,c
  3805  00F072  6EF7               	movwf	tblptrh,c
  3806  00F074                     	if	0	;There are less than 3 active tblptr bytes
  3807  00F074                     	endif
  3808  00F074  0009               	tblrd		*+
  3809  00F076  CFF5 F013          	movff	tablat,___flmul@a
  3810  00F07A  0009               	tblrd		*+
  3811  00F07C  CFF5 F014          	movff	tablat,___flmul@a+1
  3812  00F080  0009               	tblrd		*+
  3813  00F082  CFF5 F015          	movff	tablat,___flmul@a+2
  3814  00F086  000A               	tblrd		*-
  3815  00F088  CFF5 F016          	movff	tablat,___flmul@a+3
  3816  00F08C  0E00               	movlw	0
  3817  00F08E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3818  00F090  0E64               	movlw	100
  3819  00F092  6E09               	movwf	___awdiv@divisor^0,c
  3820  00F094  5030               	movf	scale@scl^0,w,c
  3821  00F096  6E07               	movwf	___awdiv@dividend^0,c
  3822  00F098  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3823  00F09A  BE07               	btfsc	___awdiv@dividend^0,7,c
  3824  00F09C  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3825  00F09E  EC5C  F06D         	call	___awdiv	;wreg free
  3826  00F0A2  0E12               	movlw	18
  3827  00F0A4  2607               	addwf	?___awdiv^0,f,c
  3828  00F0A6  5007               	movf	?___awdiv^0,w,c
  3829  00F0A8  0D04               	mullw	4
  3830  00F0AA  0E81               	movlw	low __npowers_
  3831  00F0AC  24F3               	addwf	243,w,c
  3832  00F0AE  6EF6               	movwf	tblptrl,c
  3833  00F0B0  0EFE               	movlw	high __npowers_
  3834  00F0B2  20F4               	addwfc	244,w,c
  3835  00F0B4  6EF7               	movwf	tblptrh,c
  3836  00F0B6                     	if	0	;There are less than 3 active tblptr bytes
  3837  00F0B6                     	endif
  3838  00F0B6  0009               	tblrd		*+
  3839  00F0B8  CFF5 F00F          	movff	tablat,___flmul@b
  3840  00F0BC  0009               	tblrd		*+
  3841  00F0BE  CFF5 F010          	movff	tablat,___flmul@b+1
  3842  00F0C2  0009               	tblrd		*+
  3843  00F0C4  CFF5 F011          	movff	tablat,___flmul@b+2
  3844  00F0C8  000A               	tblrd		*-
  3845  00F0CA  CFF5 F012          	movff	tablat,___flmul@b+3
  3846  00F0CE  EC7C  F076         	call	___flmul	;wreg free
  3847  00F0D2  C00F  F02C         	movff	?___flmul,_scale$2775
  3848  00F0D6  C010  F02D         	movff	?___flmul+1,_scale$2775+1
  3849  00F0DA  C011  F02E         	movff	?___flmul+2,_scale$2775+2
  3850  00F0DE  C012  F02F         	movff	?___flmul+3,_scale$2775+3
  3851                           
  3852                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3853  00F0E2  C02C  F00F         	movff	_scale$2775,___flmul@b
  3854  00F0E6  C02D  F010         	movff	_scale$2775+1,___flmul@b+1
  3855  00F0EA  C02E  F011         	movff	_scale$2775+2,___flmul@b+2
  3856  00F0EE  C02F  F012         	movff	_scale$2775+3,___flmul@b+3
  3857  00F0F2  0E00               	movlw	0
  3858  00F0F4  6E04               	movwf	(___awmod@divisor+1)^0,c
  3859  00F0F6  0E0A               	movlw	10
  3860  00F0F8  6E03               	movwf	___awmod@divisor^0,c
  3861  00F0FA  5030               	movf	scale@scl^0,w,c
  3862  00F0FC  6E01               	movwf	___awmod@dividend^0,c
  3863  00F0FE  6A02               	clrf	(___awmod@dividend+1)^0,c
  3864  00F100  BE01               	btfsc	___awmod@dividend^0,7,c
  3865  00F102  0602               	decf	(___awmod@dividend+1)^0,f,c
  3866  00F104  ECA9  F06C         	call	___awmod	;wreg free
  3867  00F108  5001               	movf	?___awmod^0,w,c
  3868  00F10A  0D04               	mullw	4
  3869  00F10C  0E81               	movlw	low __npowers_
  3870  00F10E  24F3               	addwf	243,w,c
  3871  00F110  6EF6               	movwf	tblptrl,c
  3872  00F112  0EFE               	movlw	high __npowers_
  3873  00F114  20F4               	addwfc	244,w,c
  3874  00F116  6EF7               	movwf	tblptrh,c
  3875  00F118                     	if	0	;There are less than 3 active tblptr bytes
  3876  00F118                     	endif
  3877  00F118  0009               	tblrd		*+
  3878  00F11A  CFF5 F013          	movff	tablat,___flmul@a
  3879  00F11E  0009               	tblrd		*+
  3880  00F120  CFF5 F014          	movff	tablat,___flmul@a+1
  3881  00F124  0009               	tblrd		*+
  3882  00F126  CFF5 F015          	movff	tablat,___flmul@a+2
  3883  00F12A  000A               	tblrd		*-
  3884  00F12C  CFF5 F016          	movff	tablat,___flmul@a+3
  3885  00F130  EC7C  F076         	call	___flmul	;wreg free
  3886  00F134  C00F  F028         	movff	?___flmul,?_scale
  3887  00F138  C010  F029         	movff	?___flmul+1,?_scale+1
  3888  00F13C  C011  F02A         	movff	?___flmul+2,?_scale+2
  3889  00F140  C012  F02B         	movff	?___flmul+3,?_scale+3
  3890  00F144  0012               	return	
  3891  00F146                     l3777:
  3892                           
  3893                           ;doprnt.c: 440: else if(scl > 10)
  3894  00F146  5030               	movf	scale@scl^0,w,c
  3895  00F148  0A80               	xorlw	128
  3896  00F14A  0F75               	addlw	-139
  3897  00F14C  A0D8               	btfss	status,0,c
  3898  00F14E  D04B               	goto	l3783
  3899                           
  3900                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3901  00F150  0E00               	movlw	0
  3902  00F152  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3903  00F154  0E0A               	movlw	10
  3904  00F156  6E09               	movwf	___awdiv@divisor^0,c
  3905  00F158  5030               	movf	scale@scl^0,w,c
  3906  00F15A  6E07               	movwf	___awdiv@dividend^0,c
  3907  00F15C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3908  00F15E  BE07               	btfsc	___awdiv@dividend^0,7,c
  3909  00F160  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3910  00F162  EC5C  F06D         	call	___awdiv	;wreg free
  3911  00F166  0E09               	movlw	9
  3912  00F168  2607               	addwf	?___awdiv^0,f,c
  3913  00F16A  5007               	movf	?___awdiv^0,w,c
  3914  00F16C  0D04               	mullw	4
  3915  00F16E  0E81               	movlw	low __npowers_
  3916  00F170  24F3               	addwf	243,w,c
  3917  00F172  6EF6               	movwf	tblptrl,c
  3918  00F174  0EFE               	movlw	high __npowers_
  3919  00F176  20F4               	addwfc	244,w,c
  3920  00F178  6EF7               	movwf	tblptrh,c
  3921  00F17A                     	if	0	;There are less than 3 active tblptr bytes
  3922  00F17A                     	endif
  3923  00F17A  0009               	tblrd		*+
  3924  00F17C  CFF5 F00F          	movff	tablat,___flmul@b
  3925  00F180  0009               	tblrd		*+
  3926  00F182  CFF5 F010          	movff	tablat,___flmul@b+1
  3927  00F186  0009               	tblrd		*+
  3928  00F188  CFF5 F011          	movff	tablat,___flmul@b+2
  3929  00F18C  000A               	tblrd		*-
  3930  00F18E  CFF5 F012          	movff	tablat,___flmul@b+3
  3931  00F192  0E00               	movlw	0
  3932  00F194  6E04               	movwf	(___awmod@divisor+1)^0,c
  3933  00F196  0E0A               	movlw	10
  3934  00F198  6E03               	movwf	___awmod@divisor^0,c
  3935  00F19A  5030               	movf	scale@scl^0,w,c
  3936  00F19C  6E01               	movwf	___awmod@dividend^0,c
  3937  00F19E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3938  00F1A0  BE01               	btfsc	___awmod@dividend^0,7,c
  3939  00F1A2  0602               	decf	(___awmod@dividend+1)^0,f,c
  3940  00F1A4  ECA9  F06C         	call	___awmod	;wreg free
  3941  00F1A8  5001               	movf	?___awmod^0,w,c
  3942  00F1AA  0D04               	mullw	4
  3943  00F1AC  0E81               	movlw	low __npowers_
  3944  00F1AE  24F3               	addwf	243,w,c
  3945  00F1B0  6EF6               	movwf	tblptrl,c
  3946  00F1B2  0EFE               	movlw	high __npowers_
  3947  00F1B4  20F4               	addwfc	244,w,c
  3948  00F1B6  6EF7               	movwf	tblptrh,c
  3949  00F1B8                     	if	0	;There are less than 3 active tblptr bytes
  3950  00F1B8                     	endif
  3951  00F1B8  0009               	tblrd		*+
  3952  00F1BA  CFF5 F013          	movff	tablat,___flmul@a
  3953  00F1BE  0009               	tblrd		*+
  3954  00F1C0  CFF5 F014          	movff	tablat,___flmul@a+1
  3955  00F1C4  0009               	tblrd		*+
  3956  00F1C6  CFF5 F015          	movff	tablat,___flmul@a+2
  3957  00F1CA  000A               	tblrd		*-
  3958  00F1CC  CFF5 F016          	movff	tablat,___flmul@a+3
  3959  00F1D0  EC7C  F076         	call	___flmul	;wreg free
  3960  00F1D4  C00F  F028         	movff	?___flmul,?_scale
  3961  00F1D8  C010  F029         	movff	?___flmul+1,?_scale+1
  3962  00F1DC  C011  F02A         	movff	?___flmul+2,?_scale+2
  3963  00F1E0  C012  F02B         	movff	?___flmul+3,?_scale+3
  3964  00F1E4  0012               	return	
  3965  00F1E6                     l3783:
  3966                           
  3967                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3968  00F1E6  5030               	movf	scale@scl^0,w,c
  3969  00F1E8  0D04               	mullw	4
  3970  00F1EA  0E81               	movlw	low __npowers_
  3971  00F1EC  24F3               	addwf	243,w,c
  3972  00F1EE  6EF6               	movwf	tblptrl,c
  3973  00F1F0  0EFE               	movlw	high __npowers_
  3974  00F1F2  20F4               	addwfc	244,w,c
  3975  00F1F4  6EF7               	movwf	tblptrh,c
  3976  00F1F6                     	if	0	;There are less than 3 active tblptr bytes
  3977  00F1F6                     	endif
  3978  00F1F6  0009               	tblrd		*+
  3979  00F1F8  CFF5 F028          	movff	tablat,?_scale
  3980  00F1FC  0009               	tblrd		*+
  3981  00F1FE  CFF5 F029          	movff	tablat,?_scale+1
  3982  00F202  0009               	tblrd		*+
  3983  00F204  CFF5 F02A          	movff	tablat,?_scale+2
  3984  00F208  000A               	tblrd		*-
  3985  00F20A  CFF5 F02B          	movff	tablat,?_scale+3
  3986  00F20E  0012               	return	
  3987  00F210                     l3787:
  3988                           
  3989                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3990  00F210  5030               	movf	scale@scl^0,w,c
  3991  00F212  0A80               	xorlw	128
  3992  00F214  0F12               	addlw	-238
  3993  00F216  A0D8               	btfss	status,0,c
  3994  00F218  D088               	goto	l3795
  3995                           
  3996                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3997  00F21A  0E00               	movlw	0
  3998  00F21C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3999  00F21E  0E0A               	movlw	10
  4000  00F220  6E09               	movwf	___awdiv@divisor^0,c
  4001  00F222  0E00               	movlw	0
  4002  00F224  6E04               	movwf	(___awmod@divisor+1)^0,c
  4003  00F226  0E64               	movlw	100
  4004  00F228  6E03               	movwf	___awmod@divisor^0,c
  4005  00F22A  5030               	movf	scale@scl^0,w,c
  4006  00F22C  6E01               	movwf	___awmod@dividend^0,c
  4007  00F22E  6A02               	clrf	(___awmod@dividend+1)^0,c
  4008  00F230  BE01               	btfsc	___awmod@dividend^0,7,c
  4009  00F232  0602               	decf	(___awmod@dividend+1)^0,f,c
  4010  00F234  ECA9  F06C         	call	___awmod	;wreg free
  4011  00F238  C001  F007         	movff	?___awmod,___awdiv@dividend
  4012  00F23C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  4013  00F240  EC5C  F06D         	call	___awdiv	;wreg free
  4014  00F244  0E09               	movlw	9
  4015  00F246  2607               	addwf	?___awdiv^0,f,c
  4016  00F248  5007               	movf	?___awdiv^0,w,c
  4017  00F24A  0D04               	mullw	4
  4018  00F24C  0E4D               	movlw	low __powers_
  4019  00F24E  24F3               	addwf	243,w,c
  4020  00F250  6EF6               	movwf	tblptrl,c
  4021  00F252  0EFE               	movlw	high __powers_
  4022  00F254  20F4               	addwfc	244,w,c
  4023  00F256  6EF7               	movwf	tblptrh,c
  4024  00F258                     	if	0	;There are less than 3 active tblptr bytes
  4025  00F258                     	endif
  4026  00F258  0009               	tblrd		*+
  4027  00F25A  CFF5 F013          	movff	tablat,___flmul@a
  4028  00F25E  0009               	tblrd		*+
  4029  00F260  CFF5 F014          	movff	tablat,___flmul@a+1
  4030  00F264  0009               	tblrd		*+
  4031  00F266  CFF5 F015          	movff	tablat,___flmul@a+2
  4032  00F26A  000A               	tblrd		*-
  4033  00F26C  CFF5 F016          	movff	tablat,___flmul@a+3
  4034  00F270  0E00               	movlw	0
  4035  00F272  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4036  00F274  0E64               	movlw	100
  4037  00F276  6E09               	movwf	___awdiv@divisor^0,c
  4038  00F278  5030               	movf	scale@scl^0,w,c
  4039  00F27A  6E07               	movwf	___awdiv@dividend^0,c
  4040  00F27C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4041  00F27E  BE07               	btfsc	___awdiv@dividend^0,7,c
  4042  00F280  0608               	decf	(___awdiv@dividend+1)^0,f,c
  4043  00F282  EC5C  F06D         	call	___awdiv	;wreg free
  4044  00F286  0E12               	movlw	18
  4045  00F288  2607               	addwf	?___awdiv^0,f,c
  4046  00F28A  5007               	movf	?___awdiv^0,w,c
  4047  00F28C  0D04               	mullw	4
  4048  00F28E  0E4D               	movlw	low __powers_
  4049  00F290  24F3               	addwf	243,w,c
  4050  00F292  6EF6               	movwf	tblptrl,c
  4051  00F294  0EFE               	movlw	high __powers_
  4052  00F296  20F4               	addwfc	244,w,c
  4053  00F298  6EF7               	movwf	tblptrh,c
  4054  00F29A                     	if	0	;There are less than 3 active tblptr bytes
  4055  00F29A                     	endif
  4056  00F29A  0009               	tblrd		*+
  4057  00F29C  CFF5 F00F          	movff	tablat,___flmul@b
  4058  00F2A0  0009               	tblrd		*+
  4059  00F2A2  CFF5 F010          	movff	tablat,___flmul@b+1
  4060  00F2A6  0009               	tblrd		*+
  4061  00F2A8  CFF5 F011          	movff	tablat,___flmul@b+2
  4062  00F2AC  000A               	tblrd		*-
  4063  00F2AE  CFF5 F012          	movff	tablat,___flmul@b+3
  4064  00F2B2  EC7C  F076         	call	___flmul	;wreg free
  4065  00F2B6  C00F  F02C         	movff	?___flmul,_scale$2775
  4066  00F2BA  C010  F02D         	movff	?___flmul+1,_scale$2775+1
  4067  00F2BE  C011  F02E         	movff	?___flmul+2,_scale$2775+2
  4068  00F2C2  C012  F02F         	movff	?___flmul+3,_scale$2775+3
  4069                           
  4070                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4071  00F2C6  C02C  F00F         	movff	_scale$2775,___flmul@b
  4072  00F2CA  C02D  F010         	movff	_scale$2775+1,___flmul@b+1
  4073  00F2CE  C02E  F011         	movff	_scale$2775+2,___flmul@b+2
  4074  00F2D2  C02F  F012         	movff	_scale$2775+3,___flmul@b+3
  4075  00F2D6  0E00               	movlw	0
  4076  00F2D8  6E04               	movwf	(___awmod@divisor+1)^0,c
  4077  00F2DA  0E0A               	movlw	10
  4078  00F2DC  6E03               	movwf	___awmod@divisor^0,c
  4079  00F2DE  5030               	movf	scale@scl^0,w,c
  4080  00F2E0  6E01               	movwf	___awmod@dividend^0,c
  4081  00F2E2  6A02               	clrf	(___awmod@dividend+1)^0,c
  4082  00F2E4  BE01               	btfsc	___awmod@dividend^0,7,c
  4083  00F2E6  0602               	decf	(___awmod@dividend+1)^0,f,c
  4084  00F2E8  ECA9  F06C         	call	___awmod	;wreg free
  4085  00F2EC  5001               	movf	?___awmod^0,w,c
  4086  00F2EE  0D04               	mullw	4
  4087  00F2F0  0E4D               	movlw	low __powers_
  4088  00F2F2  24F3               	addwf	243,w,c
  4089  00F2F4  6EF6               	movwf	tblptrl,c
  4090  00F2F6  0EFE               	movlw	high __powers_
  4091  00F2F8  20F4               	addwfc	244,w,c
  4092  00F2FA  6EF7               	movwf	tblptrh,c
  4093  00F2FC                     	if	0	;There are less than 3 active tblptr bytes
  4094  00F2FC                     	endif
  4095  00F2FC  0009               	tblrd		*+
  4096  00F2FE  CFF5 F013          	movff	tablat,___flmul@a
  4097  00F302  0009               	tblrd		*+
  4098  00F304  CFF5 F014          	movff	tablat,___flmul@a+1
  4099  00F308  0009               	tblrd		*+
  4100  00F30A  CFF5 F015          	movff	tablat,___flmul@a+2
  4101  00F30E  000A               	tblrd		*-
  4102  00F310  CFF5 F016          	movff	tablat,___flmul@a+3
  4103  00F314  EC7C  F076         	call	___flmul	;wreg free
  4104  00F318  C00F  F028         	movff	?___flmul,?_scale
  4105  00F31C  C010  F029         	movff	?___flmul+1,?_scale+1
  4106  00F320  C011  F02A         	movff	?___flmul+2,?_scale+2
  4107  00F324  C012  F02B         	movff	?___flmul+3,?_scale+3
  4108  00F328  0012               	return	
  4109  00F32A                     l3795:
  4110                           
  4111                           ;doprnt.c: 446: else if(scl > 10)
  4112  00F32A  5030               	movf	scale@scl^0,w,c
  4113  00F32C  0A80               	xorlw	128
  4114  00F32E  0F75               	addlw	-139
  4115  00F330  A0D8               	btfss	status,0,c
  4116  00F332  D04B               	goto	l3801
  4117                           
  4118                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  4119  00F334  0E00               	movlw	0
  4120  00F336  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4121  00F338  0E0A               	movlw	10
  4122  00F33A  6E09               	movwf	___awdiv@divisor^0,c
  4123  00F33C  5030               	movf	scale@scl^0,w,c
  4124  00F33E  6E07               	movwf	___awdiv@dividend^0,c
  4125  00F340  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4126  00F342  BE07               	btfsc	___awdiv@dividend^0,7,c
  4127  00F344  0608               	decf	(___awdiv@dividend+1)^0,f,c
  4128  00F346  EC5C  F06D         	call	___awdiv	;wreg free
  4129  00F34A  0E09               	movlw	9
  4130  00F34C  2607               	addwf	?___awdiv^0,f,c
  4131  00F34E  5007               	movf	?___awdiv^0,w,c
  4132  00F350  0D04               	mullw	4
  4133  00F352  0E4D               	movlw	low __powers_
  4134  00F354  24F3               	addwf	243,w,c
  4135  00F356  6EF6               	movwf	tblptrl,c
  4136  00F358  0EFE               	movlw	high __powers_
  4137  00F35A  20F4               	addwfc	244,w,c
  4138  00F35C  6EF7               	movwf	tblptrh,c
  4139  00F35E                     	if	0	;There are less than 3 active tblptr bytes
  4140  00F35E                     	endif
  4141  00F35E  0009               	tblrd		*+
  4142  00F360  CFF5 F00F          	movff	tablat,___flmul@b
  4143  00F364  0009               	tblrd		*+
  4144  00F366  CFF5 F010          	movff	tablat,___flmul@b+1
  4145  00F36A  0009               	tblrd		*+
  4146  00F36C  CFF5 F011          	movff	tablat,___flmul@b+2
  4147  00F370  000A               	tblrd		*-
  4148  00F372  CFF5 F012          	movff	tablat,___flmul@b+3
  4149  00F376  0E00               	movlw	0
  4150  00F378  6E04               	movwf	(___awmod@divisor+1)^0,c
  4151  00F37A  0E0A               	movlw	10
  4152  00F37C  6E03               	movwf	___awmod@divisor^0,c
  4153  00F37E  5030               	movf	scale@scl^0,w,c
  4154  00F380  6E01               	movwf	___awmod@dividend^0,c
  4155  00F382  6A02               	clrf	(___awmod@dividend+1)^0,c
  4156  00F384  BE01               	btfsc	___awmod@dividend^0,7,c
  4157  00F386  0602               	decf	(___awmod@dividend+1)^0,f,c
  4158  00F388  ECA9  F06C         	call	___awmod	;wreg free
  4159  00F38C  5001               	movf	?___awmod^0,w,c
  4160  00F38E  0D04               	mullw	4
  4161  00F390  0E4D               	movlw	low __powers_
  4162  00F392  24F3               	addwf	243,w,c
  4163  00F394  6EF6               	movwf	tblptrl,c
  4164  00F396  0EFE               	movlw	high __powers_
  4165  00F398  20F4               	addwfc	244,w,c
  4166  00F39A  6EF7               	movwf	tblptrh,c
  4167  00F39C                     	if	0	;There are less than 3 active tblptr bytes
  4168  00F39C                     	endif
  4169  00F39C  0009               	tblrd		*+
  4170  00F39E  CFF5 F013          	movff	tablat,___flmul@a
  4171  00F3A2  0009               	tblrd		*+
  4172  00F3A4  CFF5 F014          	movff	tablat,___flmul@a+1
  4173  00F3A8  0009               	tblrd		*+
  4174  00F3AA  CFF5 F015          	movff	tablat,___flmul@a+2
  4175  00F3AE  000A               	tblrd		*-
  4176  00F3B0  CFF5 F016          	movff	tablat,___flmul@a+3
  4177  00F3B4  EC7C  F076         	call	___flmul	;wreg free
  4178  00F3B8  C00F  F028         	movff	?___flmul,?_scale
  4179  00F3BC  C010  F029         	movff	?___flmul+1,?_scale+1
  4180  00F3C0  C011  F02A         	movff	?___flmul+2,?_scale+2
  4181  00F3C4  C012  F02B         	movff	?___flmul+3,?_scale+3
  4182  00F3C8  0012               	return	
  4183  00F3CA                     l3801:
  4184                           
  4185                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  4186  00F3CA  5030               	movf	scale@scl^0,w,c
  4187  00F3CC  0D04               	mullw	4
  4188  00F3CE  0E4D               	movlw	low __powers_
  4189  00F3D0  24F3               	addwf	243,w,c
  4190  00F3D2  6EF6               	movwf	tblptrl,c
  4191  00F3D4  0EFE               	movlw	high __powers_
  4192  00F3D6  20F4               	addwfc	244,w,c
  4193  00F3D8  6EF7               	movwf	tblptrh,c
  4194  00F3DA                     	if	0	;There are less than 3 active tblptr bytes
  4195  00F3DA                     	endif
  4196  00F3DA  0009               	tblrd		*+
  4197  00F3DC  CFF5 F028          	movff	tablat,?_scale
  4198  00F3E0  0009               	tblrd		*+
  4199  00F3E2  CFF5 F029          	movff	tablat,?_scale+1
  4200  00F3E6  0009               	tblrd		*+
  4201  00F3E8  CFF5 F02A          	movff	tablat,?_scale+2
  4202  00F3EC  000A               	tblrd		*-
  4203  00F3EE  CFF5 F02B          	movff	tablat,?_scale+3
  4204  00F3F2  0012               	return		;funcret
  4205  00F3F4                     __end_of_scale:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function ___awmod *****************
  4209 ;; Defined at:
  4210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  dividend        2    0[COMRAM] int 
  4213 ;;  divisor         2    2[COMRAM] int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  sign            1    5[COMRAM] unsigned char 
  4216 ;;  counter         1    4[COMRAM] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  2    0[COMRAM] int 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        6 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_scale
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text9
  4240  00D952                     __ptext9:
  4241                           	callstack 0
  4242  00D952                     ___awmod:
  4243                           	callstack 27
  4244                           
  4245                           ;incstack = 0
  4246  00D952  0E00               	movlw	0
  4247  00D954  6E06               	movwf	___awmod@sign^0,c
  4248  00D956  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  4249  00D958  D006               	goto	l3659
  4250  00D95A  6C01               	negf	___awmod@dividend^0,c
  4251  00D95C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4252  00D95E  B0D8               	btfsc	status,0,c
  4253  00D960  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4254  00D962  0E01               	movlw	1
  4255  00D964  6E06               	movwf	___awmod@sign^0,c
  4256  00D966                     l3659:
  4257  00D966  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4258  00D968  D004               	goto	l3663
  4259  00D96A  6C03               	negf	___awmod@divisor^0,c
  4260  00D96C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4261  00D96E  B0D8               	btfsc	status,0,c
  4262  00D970  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4263  00D972                     l3663:
  4264  00D972  5003               	movf	___awmod@divisor^0,w,c
  4265  00D974  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4266  00D976  B4D8               	btfsc	status,2,c
  4267  00D978  D018               	goto	l3679
  4268  00D97A  0E01               	movlw	1
  4269  00D97C  6E05               	movwf	___awmod@counter^0,c
  4270  00D97E  D004               	goto	l3669
  4271  00D980                     l3667:
  4272  00D980  90D8               	bcf	status,0,c
  4273  00D982  3603               	rlcf	___awmod@divisor^0,f,c
  4274  00D984  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4275  00D986  2A05               	incf	___awmod@counter^0,f,c
  4276  00D988                     l3669:
  4277  00D988  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4278  00D98A  D7FA               	goto	l3667
  4279  00D98C                     u2820:
  4280  00D98C  5003               	movf	___awmod@divisor^0,w,c
  4281  00D98E  5C01               	subwf	___awmod@dividend^0,w,c
  4282  00D990  5004               	movf	(___awmod@divisor+1)^0,w,c
  4283  00D992  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4284  00D994  A0D8               	btfss	status,0,c
  4285  00D996  D004               	goto	l3675
  4286  00D998  5003               	movf	___awmod@divisor^0,w,c
  4287  00D99A  5E01               	subwf	___awmod@dividend^0,f,c
  4288  00D99C  5004               	movf	(___awmod@divisor+1)^0,w,c
  4289  00D99E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4290  00D9A0                     l3675:
  4291  00D9A0  90D8               	bcf	status,0,c
  4292  00D9A2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4293  00D9A4  3203               	rrcf	___awmod@divisor^0,f,c
  4294  00D9A6  2E05               	decfsz	___awmod@counter^0,f,c
  4295  00D9A8  D7F1               	goto	u2820
  4296  00D9AA                     l3679:
  4297  00D9AA  5006               	movf	___awmod@sign^0,w,c
  4298  00D9AC  B4D8               	btfsc	status,2,c
  4299  00D9AE  D004               	goto	l3683
  4300  00D9B0  6C01               	negf	___awmod@dividend^0,c
  4301  00D9B2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4302  00D9B4  B0D8               	btfsc	status,0,c
  4303  00D9B6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4304  00D9B8                     l3683:
  4305  00D9B8  C001  F001         	movff	___awmod@dividend,?___awmod
  4306  00D9BC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4307  00D9C0  0012               	return		;funcret
  4308  00D9C2                     __end_of___awmod:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function ___awdiv *****************
  4312 ;; Defined at:
  4313 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  dividend        2    6[COMRAM] int 
  4316 ;;  divisor         2    8[COMRAM] int 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  quotient        2   12[COMRAM] int 
  4319 ;;  sign            1   11[COMRAM] unsigned char 
  4320 ;;  counter         1   10[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  2    6[COMRAM] int 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;Total ram usage:        8 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_scale
  4340 ;;		_printf
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text10
  4345  00DAB8                     __ptext10:
  4346                           	callstack 0
  4347  00DAB8                     ___awdiv:
  4348                           	callstack 27
  4349                           
  4350                           ;incstack = 0
  4351  00DAB8  0E00               	movlw	0
  4352  00DABA  6E0C               	movwf	___awdiv@sign^0,c
  4353  00DABC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4354  00DABE  D006               	goto	l3615
  4355  00DAC0  6C09               	negf	___awdiv@divisor^0,c
  4356  00DAC2  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4357  00DAC4  B0D8               	btfsc	status,0,c
  4358  00DAC6  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4359  00DAC8  0E01               	movlw	1
  4360  00DACA  6E0C               	movwf	___awdiv@sign^0,c
  4361  00DACC                     l3615:
  4362  00DACC  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  4363  00DACE  D006               	goto	l3621
  4364  00DAD0  6C07               	negf	___awdiv@dividend^0,c
  4365  00DAD2  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4366  00DAD4  B0D8               	btfsc	status,0,c
  4367  00DAD6  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4368  00DAD8  0E01               	movlw	1
  4369  00DADA  1A0C               	xorwf	___awdiv@sign^0,f,c
  4370  00DADC                     l3621:
  4371  00DADC  0E00               	movlw	0
  4372  00DADE  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4373  00DAE0  0E00               	movlw	0
  4374  00DAE2  6E0D               	movwf	___awdiv@quotient^0,c
  4375  00DAE4  5009               	movf	___awdiv@divisor^0,w,c
  4376  00DAE6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4377  00DAE8  B4D8               	btfsc	status,2,c
  4378  00DAEA  D01C               	goto	l3643
  4379  00DAEC  0E01               	movlw	1
  4380  00DAEE  6E0B               	movwf	___awdiv@counter^0,c
  4381  00DAF0  D004               	goto	l3629
  4382  00DAF2                     l3627:
  4383  00DAF2  90D8               	bcf	status,0,c
  4384  00DAF4  3609               	rlcf	___awdiv@divisor^0,f,c
  4385  00DAF6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4386  00DAF8  2A0B               	incf	___awdiv@counter^0,f,c
  4387  00DAFA                     l3629:
  4388  00DAFA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4389  00DAFC  D7FA               	goto	l3627
  4390  00DAFE                     u2760:
  4391  00DAFE  90D8               	bcf	status,0,c
  4392  00DB00  360D               	rlcf	___awdiv@quotient^0,f,c
  4393  00DB02  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4394  00DB04  5009               	movf	___awdiv@divisor^0,w,c
  4395  00DB06  5C07               	subwf	___awdiv@dividend^0,w,c
  4396  00DB08  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4397  00DB0A  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4398  00DB0C  A0D8               	btfss	status,0,c
  4399  00DB0E  D005               	goto	l3639
  4400  00DB10  5009               	movf	___awdiv@divisor^0,w,c
  4401  00DB12  5E07               	subwf	___awdiv@dividend^0,f,c
  4402  00DB14  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4403  00DB16  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4404  00DB18  800D               	bsf	___awdiv@quotient^0,0,c
  4405  00DB1A                     l3639:
  4406  00DB1A  90D8               	bcf	status,0,c
  4407  00DB1C  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4408  00DB1E  3209               	rrcf	___awdiv@divisor^0,f,c
  4409  00DB20  2E0B               	decfsz	___awdiv@counter^0,f,c
  4410  00DB22  D7ED               	goto	u2760
  4411  00DB24                     l3643:
  4412  00DB24  500C               	movf	___awdiv@sign^0,w,c
  4413  00DB26  B4D8               	btfsc	status,2,c
  4414  00DB28  D004               	goto	l3647
  4415  00DB2A  6C0D               	negf	___awdiv@quotient^0,c
  4416  00DB2C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4417  00DB2E  B0D8               	btfsc	status,0,c
  4418  00DB30  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4419  00DB32                     l3647:
  4420  00DB32  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4421  00DB36  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4422  00DB3A  0012               	return		;funcret
  4423  00DB3C                     __end_of___awdiv:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _putch *****************
  4427 ;; Defined at:
  4428 ;;		line 81 in file "usart2.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  data            1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  data            1    0[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_printf
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text11
  4456  00D1FA                     __ptext11:
  4457                           	callstack 0
  4458  00D1FA                     _putch:
  4459                           	callstack 28
  4460                           
  4461                           ;incstack = 0
  4462                           ;putch@data stored from wreg
  4463  00D1FA  6E01               	movwf	putch@data^0,c
  4464  00D1FC                     
  4465                           ;usart2.c: 82: while(!TRMT2){
  4466  00D1FC  A272               	btfss	3954,1,c	;volatile
  4467  00D1FE  D7FE               	goto	l3735
  4468                           
  4469                           ;usart2.c: 83: };usart2.c: 84: TXREG2 = data;
  4470  00D200  C001  FF73         	movff	putch@data,3955	;volatile
  4471  00D204                     l368:
  4472  00D204  B272               	btfsc	3954,1,c	;volatile
  4473  00D206  0012               	return	
  4474  00D208  D7FD               	goto	l368
  4475  00D20A                     __end_of_putch:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _fround *****************
  4479 ;; Defined at:
  4480 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  prec            1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  prec            1   53[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  4   39[COMRAM] unsigned char 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:       15 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    1
  4501 ;; This function calls:
  4502 ;;		___flmul
  4503 ;;		___lbdiv
  4504 ;;		___lbmod
  4505 ;; This function is called by:
  4506 ;;		_printf
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text12
  4511  00E4FA                     __ptext12:
  4512                           	callstack 0
  4513  00E4FA                     _fround:
  4514                           	callstack 27
  4515                           
  4516                           ;incstack = 0
  4517                           ;fround@prec stored from wreg
  4518  00E4FA  6E36               	movwf	fround@prec^0,c
  4519                           
  4520                           ;doprnt.c: 421: if(prec>=110)
  4521  00E4FC  0E6D               	movlw	109
  4522  00E4FE  6436               	cpfsgt	fround@prec^0,c
  4523  00E500  D0A0               	goto	l3757
  4524                           
  4525                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4526  00E502  0E00               	movlw	0
  4527  00E504  6E13               	movwf	___flmul@a^0,c
  4528  00E506  0E00               	movlw	0
  4529  00E508  6E14               	movwf	(___flmul@a+1)^0,c
  4530  00E50A  0E00               	movlw	0
  4531  00E50C  6E15               	movwf	(___flmul@a+2)^0,c
  4532  00E50E  0E3F               	movlw	63
  4533  00E510  6E16               	movwf	(___flmul@a+3)^0,c
  4534  00E512  0E64               	movlw	100
  4535  00E514  6E05               	movwf	___lbdiv@divisor^0,c
  4536  00E516  5036               	movf	fround@prec^0,w,c
  4537  00E518  EC84  F06A         	call	___lbdiv
  4538  00E51C  6E2C               	movwf	??_fround^0,c
  4539  00E51E  6A2D               	clrf	(??_fround+1)^0,c
  4540  00E520  90D8               	bcf	status,0,c
  4541  00E522  362C               	rlcf	??_fround^0,f,c
  4542  00E524  362D               	rlcf	(??_fround+1)^0,f,c
  4543  00E526  90D8               	bcf	status,0,c
  4544  00E528  362C               	rlcf	??_fround^0,f,c
  4545  00E52A  362D               	rlcf	(??_fround+1)^0,f,c
  4546  00E52C  0E48               	movlw	72
  4547  00E52E  262C               	addwf	??_fround^0,f,c
  4548  00E530  0E00               	movlw	0
  4549  00E532  222D               	addwfc	(??_fround+1)^0,f,c
  4550  00E534  0E81               	movlw	low __npowers_
  4551  00E536  242C               	addwf	??_fround^0,w,c
  4552  00E538  6EF6               	movwf	tblptrl,c
  4553  00E53A  0EFE               	movlw	high __npowers_
  4554  00E53C  202D               	addwfc	(??_fround+1)^0,w,c
  4555  00E53E  6EF7               	movwf	tblptrh,c
  4556  00E540                     	if	0	;There are less than 3 active tblptr bytes
  4557  00E540                     	endif
  4558  00E540  0009               	tblrd		*+
  4559  00E542  CFF5 F00F          	movff	tablat,___flmul@b
  4560  00E546  0009               	tblrd		*+
  4561  00E548  CFF5 F010          	movff	tablat,___flmul@b+1
  4562  00E54C  0009               	tblrd		*+
  4563  00E54E  CFF5 F011          	movff	tablat,___flmul@b+2
  4564  00E552  000A               	tblrd		*-
  4565  00E554  CFF5 F012          	movff	tablat,___flmul@b+3
  4566  00E558  EC7C  F076         	call	___flmul	;wreg free
  4567  00E55C  C00F  F032         	movff	?___flmul,_fround$2773
  4568  00E560  C010  F033         	movff	?___flmul+1,_fround$2773+1
  4569  00E564  C011  F034         	movff	?___flmul+2,_fround$2773+2
  4570  00E568  C012  F035         	movff	?___flmul+3,_fround$2773+3
  4571                           
  4572                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4573  00E56C  0E0A               	movlw	10
  4574  00E56E  6E05               	movwf	___lbdiv@divisor^0,c
  4575  00E570  0E64               	movlw	100
  4576  00E572  6E01               	movwf	___lbmod@divisor^0,c
  4577  00E574  5036               	movf	fround@prec^0,w,c
  4578  00E576  ECDE  F069         	call	___lbmod
  4579  00E57A  EC84  F06A         	call	___lbdiv
  4580  00E57E  6E2C               	movwf	??_fround^0,c
  4581  00E580  6A2D               	clrf	(??_fround+1)^0,c
  4582  00E582  90D8               	bcf	status,0,c
  4583  00E584  362C               	rlcf	??_fround^0,f,c
  4584  00E586  362D               	rlcf	(??_fround+1)^0,f,c
  4585  00E588  90D8               	bcf	status,0,c
  4586  00E58A  362C               	rlcf	??_fround^0,f,c
  4587  00E58C  362D               	rlcf	(??_fround+1)^0,f,c
  4588  00E58E  0E24               	movlw	36
  4589  00E590  262C               	addwf	??_fround^0,f,c
  4590  00E592  0E00               	movlw	0
  4591  00E594  222D               	addwfc	(??_fround+1)^0,f,c
  4592  00E596  0E81               	movlw	low __npowers_
  4593  00E598  242C               	addwf	??_fround^0,w,c
  4594  00E59A  6EF6               	movwf	tblptrl,c
  4595  00E59C  0EFE               	movlw	high __npowers_
  4596  00E59E  202D               	addwfc	(??_fround+1)^0,w,c
  4597  00E5A0  6EF7               	movwf	tblptrh,c
  4598  00E5A2                     	if	0	;There are less than 3 active tblptr bytes
  4599  00E5A2                     	endif
  4600  00E5A2  0009               	tblrd		*+
  4601  00E5A4  CFF5 F013          	movff	tablat,___flmul@a
  4602  00E5A8  0009               	tblrd		*+
  4603  00E5AA  CFF5 F014          	movff	tablat,___flmul@a+1
  4604  00E5AE  0009               	tblrd		*+
  4605  00E5B0  CFF5 F015          	movff	tablat,___flmul@a+2
  4606  00E5B4  000A               	tblrd		*-
  4607  00E5B6  CFF5 F016          	movff	tablat,___flmul@a+3
  4608  00E5BA  C032  F00F         	movff	_fround$2773,___flmul@b
  4609  00E5BE  C033  F010         	movff	_fround$2773+1,___flmul@b+1
  4610  00E5C2  C034  F011         	movff	_fround$2773+2,___flmul@b+2
  4611  00E5C6  C035  F012         	movff	_fround$2773+3,___flmul@b+3
  4612  00E5CA  EC7C  F076         	call	___flmul	;wreg free
  4613  00E5CE  C00F  F02E         	movff	?___flmul,_fround$2774
  4614  00E5D2  C010  F02F         	movff	?___flmul+1,_fround$2774+1
  4615  00E5D6  C011  F030         	movff	?___flmul+2,_fround$2774+2
  4616  00E5DA  C012  F031         	movff	?___flmul+3,_fround$2774+3
  4617                           
  4618                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4619  00E5DE  C02E  F00F         	movff	_fround$2774,___flmul@b
  4620  00E5E2  C02F  F010         	movff	_fround$2774+1,___flmul@b+1
  4621  00E5E6  C030  F011         	movff	_fround$2774+2,___flmul@b+2
  4622  00E5EA  C031  F012         	movff	_fround$2774+3,___flmul@b+3
  4623  00E5EE  0E0A               	movlw	10
  4624  00E5F0  6E01               	movwf	___lbmod@divisor^0,c
  4625  00E5F2  5036               	movf	fround@prec^0,w,c
  4626  00E5F4  ECDE  F069         	call	___lbmod
  4627  00E5F8  6E2C               	movwf	??_fround^0,c
  4628  00E5FA  6A2D               	clrf	(??_fround+1)^0,c
  4629  00E5FC  90D8               	bcf	status,0,c
  4630  00E5FE  362C               	rlcf	??_fround^0,f,c
  4631  00E600  362D               	rlcf	(??_fround+1)^0,f,c
  4632  00E602  90D8               	bcf	status,0,c
  4633  00E604  362C               	rlcf	??_fround^0,f,c
  4634  00E606  362D               	rlcf	(??_fround+1)^0,f,c
  4635  00E608  0E81               	movlw	low __npowers_
  4636  00E60A  242C               	addwf	??_fround^0,w,c
  4637  00E60C  6EF6               	movwf	tblptrl,c
  4638  00E60E  0EFE               	movlw	high __npowers_
  4639  00E610  202D               	addwfc	(??_fround+1)^0,w,c
  4640  00E612  6EF7               	movwf	tblptrh,c
  4641  00E614                     	if	0	;There are less than 3 active tblptr bytes
  4642  00E614                     	endif
  4643  00E614  0009               	tblrd		*+
  4644  00E616  CFF5 F013          	movff	tablat,___flmul@a
  4645  00E61A  0009               	tblrd		*+
  4646  00E61C  CFF5 F014          	movff	tablat,___flmul@a+1
  4647  00E620  0009               	tblrd		*+
  4648  00E622  CFF5 F015          	movff	tablat,___flmul@a+2
  4649  00E626  000A               	tblrd		*-
  4650  00E628  CFF5 F016          	movff	tablat,___flmul@a+3
  4651  00E62C  EC7C  F076         	call	___flmul	;wreg free
  4652  00E630  C00F  F028         	movff	?___flmul,?_fround
  4653  00E634  C010  F029         	movff	?___flmul+1,?_fround+1
  4654  00E638  C011  F02A         	movff	?___flmul+2,?_fround+2
  4655  00E63C  C012  F02B         	movff	?___flmul+3,?_fround+3
  4656  00E640  0012               	return	
  4657  00E642                     l3757:
  4658                           
  4659                           ;doprnt.c: 423: else if(prec > 10)
  4660  00E642  0E0A               	movlw	10
  4661  00E644  6436               	cpfsgt	fround@prec^0,c
  4662  00E646  D067               	goto	l3763
  4663                           
  4664                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4665  00E648  0E00               	movlw	0
  4666  00E64A  6E13               	movwf	___flmul@a^0,c
  4667  00E64C  0E00               	movlw	0
  4668  00E64E  6E14               	movwf	(___flmul@a+1)^0,c
  4669  00E650  0E00               	movlw	0
  4670  00E652  6E15               	movwf	(___flmul@a+2)^0,c
  4671  00E654  0E3F               	movlw	63
  4672  00E656  6E16               	movwf	(___flmul@a+3)^0,c
  4673  00E658  0E0A               	movlw	10
  4674  00E65A  6E05               	movwf	___lbdiv@divisor^0,c
  4675  00E65C  5036               	movf	fround@prec^0,w,c
  4676  00E65E  EC84  F06A         	call	___lbdiv
  4677  00E662  6E2C               	movwf	??_fround^0,c
  4678  00E664  6A2D               	clrf	(??_fround+1)^0,c
  4679  00E666  90D8               	bcf	status,0,c
  4680  00E668  362C               	rlcf	??_fround^0,f,c
  4681  00E66A  362D               	rlcf	(??_fround+1)^0,f,c
  4682  00E66C  90D8               	bcf	status,0,c
  4683  00E66E  362C               	rlcf	??_fround^0,f,c
  4684  00E670  362D               	rlcf	(??_fround+1)^0,f,c
  4685  00E672  0E24               	movlw	36
  4686  00E674  262C               	addwf	??_fround^0,f,c
  4687  00E676  0E00               	movlw	0
  4688  00E678  222D               	addwfc	(??_fround+1)^0,f,c
  4689  00E67A  0E81               	movlw	low __npowers_
  4690  00E67C  242C               	addwf	??_fround^0,w,c
  4691  00E67E  6EF6               	movwf	tblptrl,c
  4692  00E680  0EFE               	movlw	high __npowers_
  4693  00E682  202D               	addwfc	(??_fround+1)^0,w,c
  4694  00E684  6EF7               	movwf	tblptrh,c
  4695  00E686                     	if	0	;There are less than 3 active tblptr bytes
  4696  00E686                     	endif
  4697  00E686  0009               	tblrd		*+
  4698  00E688  CFF5 F00F          	movff	tablat,___flmul@b
  4699  00E68C  0009               	tblrd		*+
  4700  00E68E  CFF5 F010          	movff	tablat,___flmul@b+1
  4701  00E692  0009               	tblrd		*+
  4702  00E694  CFF5 F011          	movff	tablat,___flmul@b+2
  4703  00E698  000A               	tblrd		*-
  4704  00E69A  CFF5 F012          	movff	tablat,___flmul@b+3
  4705  00E69E  EC7C  F076         	call	___flmul	;wreg free
  4706  00E6A2  C00F  F032         	movff	?___flmul,_fround$2773
  4707  00E6A6  C010  F033         	movff	?___flmul+1,_fround$2773+1
  4708  00E6AA  C011  F034         	movff	?___flmul+2,_fround$2773+2
  4709  00E6AE  C012  F035         	movff	?___flmul+3,_fround$2773+3
  4710                           
  4711                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4712  00E6B2  C032  F00F         	movff	_fround$2773,___flmul@b
  4713  00E6B6  C033  F010         	movff	_fround$2773+1,___flmul@b+1
  4714  00E6BA  C034  F011         	movff	_fround$2773+2,___flmul@b+2
  4715  00E6BE  C035  F012         	movff	_fround$2773+3,___flmul@b+3
  4716  00E6C2  0E0A               	movlw	10
  4717  00E6C4  6E01               	movwf	___lbmod@divisor^0,c
  4718  00E6C6  5036               	movf	fround@prec^0,w,c
  4719  00E6C8  ECDE  F069         	call	___lbmod
  4720  00E6CC  6E2C               	movwf	??_fround^0,c
  4721  00E6CE  6A2D               	clrf	(??_fround+1)^0,c
  4722  00E6D0  90D8               	bcf	status,0,c
  4723  00E6D2  362C               	rlcf	??_fround^0,f,c
  4724  00E6D4  362D               	rlcf	(??_fround+1)^0,f,c
  4725  00E6D6  90D8               	bcf	status,0,c
  4726  00E6D8  362C               	rlcf	??_fround^0,f,c
  4727  00E6DA  362D               	rlcf	(??_fround+1)^0,f,c
  4728  00E6DC  0E81               	movlw	low __npowers_
  4729  00E6DE  242C               	addwf	??_fround^0,w,c
  4730  00E6E0  6EF6               	movwf	tblptrl,c
  4731  00E6E2  0EFE               	movlw	high __npowers_
  4732  00E6E4  202D               	addwfc	(??_fround+1)^0,w,c
  4733  00E6E6  6EF7               	movwf	tblptrh,c
  4734  00E6E8                     	if	0	;There are less than 3 active tblptr bytes
  4735  00E6E8                     	endif
  4736  00E6E8  0009               	tblrd		*+
  4737  00E6EA  CFF5 F013          	movff	tablat,___flmul@a
  4738  00E6EE  0009               	tblrd		*+
  4739  00E6F0  CFF5 F014          	movff	tablat,___flmul@a+1
  4740  00E6F4  0009               	tblrd		*+
  4741  00E6F6  CFF5 F015          	movff	tablat,___flmul@a+2
  4742  00E6FA  000A               	tblrd		*-
  4743  00E6FC  CFF5 F016          	movff	tablat,___flmul@a+3
  4744  00E700  EC7C  F076         	call	___flmul	;wreg free
  4745  00E704  C00F  F028         	movff	?___flmul,?_fround
  4746  00E708  C010  F029         	movff	?___flmul+1,?_fround+1
  4747  00E70C  C011  F02A         	movff	?___flmul+2,?_fround+2
  4748  00E710  C012  F02B         	movff	?___flmul+3,?_fround+3
  4749  00E714  0012               	return	
  4750  00E716                     l3763:
  4751                           
  4752                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4753  00E716  5036               	movf	fround@prec^0,w,c
  4754  00E718  0D04               	mullw	4
  4755  00E71A  0E81               	movlw	low __npowers_
  4756  00E71C  24F3               	addwf	243,w,c
  4757  00E71E  6EF6               	movwf	tblptrl,c
  4758  00E720  0EFE               	movlw	high __npowers_
  4759  00E722  20F4               	addwfc	244,w,c
  4760  00E724  6EF7               	movwf	tblptrh,c
  4761  00E726                     	if	0	;There are less than 3 active tblptr bytes
  4762  00E726                     	endif
  4763  00E726  0009               	tblrd		*+
  4764  00E728  CFF5 F00F          	movff	tablat,___flmul@b
  4765  00E72C  0009               	tblrd		*+
  4766  00E72E  CFF5 F010          	movff	tablat,___flmul@b+1
  4767  00E732  0009               	tblrd		*+
  4768  00E734  CFF5 F011          	movff	tablat,___flmul@b+2
  4769  00E738  000A               	tblrd		*-
  4770  00E73A  CFF5 F012          	movff	tablat,___flmul@b+3
  4771  00E73E  0E00               	movlw	0
  4772  00E740  6E13               	movwf	___flmul@a^0,c
  4773  00E742  0E00               	movlw	0
  4774  00E744  6E14               	movwf	(___flmul@a+1)^0,c
  4775  00E746  0E00               	movlw	0
  4776  00E748  6E15               	movwf	(___flmul@a+2)^0,c
  4777  00E74A  0E3F               	movlw	63
  4778  00E74C  6E16               	movwf	(___flmul@a+3)^0,c
  4779  00E74E  EC7C  F076         	call	___flmul	;wreg free
  4780  00E752  C00F  F028         	movff	?___flmul,?_fround
  4781  00E756  C010  F029         	movff	?___flmul+1,?_fround+1
  4782  00E75A  C011  F02A         	movff	?___flmul+2,?_fround+2
  4783  00E75E  C012  F02B         	movff	?___flmul+3,?_fround+3
  4784  00E762  0012               	return		;funcret
  4785  00E764                     __end_of_fround:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function ___lbmod *****************
  4789 ;; Defined at:
  4790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lbmod.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  dividend        1    wreg     unsigned char 
  4793 ;;  divisor         1    0[COMRAM] unsigned char 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  dividend        1    1[COMRAM] unsigned char 
  4796 ;;  rem             1    3[COMRAM] unsigned char 
  4797 ;;  counter         1    2[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:        4 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_fround
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text13
  4821  00D3BC                     __ptext13:
  4822                           	callstack 0
  4823  00D3BC                     ___lbmod:
  4824                           	callstack 27
  4825                           
  4826                           ;incstack = 0
  4827                           ;___lbmod@dividend stored from wreg
  4828  00D3BC  6E02               	movwf	___lbmod@dividend^0,c
  4829  00D3BE  0E08               	movlw	8
  4830  00D3C0  6E03               	movwf	___lbmod@counter^0,c
  4831  00D3C2  0E00               	movlw	0
  4832  00D3C4  6E04               	movwf	___lbmod@rem^0,c
  4833  00D3C6                     l3715:
  4834  00D3C6  90D8               	bcf	status,0,c
  4835  00D3C8  3402               	rlcf	___lbmod@dividend^0,w,c
  4836  00D3CA  3404               	rlcf	___lbmod@rem^0,w,c
  4837  00D3CC  6E04               	movwf	___lbmod@rem^0,c
  4838  00D3CE  90D8               	bcf	status,0,c
  4839  00D3D0  3602               	rlcf	___lbmod@dividend^0,f,c
  4840  00D3D2  5001               	movf	___lbmod@divisor^0,w,c
  4841  00D3D4  5C04               	subwf	___lbmod@rem^0,w,c
  4842  00D3D6  A0D8               	btfss	status,0,c
  4843  00D3D8  D002               	goto	l3723
  4844  00D3DA  5001               	movf	___lbmod@divisor^0,w,c
  4845  00D3DC  5E04               	subwf	___lbmod@rem^0,f,c
  4846  00D3DE                     l3723:
  4847  00D3DE  2E03               	decfsz	___lbmod@counter^0,f,c
  4848  00D3E0  D7F2               	goto	l3715
  4849  00D3E2  5004               	movf	___lbmod@rem^0,w,c
  4850  00D3E4  0012               	return		;funcret
  4851  00D3E6                     __end_of___lbmod:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function ___lbdiv *****************
  4855 ;; Defined at:
  4856 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lbdiv.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  dividend        1    wreg     unsigned char 
  4859 ;;  divisor         1    4[COMRAM] unsigned char 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  dividend        1    5[COMRAM] unsigned char 
  4862 ;;  quotient        1    7[COMRAM] unsigned char 
  4863 ;;  counter         1    6[COMRAM] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      unsigned char 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:        4 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_fround
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text14
  4887  00D508                     __ptext14:
  4888                           	callstack 0
  4889  00D508                     ___lbdiv:
  4890                           	callstack 27
  4891                           
  4892                           ;incstack = 0
  4893                           ;___lbdiv@dividend stored from wreg
  4894  00D508  6E06               	movwf	___lbdiv@dividend^0,c
  4895  00D50A  0E00               	movlw	0
  4896  00D50C  6E08               	movwf	___lbdiv@quotient^0,c
  4897  00D50E  5005               	movf	___lbdiv@divisor^0,w,c
  4898  00D510  B4D8               	btfsc	status,2,c
  4899  00D512  D015               	goto	l3709
  4900  00D514  0E01               	movlw	1
  4901  00D516  6E07               	movwf	___lbdiv@counter^0,c
  4902  00D518  D003               	goto	l3697
  4903  00D51A                     l3693:
  4904  00D51A  90D8               	bcf	status,0,c
  4905  00D51C  3605               	rlcf	___lbdiv@divisor^0,f,c
  4906  00D51E  2A07               	incf	___lbdiv@counter^0,f,c
  4907  00D520                     l3697:
  4908  00D520  AE05               	btfss	___lbdiv@divisor^0,7,c
  4909  00D522  D7FB               	goto	l3693
  4910  00D524                     u2860:
  4911  00D524  90D8               	bcf	status,0,c
  4912  00D526  3608               	rlcf	___lbdiv@quotient^0,f,c
  4913  00D528  5005               	movf	___lbdiv@divisor^0,w,c
  4914  00D52A  5C06               	subwf	___lbdiv@dividend^0,w,c
  4915  00D52C  A0D8               	btfss	status,0,c
  4916  00D52E  D003               	goto	l3705
  4917  00D530  5005               	movf	___lbdiv@divisor^0,w,c
  4918  00D532  5E06               	subwf	___lbdiv@dividend^0,f,c
  4919  00D534  8008               	bsf	___lbdiv@quotient^0,0,c
  4920  00D536                     l3705:
  4921  00D536  90D8               	bcf	status,0,c
  4922  00D538  3205               	rrcf	___lbdiv@divisor^0,f,c
  4923  00D53A  2E07               	decfsz	___lbdiv@counter^0,f,c
  4924  00D53C  D7F3               	goto	u2860
  4925  00D53E                     l3709:
  4926  00D53E  5008               	movf	___lbdiv@quotient^0,w,c
  4927  00D540  0012               	return		;funcret
  4928  00D542                     __end_of___lbdiv:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function __tdiv_to_l_ *****************
  4932 ;; Defined at:
  4933 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  f1              4    0[COMRAM] float 
  4936 ;;  f2              4    4[COMRAM] float 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  quot            4   11[COMRAM] unsigned long 
  4939 ;;  exp1            1   16[COMRAM] unsigned char 
  4940 ;;  cntr            1   15[COMRAM] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  4    0[COMRAM] unsigned long 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:       17 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_printf
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text15
  4964  00E00A                     __ptext15:
  4965                           	callstack 0
  4966  00E00A                     __tdiv_to_l_:
  4967                           	callstack 28
  4968                           
  4969                           ;incstack = 0
  4970  00E00A  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4971  00E00E  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4972  00E010  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4973  00E012  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4974  00E014  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4975  00E016  E301               	bnc	u3011
  4976  00E018  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4977  00E01A                     u3011:
  4978  00E01A  5009               	movf	??__tdiv_to_l_^0,w,c
  4979  00E01C  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4980  00E01E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4981  00E020  A4D8               	btfss	status,2,c
  4982  00E022  D009               	goto	l3811
  4983  00E024                     u3020:
  4984  00E024  0E00               	movlw	0
  4985  00E026  6E01               	movwf	?__tdiv_to_l_^0,c
  4986  00E028  0E00               	movlw	0
  4987  00E02A  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4988  00E02C  0E00               	movlw	0
  4989  00E02E  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4990  00E030  0E00               	movlw	0
  4991  00E032  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4992  00E034  0012               	return	
  4993  00E036                     l3811:
  4994  00E036  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4995  00E03A  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4996  00E03C  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4997  00E03E  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4998  00E040  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4999  00E042  E301               	bnc	u3031
  5000  00E044  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  5001  00E046                     u3031:
  5002  00E046  5009               	movf	??__tdiv_to_l_^0,w,c
  5003  00E048  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5004  00E04A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5005  00E04C  B4D8               	btfsc	status,2,c
  5006  00E04E  D7EA               	goto	u3020
  5007  00E050  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  5008  00E052  0EFF               	movlw	255
  5009  00E054  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  5010  00E056  0EFF               	movlw	255
  5011  00E058  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  5012  00E05A  0E00               	movlw	0
  5013  00E05C  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  5014  00E05E  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  5015  00E060  0EFF               	movlw	255
  5016  00E062  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  5017  00E064  0EFF               	movlw	255
  5018  00E066  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  5019  00E068  0E00               	movlw	0
  5020  00E06A  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  5021  00E06C  0E00               	movlw	0
  5022  00E06E  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  5023  00E070  0E00               	movlw	0
  5024  00E072  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  5025  00E074  0E00               	movlw	0
  5026  00E076  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  5027  00E078  0E00               	movlw	0
  5028  00E07A  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  5029  00E07C  0E7F               	movlw	127
  5030  00E07E  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5031  00E080  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5032  00E082  0F98               	addlw	152
  5033  00E084  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5034  00E086  0E18               	movlw	24
  5035  00E088  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5036  00E08A                     l1029:
  5037  00E08A  90D8               	bcf	status,0,c
  5038  00E08C  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5039  00E08E  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5040  00E090  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5041  00E092  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5042  00E094  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5043  00E096  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  5044  00E098  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5045  00E09A  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  5046  00E09C  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5047  00E09E  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  5048  00E0A0  A0D8               	btfss	status,0,c
  5049  00E0A2  D007               	goto	l1030
  5050  00E0A4  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5051  00E0A6  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  5052  00E0A8  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5053  00E0AA  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  5054  00E0AC  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5055  00E0AE  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  5056  00E0B0  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  5057  00E0B2                     l1030:
  5058  00E0B2  90D8               	bcf	status,0,c
  5059  00E0B4  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  5060  00E0B6  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  5061  00E0B8  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  5062  00E0BA  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  5063  00E0BC  D7E6               	goto	l1029
  5064  00E0BE  AE11               	btfss	__tdiv_to_l_@exp1^0,7,c
  5065  00E0C0  D00D               	goto	l3851
  5066  00E0C2  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5067  00E0C4  0A80               	xorlw	128
  5068  00E0C6  0F97               	addlw	151
  5069  00E0C8  A0D8               	btfss	status,0,c
  5070  00E0CA  D7AC               	goto	u3020
  5071  00E0CC                     l3847:
  5072  00E0CC  90D8               	bcf	status,0,c
  5073  00E0CE  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  5074  00E0D0  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  5075  00E0D2  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  5076  00E0D4  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  5077  00E0D6  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  5078  00E0D8  D7F9               	goto	l3847
  5079  00E0DA  D00D               	goto	u3090
  5080  00E0DC                     l3851:
  5081  00E0DC  0E17               	movlw	23
  5082  00E0DE  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  5083  00E0E0  D007               	goto	l3859
  5084  00E0E2  D7A0               	goto	u3020
  5085  00E0E4                     l3857:
  5086  00E0E4  90D8               	bcf	status,0,c
  5087  00E0E6  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5088  00E0E8  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5089  00E0EA  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5090  00E0EC  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5091  00E0EE  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  5092  00E0F0                     l3859:
  5093  00E0F0  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5094  00E0F2  A4D8               	btfss	status,2,c
  5095  00E0F4  D7F7               	goto	l3857
  5096  00E0F6                     u3090:
  5097  00E0F6  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5098  00E0FA  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5099  00E0FE  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5100  00E102  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5101  00E106  0012               	return		;funcret
  5102  00E108                     __end_of__tdiv_to_l_:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function __div_to_l_ *****************
  5106 ;; Defined at:
  5107 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  f1              4    0[COMRAM] unsigned long 
  5110 ;;  f2              4    4[COMRAM] unsigned long 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  quot            4    8[COMRAM] unsigned long 
  5113 ;;  exp1            1   13[COMRAM] unsigned char 
  5114 ;;  cntr            1   12[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  4    0[COMRAM] unsigned long 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;Total ram usage:       14 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_printf
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text16
  5138  00DE1C                     __ptext16:
  5139                           	callstack 0
  5140  00DE1C                     __div_to_l_:
  5141                           	callstack 28
  5142                           
  5143                           ;incstack = 0
  5144  00DE1C  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  5145  00DE1E  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  5146  00DE20  6E0E               	movwf	__div_to_l_@exp1^0,c
  5147  00DE22  500E               	movf	__div_to_l_@exp1^0,w,c
  5148  00DE24  A4D8               	btfss	status,2,c
  5149  00DE26  D009               	goto	l3867
  5150  00DE28                     u3100:
  5151  00DE28  0E00               	movlw	0
  5152  00DE2A  6E01               	movwf	?__div_to_l_^0,c
  5153  00DE2C  0E00               	movlw	0
  5154  00DE2E  6E02               	movwf	(?__div_to_l_+1)^0,c
  5155  00DE30  0E00               	movlw	0
  5156  00DE32  6E03               	movwf	(?__div_to_l_+2)^0,c
  5157  00DE34  0E00               	movlw	0
  5158  00DE36  6E04               	movwf	(?__div_to_l_+3)^0,c
  5159  00DE38  0012               	return	
  5160  00DE3A                     l3867:
  5161  00DE3A  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  5162  00DE3C  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  5163  00DE3E  6E0D               	movwf	__div_to_l_@cntr^0,c
  5164  00DE40  500D               	movf	__div_to_l_@cntr^0,w,c
  5165  00DE42  B4D8               	btfsc	status,2,c
  5166  00DE44  D7F1               	goto	u3100
  5167  00DE46  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  5168  00DE48  0EFF               	movlw	255
  5169  00DE4A  1601               	andwf	__div_to_l_@f1^0,f,c
  5170  00DE4C  0EFF               	movlw	255
  5171  00DE4E  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  5172  00DE50  0EFF               	movlw	255
  5173  00DE52  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  5174  00DE54  0E00               	movlw	0
  5175  00DE56  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  5176  00DE58  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  5177  00DE5A  0EFF               	movlw	255
  5178  00DE5C  1605               	andwf	__div_to_l_@f2^0,f,c
  5179  00DE5E  0EFF               	movlw	255
  5180  00DE60  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  5181  00DE62  0EFF               	movlw	255
  5182  00DE64  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  5183  00DE66  0E00               	movlw	0
  5184  00DE68  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  5185  00DE6A  0E00               	movlw	0
  5186  00DE6C  6E09               	movwf	__div_to_l_@quot^0,c
  5187  00DE6E  0E00               	movlw	0
  5188  00DE70  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  5189  00DE72  0E00               	movlw	0
  5190  00DE74  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  5191  00DE76  0E00               	movlw	0
  5192  00DE78  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  5193  00DE7A  0E7F               	movlw	127
  5194  00DE7C  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5195  00DE7E  500D               	movf	__div_to_l_@cntr^0,w,c
  5196  00DE80  0FA0               	addlw	160
  5197  00DE82  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5198  00DE84  0E20               	movlw	32
  5199  00DE86  6E0D               	movwf	__div_to_l_@cntr^0,c
  5200  00DE88                     l3887:
  5201  00DE88  90D8               	bcf	status,0,c
  5202  00DE8A  3609               	rlcf	__div_to_l_@quot^0,f,c
  5203  00DE8C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5204  00DE8E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5205  00DE90  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5206  00DE92  5005               	movf	__div_to_l_@f2^0,w,c
  5207  00DE94  5C01               	subwf	__div_to_l_@f1^0,w,c
  5208  00DE96  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5209  00DE98  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  5210  00DE9A  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5211  00DE9C  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  5212  00DE9E  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5213  00DEA0  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  5214  00DEA2  A0D8               	btfss	status,0,c
  5215  00DEA4  D009               	goto	l3895
  5216  00DEA6  5005               	movf	__div_to_l_@f2^0,w,c
  5217  00DEA8  5E01               	subwf	__div_to_l_@f1^0,f,c
  5218  00DEAA  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5219  00DEAC  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  5220  00DEAE  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5221  00DEB0  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  5222  00DEB2  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5223  00DEB4  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  5224  00DEB6  8009               	bsf	__div_to_l_@quot^0,0,c
  5225  00DEB8                     l3895:
  5226  00DEB8  90D8               	bcf	status,0,c
  5227  00DEBA  3601               	rlcf	__div_to_l_@f1^0,f,c
  5228  00DEBC  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  5229  00DEBE  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  5230  00DEC0  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  5231  00DEC2  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  5232  00DEC4  D7E1               	goto	l3887
  5233  00DEC6  AE0E               	btfss	__div_to_l_@exp1^0,7,c
  5234  00DEC8  D00D               	goto	l3911
  5235  00DECA  500E               	movf	__div_to_l_@exp1^0,w,c
  5236  00DECC  0A80               	xorlw	128
  5237  00DECE  0F9F               	addlw	159
  5238  00DED0  A0D8               	btfss	status,0,c
  5239  00DED2  D7AA               	goto	u3100
  5240  00DED4                     l3907:
  5241  00DED4  90D8               	bcf	status,0,c
  5242  00DED6  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  5243  00DED8  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  5244  00DEDA  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  5245  00DEDC  3209               	rrcf	__div_to_l_@quot^0,f,c
  5246  00DEDE  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  5247  00DEE0  D7F9               	goto	l3907
  5248  00DEE2  D00D               	goto	u3160
  5249  00DEE4                     l3911:
  5250  00DEE4  0E1F               	movlw	31
  5251  00DEE6  640E               	cpfsgt	__div_to_l_@exp1^0,c
  5252  00DEE8  D007               	goto	l3919
  5253  00DEEA  D79E               	goto	u3100
  5254  00DEEC                     l3917:
  5255  00DEEC  90D8               	bcf	status,0,c
  5256  00DEEE  3609               	rlcf	__div_to_l_@quot^0,f,c
  5257  00DEF0  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5258  00DEF2  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5259  00DEF4  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5260  00DEF6  060E               	decf	__div_to_l_@exp1^0,f,c
  5261  00DEF8                     l3919:
  5262  00DEF8  500E               	movf	__div_to_l_@exp1^0,w,c
  5263  00DEFA  A4D8               	btfss	status,2,c
  5264  00DEFC  D7F7               	goto	l3917
  5265  00DEFE                     u3160:
  5266  00DEFE  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5267  00DF02  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5268  00DF06  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5269  00DF0A  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5270  00DF0E  0012               	return		;funcret
  5271  00DF10                     __end_of__div_to_l_:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function ___wmul *****************
  5275 ;; Defined at:
  5276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  multiplier      2    0[COMRAM] unsigned int 
  5279 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  product         2    4[COMRAM] unsigned int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2    0[COMRAM] unsigned int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, prodl, prodh
  5286 ;; Tracked objects:
  5287 ;;		On entry : 3F/0
  5288 ;;		On exit  : 3F/0
  5289 ;;		Unchanged: 3F/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;Total ram usage:        6 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_printf
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text17
  5305  00D31A                     __ptext17:
  5306                           	callstack 0
  5307  00D31A                     ___wmul:
  5308                           	callstack 28
  5309                           
  5310                           ; BSR set to: 0
  5311                           
  5312                           ;incstack = 0
  5313  00D31A  5001               	movf	___wmul@multiplier^0,w,c
  5314  00D31C  0203               	mulwf	___wmul@multiplicand^0,c
  5315  00D31E  CFF3 F005          	movff	prodl,___wmul@product
  5316  00D322  CFF4 F006          	movff	prodh,___wmul@product+1
  5317  00D326  5001               	movf	___wmul@multiplier^0,w,c
  5318  00D328  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5319  00D32A  50F3               	movf	243,w,c
  5320  00D32C  2606               	addwf	(___wmul@product+1)^0,f,c
  5321  00D32E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5322  00D330  0203               	mulwf	___wmul@multiplicand^0,c
  5323  00D332  50F3               	movf	243,w,c
  5324  00D334  2606               	addwf	(___wmul@product+1)^0,f,c
  5325                           
  5326                           ; BSR set to: 0
  5327  00D336  C005  F001         	movff	___wmul@product,?___wmul
  5328  00D33A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5329                           
  5330                           ; BSR set to: 0
  5331  00D33E  0012               	return		;funcret
  5332  00D340                     __end_of___wmul:
  5333                           	callstack 0
  5334                           
  5335 ;; *************** function ___llmod *****************
  5336 ;; Defined at:
  5337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  dividend        4   13[COMRAM] unsigned long 
  5340 ;;  divisor         4   17[COMRAM] unsigned long 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  counter         1   21[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4   13[COMRAM] unsigned long 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;Total ram usage:        9 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_printf
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text18
  5366  00D8EC                     __ptext18:
  5367                           	callstack 0
  5368  00D8EC                     ___llmod:
  5369                           	callstack 28
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;incstack = 0
  5373  00D8EC  5012               	movf	___llmod@divisor^0,w,c
  5374  00D8EE  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5375  00D8F0  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5376  00D8F2  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5377  00D8F4  B4D8               	btfsc	status,2,c
  5378  00D8F6  D024               	goto	l1106
  5379  00D8F8  0E01               	movlw	1
  5380  00D8FA  6E16               	movwf	___llmod@counter^0,c
  5381  00D8FC  D006               	goto	l4051
  5382  00D8FE                     l4049:
  5383  00D8FE  90D8               	bcf	status,0,c
  5384  00D900  3612               	rlcf	___llmod@divisor^0,f,c
  5385  00D902  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5386  00D904  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5387  00D906  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5388  00D908  2A16               	incf	___llmod@counter^0,f,c
  5389  00D90A                     l4051:
  5390  00D90A  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5391  00D90C  D7F8               	goto	l4049
  5392  00D90E                     u3370:
  5393  00D90E  5012               	movf	___llmod@divisor^0,w,c
  5394  00D910  5C0E               	subwf	___llmod@dividend^0,w,c
  5395  00D912  5013               	movf	(___llmod@divisor+1)^0,w,c
  5396  00D914  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5397  00D916  5014               	movf	(___llmod@divisor+2)^0,w,c
  5398  00D918  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5399  00D91A  5015               	movf	(___llmod@divisor+3)^0,w,c
  5400  00D91C  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5401  00D91E  A0D8               	btfss	status,0,c
  5402  00D920  D008               	goto	l4057
  5403  00D922  5012               	movf	___llmod@divisor^0,w,c
  5404  00D924  5E0E               	subwf	___llmod@dividend^0,f,c
  5405  00D926  5013               	movf	(___llmod@divisor+1)^0,w,c
  5406  00D928  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5407  00D92A  5014               	movf	(___llmod@divisor+2)^0,w,c
  5408  00D92C  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5409  00D92E  5015               	movf	(___llmod@divisor+3)^0,w,c
  5410  00D930  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5411  00D932                     l4057:
  5412  00D932  90D8               	bcf	status,0,c
  5413  00D934  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5414  00D936  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5415  00D938  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5416  00D93A  3212               	rrcf	___llmod@divisor^0,f,c
  5417  00D93C  2E16               	decfsz	___llmod@counter^0,f,c
  5418  00D93E  D7E7               	goto	u3370
  5419  00D940                     l1106:
  5420  00D940  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5421  00D944  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5422  00D948  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5423  00D94C  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5424  00D950  0012               	return		;funcret
  5425  00D952                     __end_of___llmod:
  5426                           	callstack 0
  5427                           
  5428 ;; *************** function ___flsub *****************
  5429 ;; Defined at:
  5430 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  b               4   70[COMRAM] unsigned long 
  5433 ;;  a               4   74[COMRAM] unsigned long 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  4   70[COMRAM] unsigned long 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;Total ram usage:        8 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    1
  5452 ;; This function calls:
  5453 ;;		___fladd
  5454 ;; This function is called by:
  5455 ;;		_printf
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text19
  5460  00D60A                     __ptext19:
  5461                           	callstack 0
  5462  00D60A                     ___flsub:
  5463                           	callstack 27
  5464                           
  5465                           ;incstack = 0
  5466  00D60A  0E00               	movlw	0
  5467  00D60C  1A4B               	xorwf	___flsub@a^0,f,c
  5468  00D60E  0E00               	movlw	0
  5469  00D610  1A4C               	xorwf	(___flsub@a+1)^0,f,c
  5470  00D612  0E00               	movlw	0
  5471  00D614  1A4D               	xorwf	(___flsub@a+2)^0,f,c
  5472  00D616  0E80               	movlw	128
  5473  00D618  1A4E               	xorwf	(___flsub@a+3)^0,f,c
  5474  00D61A  C047  F037         	movff	___flsub@b,___fladd@b
  5475  00D61E  C048  F038         	movff	___flsub@b+1,___fladd@b+1
  5476  00D622  C049  F039         	movff	___flsub@b+2,___fladd@b+2
  5477  00D626  C04A  F03A         	movff	___flsub@b+3,___fladd@b+3
  5478  00D62A  C04B  F03B         	movff	___flsub@a,___fladd@a
  5479  00D62E  C04C  F03C         	movff	___flsub@a+1,___fladd@a+1
  5480  00D632  C04D  F03D         	movff	___flsub@a+2,___fladd@a+2
  5481  00D636  C04E  F03E         	movff	___flsub@a+3,___fladd@a+3
  5482  00D63A  ECF6  F074         	call	___fladd	;wreg free
  5483  00D63E  C037  F047         	movff	?___fladd,?___flsub
  5484  00D642  C038  F048         	movff	?___fladd+1,?___flsub+1
  5485  00D646  C039  F049         	movff	?___fladd+2,?___flsub+2
  5486  00D64A  C03A  F04A         	movff	?___fladd+3,?___flsub+3
  5487  00D64E  0012               	return		;funcret
  5488  00D650                     __end_of___flsub:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function ___fladd *****************
  5492 ;; Defined at:
  5493 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  b               4   54[COMRAM] unsigned long 
  5496 ;;  a               4   58[COMRAM] unsigned long 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  grs             1   69[COMRAM] unsigned char 
  5499 ;;  bexp            1   68[COMRAM] unsigned char 
  5500 ;;  aexp            1   67[COMRAM] unsigned char 
  5501 ;;  signs           1   66[COMRAM] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  4   54[COMRAM] unsigned char 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:       16 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_printf
  5521 ;;		___flsub
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text20
  5526  00E9EC                     __ptext20:
  5527                           	callstack 0
  5528  00E9EC                     ___fladd:
  5529                           	callstack 27
  5530                           
  5531                           ;incstack = 0
  5532  00E9EC  503A               	movf	(___fladd@b+3)^0,w,c
  5533  00E9EE  0B80               	andlw	128
  5534  00E9F0  6E43               	movwf	___fladd@signs^0,c
  5535  00E9F2  503A               	movf	(___fladd@b+3)^0,w,c
  5536  00E9F4  243A               	addwf	(___fladd@b+3)^0,w,c
  5537  00E9F6  6E45               	movwf	___fladd@bexp^0,c
  5538  00E9F8  BE39               	btfsc	(___fladd@b+2)^0,7,c
  5539  00E9FA  8045               	bsf	___fladd@bexp^0,0,c
  5540  00E9FC  5045               	movf	___fladd@bexp^0,w,c
  5541  00E9FE  B4D8               	btfsc	status,2,c
  5542  00EA00  D00D               	goto	l3291
  5543  00EA02  2845               	incf	___fladd@bexp^0,w,c
  5544  00EA04  A4D8               	btfss	status,2,c
  5545  00EA06  D008               	goto	l3287
  5546  00EA08  0E00               	movlw	0
  5547  00EA0A  6E37               	movwf	___fladd@b^0,c
  5548  00EA0C  0E00               	movlw	0
  5549  00EA0E  6E38               	movwf	(___fladd@b+1)^0,c
  5550  00EA10  0E00               	movlw	0
  5551  00EA12  6E39               	movwf	(___fladd@b+2)^0,c
  5552  00EA14  0E00               	movlw	0
  5553  00EA16  6E3A               	movwf	(___fladd@b+3)^0,c
  5554  00EA18                     l3287:
  5555  00EA18  8E39               	bsf	(___fladd@b+2)^0,7,c
  5556  00EA1A  D006               	goto	L2
  5557  00EA1C                     l3291:
  5558  00EA1C  0E00               	movlw	0
  5559  00EA1E  6E37               	movwf	___fladd@b^0,c
  5560  00EA20  0E00               	movlw	0
  5561  00EA22  6E38               	movwf	(___fladd@b+1)^0,c
  5562  00EA24  0E00               	movlw	0
  5563  00EA26  6E39               	movwf	(___fladd@b+2)^0,c
  5564  00EA28                     L2:
  5565  00EA28  0E00               	movlw	0
  5566  00EA2A  6E3A               	movwf	(___fladd@b+3)^0,c
  5567  00EA2C  503E               	movf	(___fladd@a+3)^0,w,c
  5568  00EA2E  0B80               	andlw	128
  5569  00EA30  6E44               	movwf	___fladd@aexp^0,c
  5570  00EA32  5043               	movf	___fladd@signs^0,w,c
  5571  00EA34  1844               	xorwf	___fladd@aexp^0,w,c
  5572  00EA36  A4D8               	btfss	status,2,c
  5573  00EA38  8C43               	bsf	___fladd@signs^0,6,c
  5574  00EA3A  503E               	movf	(___fladd@a+3)^0,w,c
  5575  00EA3C  243E               	addwf	(___fladd@a+3)^0,w,c
  5576  00EA3E  6E44               	movwf	___fladd@aexp^0,c
  5577  00EA40  BE3D               	btfsc	(___fladd@a+2)^0,7,c
  5578  00EA42  8044               	bsf	___fladd@aexp^0,0,c
  5579  00EA44  5044               	movf	___fladd@aexp^0,w,c
  5580  00EA46  B4D8               	btfsc	status,2,c
  5581  00EA48  D00D               	goto	l3315
  5582  00EA4A  2844               	incf	___fladd@aexp^0,w,c
  5583  00EA4C  A4D8               	btfss	status,2,c
  5584  00EA4E  D008               	goto	l3311
  5585  00EA50  0E00               	movlw	0
  5586  00EA52  6E3B               	movwf	___fladd@a^0,c
  5587  00EA54  0E00               	movlw	0
  5588  00EA56  6E3C               	movwf	(___fladd@a+1)^0,c
  5589  00EA58  0E00               	movlw	0
  5590  00EA5A  6E3D               	movwf	(___fladd@a+2)^0,c
  5591  00EA5C  0E00               	movlw	0
  5592  00EA5E  6E3E               	movwf	(___fladd@a+3)^0,c
  5593  00EA60                     l3311:
  5594  00EA60  8E3D               	bsf	(___fladd@a+2)^0,7,c
  5595  00EA62  D006               	goto	L3
  5596  00EA64                     l3315:
  5597  00EA64  0E00               	movlw	0
  5598  00EA66  6E3B               	movwf	___fladd@a^0,c
  5599  00EA68  0E00               	movlw	0
  5600  00EA6A  6E3C               	movwf	(___fladd@a+1)^0,c
  5601  00EA6C  0E00               	movlw	0
  5602  00EA6E  6E3D               	movwf	(___fladd@a+2)^0,c
  5603  00EA70                     L3:
  5604  00EA70  0E00               	movlw	0
  5605  00EA72  6E3E               	movwf	(___fladd@a+3)^0,c
  5606  00EA74  5045               	movf	___fladd@bexp^0,w,c
  5607  00EA76  5C44               	subwf	___fladd@aexp^0,w,c
  5608  00EA78  B0D8               	btfsc	status,0,c
  5609  00EA7A  D022               	goto	l3353
  5610  00EA7C  AC43               	btfss	___fladd@signs^0,6,c
  5611  00EA7E  D002               	goto	l3323
  5612  00EA80  0E80               	movlw	128
  5613  00EA82  1A43               	xorwf	___fladd@signs^0,f,c
  5614  00EA84                     l3323:
  5615  00EA84  C045  F046         	movff	___fladd@bexp,___fladd@grs
  5616  00EA88  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  5617  00EA8C  C046  F044         	movff	___fladd@grs,___fladd@aexp
  5618  00EA90  C037  F046         	movff	___fladd@b,___fladd@grs
  5619  00EA94  C03B  F037         	movff	___fladd@a,___fladd@b
  5620  00EA98  C046  F03B         	movff	___fladd@grs,___fladd@a
  5621  00EA9C  C038  F046         	movff	___fladd@b+1,___fladd@grs
  5622  00EAA0  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
  5623  00EAA4  C046  F03C         	movff	___fladd@grs,___fladd@a+1
  5624  00EAA8  C039  F046         	movff	___fladd@b+2,___fladd@grs
  5625  00EAAC  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
  5626  00EAB0  C046  F03D         	movff	___fladd@grs,___fladd@a+2
  5627  00EAB4  C03A  F046         	movff	___fladd@b+3,___fladd@grs
  5628  00EAB8  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
  5629  00EABC  C046  F03E         	movff	___fladd@grs,___fladd@a+3
  5630  00EAC0                     l3353:
  5631  00EAC0  0E00               	movlw	0
  5632  00EAC2  6E46               	movwf	___fladd@grs^0,c
  5633  00EAC4  5045               	movf	___fladd@bexp^0,w,c
  5634  00EAC6  C044  F03F         	movff	___fladd@aexp,??___fladd
  5635  00EACA  6A40               	clrf	(??___fladd+1)^0,c
  5636  00EACC  5E3F               	subwf	??___fladd^0,f,c
  5637  00EACE  0E00               	movlw	0
  5638  00EAD0  5A40               	subwfb	(??___fladd+1)^0,f,c
  5639  00EAD2  BE40               	btfsc	(??___fladd+1)^0,7,c
  5640  00EAD4  D02C               	goto	l1215
  5641  00EAD6  5040               	movf	(??___fladd+1)^0,w,c
  5642  00EAD8  E104               	bnz	u2250
  5643  00EADA  0E1A               	movlw	26
  5644  00EADC  5C3F               	subwf	??___fladd^0,w,c
  5645  00EADE  A0D8               	btfss	status,0,c
  5646  00EAE0  D026               	goto	l1215
  5647  00EAE2                     u2250:
  5648  00EAE2  5037               	movf	___fladd@b^0,w,c
  5649  00EAE4  1038               	iorwf	(___fladd@b+1)^0,w,c
  5650  00EAE6  1039               	iorwf	(___fladd@b+2)^0,w,c
  5651  00EAE8  103A               	iorwf	(___fladd@b+3)^0,w,c
  5652  00EAEA  B4D8               	btfsc	status,2,c
  5653  00EAEC  D002               	goto	u2260
  5654  00EAEE  0E01               	movlw	1
  5655  00EAF0  D001               	goto	u2270
  5656  00EAF2                     u2260:
  5657  00EAF2  0E00               	movlw	0
  5658  00EAF4                     u2270:
  5659  00EAF4  6E46               	movwf	___fladd@grs^0,c
  5660  00EAF6  0E00               	movlw	0
  5661  00EAF8  6E37               	movwf	___fladd@b^0,c
  5662  00EAFA  0E00               	movlw	0
  5663  00EAFC  6E38               	movwf	(___fladd@b+1)^0,c
  5664  00EAFE  0E00               	movlw	0
  5665  00EB00  6E39               	movwf	(___fladd@b+2)^0,c
  5666  00EB02  0E00               	movlw	0
  5667  00EB04  6E3A               	movwf	(___fladd@b+3)^0,c
  5668  00EB06  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  5669  00EB0A  D015               	goto	u2300
  5670  00EB0C                     l1216:
  5671  00EB0C  A046               	btfss	___fladd@grs^0,0,c
  5672  00EB0E  D005               	goto	l3365
  5673  00EB10  90D8               	bcf	status,0,c
  5674  00EB12  3046               	rrcf	___fladd@grs^0,w,c
  5675  00EB14  0901               	iorlw	1
  5676  00EB16  6E46               	movwf	___fladd@grs^0,c
  5677  00EB18  D002               	goto	l3367
  5678  00EB1A                     l3365:
  5679  00EB1A  90D8               	bcf	status,0,c
  5680  00EB1C  3246               	rrcf	___fladd@grs^0,f,c
  5681  00EB1E                     l3367:
  5682  00EB1E  B037               	btfsc	___fladd@b^0,0,c
  5683  00EB20  8E46               	bsf	___fladd@grs^0,7,c
  5684  00EB22  343A               	rlcf	(___fladd@b+3)^0,w,c
  5685  00EB24  323A               	rrcf	(___fladd@b+3)^0,f,c
  5686  00EB26  3239               	rrcf	(___fladd@b+2)^0,f,c
  5687  00EB28  3238               	rrcf	(___fladd@b+1)^0,f,c
  5688  00EB2A  3237               	rrcf	___fladd@b^0,f,c
  5689  00EB2C  2A45               	incf	___fladd@bexp^0,f,c
  5690  00EB2E                     l1215:
  5691  00EB2E  5044               	movf	___fladd@aexp^0,w,c
  5692  00EB30  5C45               	subwf	___fladd@bexp^0,w,c
  5693  00EB32  A0D8               	btfss	status,0,c
  5694  00EB34  D7EB               	goto	l1216
  5695  00EB36                     u2300:
  5696  00EB36  BC43               	btfsc	___fladd@signs^0,6,c
  5697  00EB38  D028               	goto	l3399
  5698  00EB3A  5045               	movf	___fladd@bexp^0,w,c
  5699  00EB3C  A4D8               	btfss	status,2,c
  5700  00EB3E  D009               	goto	l3381
  5701  00EB40  0E00               	movlw	0
  5702  00EB42  6E37               	movwf	?___fladd^0,c
  5703  00EB44  0E00               	movlw	0
  5704  00EB46  6E38               	movwf	(?___fladd+1)^0,c
  5705  00EB48  0E00               	movlw	0
  5706  00EB4A  6E39               	movwf	(?___fladd+2)^0,c
  5707  00EB4C  0E00               	movlw	0
  5708  00EB4E  6E3A               	movwf	(?___fladd+3)^0,c
  5709  00EB50  0012               	return	
  5710  00EB52                     l3381:
  5711  00EB52  503B               	movf	___fladd@a^0,w,c
  5712  00EB54  2637               	addwf	___fladd@b^0,f,c
  5713  00EB56  503C               	movf	(___fladd@a+1)^0,w,c
  5714  00EB58  2238               	addwfc	(___fladd@b+1)^0,f,c
  5715  00EB5A  503D               	movf	(___fladd@a+2)^0,w,c
  5716  00EB5C  2239               	addwfc	(___fladd@b+2)^0,f,c
  5717  00EB5E  503E               	movf	(___fladd@a+3)^0,w,c
  5718  00EB60  223A               	addwfc	(___fladd@b+3)^0,f,c
  5719  00EB62  A03A               	btfss	(___fladd@b+3)^0,0,c
  5720  00EB64  D071               	goto	u2430
  5721  00EB66  A046               	btfss	___fladd@grs^0,0,c
  5722  00EB68  D005               	goto	l3389
  5723  00EB6A  90D8               	bcf	status,0,c
  5724  00EB6C  3046               	rrcf	___fladd@grs^0,w,c
  5725  00EB6E  0901               	iorlw	1
  5726  00EB70  6E46               	movwf	___fladd@grs^0,c
  5727  00EB72  D002               	goto	l3391
  5728  00EB74                     l3389:
  5729  00EB74  90D8               	bcf	status,0,c
  5730  00EB76  3246               	rrcf	___fladd@grs^0,f,c
  5731  00EB78                     l3391:
  5732  00EB78  B037               	btfsc	___fladd@b^0,0,c
  5733  00EB7A  8E46               	bsf	___fladd@grs^0,7,c
  5734  00EB7C  343A               	rlcf	(___fladd@b+3)^0,w,c
  5735  00EB7E  323A               	rrcf	(___fladd@b+3)^0,f,c
  5736  00EB80  3239               	rrcf	(___fladd@b+2)^0,f,c
  5737  00EB82  3238               	rrcf	(___fladd@b+1)^0,f,c
  5738  00EB84  3237               	rrcf	___fladd@b^0,f,c
  5739  00EB86  2A45               	incf	___fladd@bexp^0,f,c
  5740  00EB88  D05F               	goto	u2430
  5741  00EB8A                     l3399:
  5742  00EB8A  503B               	movf	___fladd@a^0,w,c
  5743  00EB8C  5C37               	subwf	___fladd@b^0,w,c
  5744  00EB8E  503C               	movf	(___fladd@a+1)^0,w,c
  5745  00EB90  5838               	subwfb	(___fladd@b+1)^0,w,c
  5746  00EB92  503D               	movf	(___fladd@a+2)^0,w,c
  5747  00EB94  5839               	subwfb	(___fladd@b+2)^0,w,c
  5748  00EB96  503A               	movf	(___fladd@b+3)^0,w,c
  5749  00EB98  0A80               	xorlw	128
  5750  00EB9A  6E3F               	movwf	??___fladd^0,c
  5751  00EB9C  503E               	movf	(___fladd@a+3)^0,w,c
  5752  00EB9E  0A80               	xorlw	128
  5753  00EBA0  583F               	subwfb	??___fladd^0,w,c
  5754  00EBA2  B0D8               	btfsc	status,0,c
  5755  00EBA4  D025               	goto	l3409
  5756  00EBA6  5037               	movf	___fladd@b^0,w,c
  5757  00EBA8  5C3B               	subwf	___fladd@a^0,w,c
  5758  00EBAA  6E3F               	movwf	??___fladd^0,c
  5759  00EBAC  5038               	movf	(___fladd@b+1)^0,w,c
  5760  00EBAE  583C               	subwfb	(___fladd@a+1)^0,w,c
  5761  00EBB0  6E40               	movwf	(??___fladd+1)^0,c
  5762  00EBB2  5039               	movf	(___fladd@b+2)^0,w,c
  5763  00EBB4  583D               	subwfb	(___fladd@a+2)^0,w,c
  5764  00EBB6  6E41               	movwf	(??___fladd+2)^0,c
  5765  00EBB8  503A               	movf	(___fladd@b+3)^0,w,c
  5766  00EBBA  583E               	subwfb	(___fladd@a+3)^0,w,c
  5767  00EBBC  6E42               	movwf	(??___fladd+3)^0,c
  5768  00EBBE  0EFF               	movlw	255
  5769  00EBC0  243F               	addwf	??___fladd^0,w,c
  5770  00EBC2  6E37               	movwf	___fladd@b^0,c
  5771  00EBC4  0EFF               	movlw	255
  5772  00EBC6  2040               	addwfc	(??___fladd+1)^0,w,c
  5773  00EBC8  6E38               	movwf	(___fladd@b+1)^0,c
  5774  00EBCA  0EFF               	movlw	255
  5775  00EBCC  2041               	addwfc	(??___fladd+2)^0,w,c
  5776  00EBCE  6E39               	movwf	(___fladd@b+2)^0,c
  5777  00EBD0  0EFF               	movlw	255
  5778  00EBD2  2042               	addwfc	(??___fladd+3)^0,w,c
  5779  00EBD4  6E3A               	movwf	(___fladd@b+3)^0,c
  5780  00EBD6  0E80               	movlw	128
  5781  00EBD8  1A43               	xorwf	___fladd@signs^0,f,c
  5782  00EBDA  6C46               	negf	___fladd@grs^0,c
  5783  00EBDC  5046               	movf	___fladd@grs^0,w,c
  5784  00EBDE  A4D8               	btfss	status,2,c
  5785  00EBE0  D00F               	goto	l1231
  5786  00EBE2  0E01               	movlw	1
  5787  00EBE4  2637               	addwf	___fladd@b^0,f,c
  5788  00EBE6  0E00               	movlw	0
  5789  00EBE8  2238               	addwfc	(___fladd@b+1)^0,f,c
  5790  00EBEA  2239               	addwfc	(___fladd@b+2)^0,f,c
  5791  00EBEC  223A               	addwfc	(___fladd@b+3)^0,f,c
  5792  00EBEE  D008               	goto	l1231
  5793  00EBF0                     l3409:
  5794  00EBF0  503B               	movf	___fladd@a^0,w,c
  5795  00EBF2  5E37               	subwf	___fladd@b^0,f,c
  5796  00EBF4  503C               	movf	(___fladd@a+1)^0,w,c
  5797  00EBF6  5A38               	subwfb	(___fladd@b+1)^0,f,c
  5798  00EBF8  503D               	movf	(___fladd@a+2)^0,w,c
  5799  00EBFA  5A39               	subwfb	(___fladd@b+2)^0,f,c
  5800  00EBFC  503E               	movf	(___fladd@a+3)^0,w,c
  5801  00EBFE  5A3A               	subwfb	(___fladd@b+3)^0,f,c
  5802  00EC00                     l1231:
  5803  00EC00  5037               	movf	___fladd@b^0,w,c
  5804  00EC02  1038               	iorwf	(___fladd@b+1)^0,w,c
  5805  00EC04  1039               	iorwf	(___fladd@b+2)^0,w,c
  5806  00EC06  103A               	iorwf	(___fladd@b+3)^0,w,c
  5807  00EC08  A4D8               	btfss	status,2,c
  5808  00EC0A  D01C               	goto	l3433
  5809  00EC0C  5046               	movf	___fladd@grs^0,w,c
  5810  00EC0E  A4D8               	btfss	status,2,c
  5811  00EC10  D019               	goto	l3433
  5812  00EC12  0E00               	movlw	0
  5813  00EC14  6E37               	movwf	?___fladd^0,c
  5814  00EC16  0E00               	movlw	0
  5815  00EC18  6E38               	movwf	(?___fladd+1)^0,c
  5816  00EC1A  0E00               	movlw	0
  5817  00EC1C  6E39               	movwf	(?___fladd+2)^0,c
  5818  00EC1E  0E00               	movlw	0
  5819  00EC20  6E3A               	movwf	(?___fladd+3)^0,c
  5820  00EC22  0012               	return	
  5821  00EC24                     l3417:
  5822  00EC24  90D8               	bcf	status,0,c
  5823  00EC26  3637               	rlcf	___fladd@b^0,f,c
  5824  00EC28  3638               	rlcf	(___fladd@b+1)^0,f,c
  5825  00EC2A  3639               	rlcf	(___fladd@b+2)^0,f,c
  5826  00EC2C  363A               	rlcf	(___fladd@b+3)^0,f,c
  5827  00EC2E  BE46               	btfsc	___fladd@grs^0,7,c
  5828  00EC30  8037               	bsf	___fladd@b^0,0,c
  5829  00EC32  A046               	btfss	___fladd@grs^0,0,c
  5830  00EC34  D002               	goto	l3427
  5831  00EC36  80D8               	bsf	status,0,c
  5832  00EC38  D001               	goto	L4
  5833  00EC3A                     l3427:
  5834  00EC3A  90D8               	bcf	status,0,c
  5835  00EC3C                     L4:
  5836  00EC3C  3646               	rlcf	___fladd@grs^0,f,c
  5837  00EC3E  5045               	movf	___fladd@bexp^0,w,c
  5838  00EC40  A4D8               	btfss	status,2,c
  5839  00EC42  0645               	decf	___fladd@bexp^0,f,c
  5840  00EC44                     l3433:
  5841  00EC44  AE39               	btfss	(___fladd@b+2)^0,7,c
  5842  00EC46  D7EE               	goto	l3417
  5843  00EC48                     u2430:
  5844  00EC48  0E00               	movlw	0
  5845  00EC4A  6E44               	movwf	___fladd@aexp^0,c
  5846  00EC4C  AE46               	btfss	___fladd@grs^0,7,c
  5847  00EC4E  D00B               	goto	l1240
  5848  00EC50  C046  F03F         	movff	___fladd@grs,??___fladd
  5849  00EC54  0E7F               	movlw	127
  5850  00EC56  163F               	andwf	??___fladd^0,f,c
  5851  00EC58  B4D8               	btfsc	status,2,c
  5852  00EC5A  D003               	goto	l1241
  5853  00EC5C                     u2450:
  5854  00EC5C  0E01               	movlw	1
  5855  00EC5E  6E44               	movwf	___fladd@aexp^0,c
  5856  00EC60  D002               	goto	l1240
  5857  00EC62                     l1241:
  5858  00EC62  B037               	btfsc	___fladd@b^0,0,c
  5859  00EC64  D7FB               	goto	u2450
  5860  00EC66                     l1240:
  5861  00EC66  5044               	movf	___fladd@aexp^0,w,c
  5862  00EC68  B4D8               	btfsc	status,2,c
  5863  00EC6A  D020               	goto	l3453
  5864  00EC6C  0E01               	movlw	1
  5865  00EC6E  2637               	addwf	___fladd@b^0,f,c
  5866  00EC70  0E00               	movlw	0
  5867  00EC72  2238               	addwfc	(___fladd@b+1)^0,f,c
  5868  00EC74  2239               	addwfc	(___fladd@b+2)^0,f,c
  5869  00EC76  223A               	addwfc	(___fladd@b+3)^0,f,c
  5870  00EC78  A03A               	btfss	(___fladd@b+3)^0,0,c
  5871  00EC7A  D018               	goto	l3453
  5872  00EC7C  C037  F03F         	movff	___fladd@b,??___fladd
  5873  00EC80  C038  F040         	movff	___fladd@b+1,??___fladd+1
  5874  00EC84  C039  F041         	movff	___fladd@b+2,??___fladd+2
  5875  00EC88  C03A  F042         	movff	___fladd@b+3,??___fladd+3
  5876  00EC8C  3442               	rlcf	(??___fladd+3)^0,w,c
  5877  00EC8E  3242               	rrcf	(??___fladd+3)^0,f,c
  5878  00EC90  3241               	rrcf	(??___fladd+2)^0,f,c
  5879  00EC92  3240               	rrcf	(??___fladd+1)^0,f,c
  5880  00EC94  323F               	rrcf	??___fladd^0,f,c
  5881  00EC96  C03F  F037         	movff	??___fladd,___fladd@b
  5882  00EC9A  C040  F038         	movff	??___fladd+1,___fladd@b+1
  5883  00EC9E  C041  F039         	movff	??___fladd+2,___fladd@b+2
  5884  00ECA2  C042  F03A         	movff	??___fladd+3,___fladd@b+3
  5885  00ECA6  2845               	incf	___fladd@bexp^0,w,c
  5886  00ECA8  A4D8               	btfss	status,2,c
  5887  00ECAA  2A45               	incf	___fladd@bexp^0,f,c
  5888  00ECAC                     l3453:
  5889  00ECAC  2845               	incf	___fladd@bexp^0,w,c
  5890  00ECAE  B4D8               	btfsc	status,2,c
  5891  00ECB0  D003               	goto	u2510
  5892  00ECB2  5045               	movf	___fladd@bexp^0,w,c
  5893  00ECB4  A4D8               	btfss	status,2,c
  5894  00ECB6  D00D               	goto	l3461
  5895  00ECB8                     u2510:
  5896  00ECB8  0E00               	movlw	0
  5897  00ECBA  6E37               	movwf	___fladd@b^0,c
  5898  00ECBC  0E00               	movlw	0
  5899  00ECBE  6E38               	movwf	(___fladd@b+1)^0,c
  5900  00ECC0  0E00               	movlw	0
  5901  00ECC2  6E39               	movwf	(___fladd@b+2)^0,c
  5902  00ECC4  0E00               	movlw	0
  5903  00ECC6  6E3A               	movwf	(___fladd@b+3)^0,c
  5904  00ECC8  5045               	movf	___fladd@bexp^0,w,c
  5905  00ECCA  A4D8               	btfss	status,2,c
  5906  00ECCC  D002               	goto	l3461
  5907  00ECCE  0E00               	movlw	0
  5908  00ECD0  6E43               	movwf	___fladd@signs^0,c
  5909  00ECD2                     l3461:
  5910  00ECD2  A045               	btfss	___fladd@bexp^0,0,c
  5911  00ECD4  D002               	goto	l3465
  5912  00ECD6  8E39               	bsf	(___fladd@b+2)^0,7,c
  5913  00ECD8  D001               	goto	l3467
  5914  00ECDA                     l3465:
  5915  00ECDA  9E39               	bcf	(___fladd@b+2)^0,7,c
  5916  00ECDC                     l3467:
  5917  00ECDC  90D8               	bcf	status,0,c
  5918  00ECDE  3045               	rrcf	___fladd@bexp^0,w,c
  5919  00ECE0  6E3A               	movwf	(___fladd@b+3)^0,c
  5920  00ECE2  BE43               	btfsc	___fladd@signs^0,7,c
  5921  00ECE4  8E3A               	bsf	(___fladd@b+3)^0,7,c
  5922  00ECE6  C037  F037         	movff	___fladd@b,?___fladd
  5923  00ECEA  C038  F038         	movff	___fladd@b+1,?___fladd+1
  5924  00ECEE  C039  F039         	movff	___fladd@b+2,?___fladd+2
  5925  00ECF2  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
  5926  00ECF6  0012               	return		;funcret
  5927  00ECF8                     __end_of___fladd:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function ___flneg *****************
  5931 ;; Defined at:
  5932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  f1              4    0[COMRAM] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  4    0[COMRAM] unsigned char 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 3F/0
  5943 ;;		On exit  : 3F/0
  5944 ;;		Unchanged: 3F/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        4 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_printf
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text21
  5960  00D46C                     __ptext21:
  5961                           	callstack 0
  5962  00D46C                     ___flneg:
  5963                           	callstack 28
  5964                           
  5965                           ; BSR set to: 0
  5966                           
  5967                           ;incstack = 0
  5968  00D46C  5001               	movf	___flneg@f1^0,w,c
  5969  00D46E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5970  00D470  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5971  00D472  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5972  00D474  B4D8               	btfsc	status,2,c
  5973  00D476  D008               	goto	l3997
  5974                           
  5975                           ; BSR set to: 0
  5976  00D478  0E00               	movlw	0
  5977  00D47A  1A01               	xorwf	___flneg@f1^0,f,c
  5978  00D47C  0E00               	movlw	0
  5979  00D47E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5980  00D480  0E00               	movlw	0
  5981  00D482  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5982  00D484  0E80               	movlw	128
  5983  00D486  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5984  00D488                     l3997:
  5985                           
  5986                           ; BSR set to: 0
  5987  00D488  C001  F001         	movff	___flneg@f1,?___flneg
  5988  00D48C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5989  00D490  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5990  00D494  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5991                           
  5992                           ; BSR set to: 0
  5993  00D498  0012               	return		;funcret
  5994  00D49A                     __end_of___flneg:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___flge *****************
  5998 ;; Defined at:
  5999 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  ff1             4    0[COMRAM] unsigned char 
  6002 ;;  ff2             4    4[COMRAM] unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;		None               void
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:       12 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_printf
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text22
  6028  00DD4C                     __ptext22:
  6029                           	callstack 0
  6030  00DD4C                     ___flge:
  6031                           	callstack 28
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;incstack = 0
  6035  00DD4C  0E00               	movlw	0
  6036  00DD4E  1401               	andwf	___flge@ff1^0,w,c
  6037  00DD50  6E09               	movwf	??___flge^0,c
  6038  00DD52  0E00               	movlw	0
  6039  00DD54  1402               	andwf	(___flge@ff1+1)^0,w,c
  6040  00DD56  6E0A               	movwf	(??___flge+1)^0,c
  6041  00DD58  0E80               	movlw	128
  6042  00DD5A  1403               	andwf	(___flge@ff1+2)^0,w,c
  6043  00DD5C  6E0B               	movwf	(??___flge+2)^0,c
  6044  00DD5E  0E7F               	movlw	127
  6045  00DD60  1404               	andwf	(___flge@ff1+3)^0,w,c
  6046  00DD62  6E0C               	movwf	(??___flge+3)^0,c
  6047  00DD64  5009               	movf	??___flge^0,w,c
  6048  00DD66  100A               	iorwf	(??___flge+1)^0,w,c
  6049  00DD68  100B               	iorwf	(??___flge+2)^0,w,c
  6050  00DD6A  100C               	iorwf	(??___flge+3)^0,w,c
  6051  00DD6C  A4D8               	btfss	status,2,c
  6052  00DD6E  D008               	goto	l3975
  6053  00DD70  0E00               	movlw	0
  6054  00DD72  6E01               	movwf	___flge@ff1^0,c
  6055  00DD74  0E00               	movlw	0
  6056  00DD76  6E02               	movwf	(___flge@ff1+1)^0,c
  6057  00DD78  0E00               	movlw	0
  6058  00DD7A  6E03               	movwf	(___flge@ff1+2)^0,c
  6059  00DD7C  0E00               	movlw	0
  6060  00DD7E  6E04               	movwf	(___flge@ff1+3)^0,c
  6061  00DD80                     l3975:
  6062  00DD80  0E00               	movlw	0
  6063  00DD82  1405               	andwf	___flge@ff2^0,w,c
  6064  00DD84  6E09               	movwf	??___flge^0,c
  6065  00DD86  0E00               	movlw	0
  6066  00DD88  1406               	andwf	(___flge@ff2+1)^0,w,c
  6067  00DD8A  6E0A               	movwf	(??___flge+1)^0,c
  6068  00DD8C  0E80               	movlw	128
  6069  00DD8E  1407               	andwf	(___flge@ff2+2)^0,w,c
  6070  00DD90  6E0B               	movwf	(??___flge+2)^0,c
  6071  00DD92  0E7F               	movlw	127
  6072  00DD94  1408               	andwf	(___flge@ff2+3)^0,w,c
  6073  00DD96  6E0C               	movwf	(??___flge+3)^0,c
  6074  00DD98  5009               	movf	??___flge^0,w,c
  6075  00DD9A  100A               	iorwf	(??___flge+1)^0,w,c
  6076  00DD9C  100B               	iorwf	(??___flge+2)^0,w,c
  6077  00DD9E  100C               	iorwf	(??___flge+3)^0,w,c
  6078  00DDA0  A4D8               	btfss	status,2,c
  6079  00DDA2  D008               	goto	l3979
  6080  00DDA4  0E00               	movlw	0
  6081  00DDA6  6E05               	movwf	___flge@ff2^0,c
  6082  00DDA8  0E00               	movlw	0
  6083  00DDAA  6E06               	movwf	(___flge@ff2+1)^0,c
  6084  00DDAC  0E00               	movlw	0
  6085  00DDAE  6E07               	movwf	(___flge@ff2+2)^0,c
  6086  00DDB0  0E00               	movlw	0
  6087  00DDB2  6E08               	movwf	(___flge@ff2+3)^0,c
  6088  00DDB4                     l3979:
  6089  00DDB4  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6090  00DDB6  D009               	goto	l3983
  6091  00DDB8  6C01               	negf	___flge@ff1^0,c
  6092  00DDBA  1E02               	comf	(___flge@ff1+1)^0,f,c
  6093  00DDBC  B0D8               	btfsc	status,0,c
  6094  00DDBE  2A02               	incf	(___flge@ff1+1)^0,f,c
  6095  00DDC0  1E03               	comf	(___flge@ff1+2)^0,f,c
  6096  00DDC2  B0D8               	btfsc	status,0,c
  6097  00DDC4  2A03               	incf	(___flge@ff1+2)^0,f,c
  6098  00DDC6  0E80               	movlw	128
  6099  00DDC8  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6100  00DDCA                     l3983:
  6101  00DDCA  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6102  00DDCC  D009               	goto	l942
  6103  00DDCE  6C05               	negf	___flge@ff2^0,c
  6104  00DDD0  1E06               	comf	(___flge@ff2+1)^0,f,c
  6105  00DDD2  B0D8               	btfsc	status,0,c
  6106  00DDD4  2A06               	incf	(___flge@ff2+1)^0,f,c
  6107  00DDD6  1E07               	comf	(___flge@ff2+2)^0,f,c
  6108  00DDD8  B0D8               	btfsc	status,0,c
  6109  00DDDA  2A07               	incf	(___flge@ff2+2)^0,f,c
  6110  00DDDC  0E80               	movlw	128
  6111  00DDDE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6112  00DDE0                     l942:
  6113  00DDE0  0E00               	movlw	0
  6114  00DDE2  1A01               	xorwf	___flge@ff1^0,f,c
  6115  00DDE4  0E00               	movlw	0
  6116  00DDE6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6117  00DDE8  0E00               	movlw	0
  6118  00DDEA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6119  00DDEC  0E80               	movlw	128
  6120  00DDEE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6121  00DDF0  0E00               	movlw	0
  6122  00DDF2  1A05               	xorwf	___flge@ff2^0,f,c
  6123  00DDF4  0E00               	movlw	0
  6124  00DDF6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6125  00DDF8  0E00               	movlw	0
  6126  00DDFA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6127  00DDFC  0E80               	movlw	128
  6128  00DDFE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6129  00DE00  5005               	movf	___flge@ff2^0,w,c
  6130  00DE02  5C01               	subwf	___flge@ff1^0,w,c
  6131  00DE04  5006               	movf	(___flge@ff2+1)^0,w,c
  6132  00DE06  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6133  00DE08  5007               	movf	(___flge@ff2+2)^0,w,c
  6134  00DE0A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6135  00DE0C  5008               	movf	(___flge@ff2+3)^0,w,c
  6136  00DE0E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6137  00DE10  B0D8               	btfsc	status,0,c
  6138  00DE12  D002               	goto	l3989
  6139  00DE14  90D8               	bcf	status,0,c
  6140  00DE16  0012               	return	
  6141  00DE18                     l3989:
  6142  00DE18  80D8               	bsf	status,0,c
  6143  00DE1A  0012               	return		;funcret
  6144  00DE1C                     __end_of___flge:
  6145                           	callstack 0
  6146                           
  6147 ;; *************** function ___fleq *****************
  6148 ;; Defined at:
  6149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  ff1             4    0[COMRAM] unsigned char 
  6152 ;;  ff2             4    4[COMRAM] unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 3F/0
  6161 ;;		On exit  : 3F/0
  6162 ;;		Unchanged: 3F/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;Total ram usage:       12 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_printf
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text23
  6178  00DB3C                     __ptext23:
  6179                           	callstack 0
  6180  00DB3C                     ___fleq:
  6181                           	callstack 28
  6182                           
  6183                           ; BSR set to: 0
  6184                           
  6185                           ;incstack = 0
  6186  00DB3C  0E00               	movlw	0
  6187  00DB3E  1401               	andwf	___fleq@ff1^0,w,c
  6188  00DB40  6E09               	movwf	??___fleq^0,c
  6189  00DB42  0E00               	movlw	0
  6190  00DB44  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6191  00DB46  6E0A               	movwf	(??___fleq+1)^0,c
  6192  00DB48  0E80               	movlw	128
  6193  00DB4A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6194  00DB4C  6E0B               	movwf	(??___fleq+2)^0,c
  6195  00DB4E  0E7F               	movlw	127
  6196  00DB50  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6197  00DB52  6E0C               	movwf	(??___fleq+3)^0,c
  6198  00DB54  5009               	movf	??___fleq^0,w,c
  6199  00DB56  100A               	iorwf	(??___fleq+1)^0,w,c
  6200  00DB58  100B               	iorwf	(??___fleq+2)^0,w,c
  6201  00DB5A  100C               	iorwf	(??___fleq+3)^0,w,c
  6202  00DB5C  A4D8               	btfss	status,2,c
  6203  00DB5E  D008               	goto	l3959
  6204                           
  6205                           ; BSR set to: 0
  6206  00DB60  0E00               	movlw	0
  6207  00DB62  6E01               	movwf	___fleq@ff1^0,c
  6208  00DB64  0E00               	movlw	0
  6209  00DB66  6E02               	movwf	(___fleq@ff1+1)^0,c
  6210  00DB68  0E00               	movlw	0
  6211  00DB6A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6212  00DB6C  0E00               	movlw	0
  6213  00DB6E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6214  00DB70                     l3959:
  6215                           
  6216                           ; BSR set to: 0
  6217  00DB70  0E00               	movlw	0
  6218  00DB72  1405               	andwf	___fleq@ff2^0,w,c
  6219  00DB74  6E09               	movwf	??___fleq^0,c
  6220  00DB76  0E00               	movlw	0
  6221  00DB78  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6222  00DB7A  6E0A               	movwf	(??___fleq+1)^0,c
  6223  00DB7C  0E80               	movlw	128
  6224  00DB7E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6225  00DB80  6E0B               	movwf	(??___fleq+2)^0,c
  6226  00DB82  0E7F               	movlw	127
  6227  00DB84  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6228  00DB86  6E0C               	movwf	(??___fleq+3)^0,c
  6229  00DB88  5009               	movf	??___fleq^0,w,c
  6230  00DB8A  100A               	iorwf	(??___fleq+1)^0,w,c
  6231  00DB8C  100B               	iorwf	(??___fleq+2)^0,w,c
  6232  00DB8E  100C               	iorwf	(??___fleq+3)^0,w,c
  6233  00DB90  A4D8               	btfss	status,2,c
  6234  00DB92  D008               	goto	l3963
  6235                           
  6236                           ; BSR set to: 0
  6237  00DB94  0E00               	movlw	0
  6238  00DB96  6E05               	movwf	___fleq@ff2^0,c
  6239  00DB98  0E00               	movlw	0
  6240  00DB9A  6E06               	movwf	(___fleq@ff2+1)^0,c
  6241  00DB9C  0E00               	movlw	0
  6242  00DB9E  6E07               	movwf	(___fleq@ff2+2)^0,c
  6243  00DBA0  0E00               	movlw	0
  6244  00DBA2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6245  00DBA4                     l3963:
  6246                           
  6247                           ; BSR set to: 0
  6248  00DBA4  5005               	movf	___fleq@ff2^0,w,c
  6249  00DBA6  1801               	xorwf	___fleq@ff1^0,w,c
  6250  00DBA8  E10A               	bnz	u3220
  6251  00DBAA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6252  00DBAC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6253  00DBAE  E107               	bnz	u3220
  6254  00DBB0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6255  00DBB2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6256  00DBB4  E104               	bnz	u3220
  6257  00DBB6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6258  00DBB8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6259  00DBBA  B4D8               	btfsc	status,2,c
  6260  00DBBC  D002               	goto	l3967
  6261  00DBBE                     u3220:
  6262                           
  6263                           ; BSR set to: 0
  6264  00DBBE  90D8               	bcf	status,0,c
  6265  00DBC0  0012               	return	
  6266  00DBC2                     l3967:
  6267                           
  6268                           ; BSR set to: 0
  6269  00DBC2  80D8               	bsf	status,0,c
  6270                           
  6271                           ; BSR set to: 0
  6272  00DBC4  0012               	return		;funcret
  6273  00DBC6                     __end_of___fleq:
  6274                           	callstack 0
  6275                           
  6276 ;; *************** function _LoRaStart *****************
  6277 ;; Defined at:
  6278 ;;		line 12 in file "LoRa.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  freq            4   69[COMRAM] float 
  6281 ;;  syncWord        1   73[COMRAM] unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 3F/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6293 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;Total ram usage:        6 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    4
  6300 ;; This function calls:
  6301 ;;		_LoRaOptimalLoad
  6302 ;;		_LoRaReset
  6303 ;;		_LoRaSetFrequency
  6304 ;;		_setLoRaMode
  6305 ;; This function is called by:
  6306 ;;		_transmitValues
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text24
  6311  00D886                     __ptext24:
  6312                           	callstack 0
  6313  00D886                     _LoRaStart:
  6314                           	callstack 25
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;LoRa.c: 14: ANSELAbits.ANSA2=0;
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;incstack = 0
  6321  00D886  010F               	movlb	15	; () banked
  6322  00D888  9538               	bcf	56,2,b	;volatile
  6323                           
  6324                           ;LoRa.c: 19: TRISDbits.RD1=1;
  6325  00D88A  8295               	bsf	149,1,c	;volatile
  6326                           
  6327                           ;LoRa.c: 20: TRISDbits.RD4=0;
  6328  00D88C  9895               	bcf	149,4,c	;volatile
  6329                           
  6330                           ;LoRa.c: 21: TRISDbits.RD0=0;
  6331  00D88E  9095               	bcf	149,0,c	;volatile
  6332                           
  6333                           ;LoRa.c: 22: TRISDbits.RD3=0;
  6334  00D890  9695               	bcf	149,3,c	;volatile
  6335                           
  6336                           ;LoRa.c: 23: ANSELDbits.ANSD1=0;
  6337  00D892  933B               	bcf	59,1,b	;volatile
  6338                           
  6339                           ;LoRa.c: 24: ANSELDbits.ANSD4=0;
  6340  00D894  993B               	bcf	59,4,b	;volatile
  6341                           
  6342                           ;LoRa.c: 25: ANSELDbits.ANSD3=0;
  6343  00D896  973B               	bcf	59,3,b	;volatile
  6344                           
  6345                           ;LoRa.c: 26: ANSELDbits.ANSD0=0;
  6346  00D898  913B               	bcf	59,0,b	;volatile
  6347                           
  6348                           ;LoRa.c: 27: LATDbits.LATD3=1;
  6349  00D89A  868C               	bsf	140,3,c	;volatile
  6350                           
  6351                           ;LoRa.c: 30: SSP2CON1bits.CKP=0;
  6352  00D89C  986C               	bcf	108,4,c	;volatile
  6353                           
  6354                           ;LoRa.c: 31: SSP2STATbits.CKE=1;
  6355  00D89E  8C6D               	bsf	109,6,c	;volatile
  6356                           
  6357                           ;LoRa.c: 34: SSP2STATbits.SMP=1;
  6358  00D8A0  8E6D               	bsf	109,7,c	;volatile
  6359                           
  6360                           ; BSR set to: 15
  6361                           ;LoRa.c: 37: SSP2CON1bits.SSPM=0b0010;
  6362  00D8A2  506C               	movf	108,w,c	;volatile
  6363  00D8A4  0BF0               	andlw	-16
  6364  00D8A6  0902               	iorlw	2
  6365  00D8A8  6E6C               	movwf	108,c	;volatile
  6366                           
  6367                           ; BSR set to: 15
  6368                           ;LoRa.c: 40: SSP2CON1bits.SSPEN=1;
  6369  00D8AA  8A6C               	bsf	108,5,c	;volatile
  6370                           
  6371                           ; BSR set to: 15
  6372                           ;LoRa.c: 42: LoRaReset();
  6373  00D8AC  ECA0  F069         	call	_LoRaReset	;wreg free
  6374                           
  6375                           ;LoRa.c: 43: _delay((unsigned long)((10)*(64000000/4000.0)));
  6376  00D8B0  0ED0               	movlw	208
  6377  00D8B2  6E4B               	movwf	??_LoRaStart^0,c
  6378  00D8B4  0ECA               	movlw	202
  6379  00D8B6                     u4327:
  6380  00D8B6  2EE8               	decfsz	wreg,f,c
  6381  00D8B8  D7FE               	bra	u4327
  6382  00D8BA  2E4B               	decfsz	??_LoRaStart^0,f,c
  6383  00D8BC  D7FC               	bra	u4327
  6384                           
  6385                           ;LoRa.c: 44: setLoRaMode();
  6386  00D8BE  EC19  F069         	call	_setLoRaMode	;wreg free
  6387                           
  6388                           ;LoRa.c: 45: _delay((unsigned long)((10)*(64000000/4000.0)));
  6389  00D8C2  0ED0               	movlw	208
  6390  00D8C4  6E4B               	movwf	??_LoRaStart^0,c
  6391  00D8C6  0ECA               	movlw	202
  6392  00D8C8                     u4337:
  6393  00D8C8  2EE8               	decfsz	wreg,f,c
  6394  00D8CA  D7FE               	bra	u4337
  6395  00D8CC  2E4B               	decfsz	??_LoRaStart^0,f,c
  6396  00D8CE  D7FC               	bra	u4337
  6397                           
  6398                           ;LoRa.c: 46: LoRaOptimalLoad(syncWord);
  6399  00D8D0  504A               	movf	LoRaStart@syncWord^0,w,c
  6400  00D8D2  ECBA  F071         	call	_LoRaOptimalLoad
  6401                           
  6402                           ;LoRa.c: 47: LoRaSetFrequency(freq);
  6403  00D8D6  C046  F03B         	movff	LoRaStart@freq,LoRaSetFrequency@freqMHz
  6404  00D8DA  C047  F03C         	movff	LoRaStart@freq+1,LoRaSetFrequency@freqMHz+1
  6405  00D8DE  C048  F03D         	movff	LoRaStart@freq+2,LoRaSetFrequency@freqMHz+2
  6406  00D8E2  C049  F03E         	movff	LoRaStart@freq+3,LoRaSetFrequency@freqMHz+3
  6407  00D8E6  ECE1  F06C         	call	_LoRaSetFrequency	;wreg free
  6408  00D8EA  0012               	return		;funcret
  6409  00D8EC                     __end_of_LoRaStart:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _LoRaSetFrequency *****************
  6413 ;; Defined at:
  6414 ;;		line 218 in file "LoRa.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  freqMHz         4   58[COMRAM] float 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  intermediate    4   65[COMRAM] unsigned long 
  6419 ;;  lsb             1   64[COMRAM] unsigned char 
  6420 ;;  mid             1   63[COMRAM] unsigned char 
  6421 ;;  msb             1   62[COMRAM] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/F
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;Total ram usage:       11 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    1
  6438 ;; This function calls:
  6439 ;;		_SPI2WriteByte
  6440 ;;		___flmul
  6441 ;;		___fltol
  6442 ;; This function is called by:
  6443 ;;		_LoRaStart
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text25
  6448  00D9C2                     __ptext25:
  6449                           	callstack 0
  6450  00D9C2                     _LoRaSetFrequency:
  6451                           	callstack 27
  6452                           
  6453                           ;LoRa.c: 219: uint32_t intermediate = (freqMHz*16384);
  6454                           
  6455                           ;incstack = 0
  6456  00D9C2  0E00               	movlw	0
  6457  00D9C4  6E13               	movwf	___flmul@a^0,c
  6458  00D9C6  0E00               	movlw	0
  6459  00D9C8  6E14               	movwf	(___flmul@a+1)^0,c
  6460  00D9CA  0E80               	movlw	128
  6461  00D9CC  6E15               	movwf	(___flmul@a+2)^0,c
  6462  00D9CE  0E46               	movlw	70
  6463  00D9D0  6E16               	movwf	(___flmul@a+3)^0,c
  6464  00D9D2  C03B  F00F         	movff	LoRaSetFrequency@freqMHz,___flmul@b
  6465  00D9D6  C03C  F010         	movff	LoRaSetFrequency@freqMHz+1,___flmul@b+1
  6466  00D9DA  C03D  F011         	movff	LoRaSetFrequency@freqMHz+2,___flmul@b+2
  6467  00D9DE  C03E  F012         	movff	LoRaSetFrequency@freqMHz+3,___flmul@b+3
  6468  00D9E2  EC7C  F076         	call	___flmul	;wreg free
  6469  00D9E6  C00F  F031         	movff	?___flmul,___fltol@f1
  6470  00D9EA  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  6471  00D9EE  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  6472  00D9F2  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  6473  00D9F6  ECE3  F06D         	call	___fltol	;wreg free
  6474  00D9FA  C031  F042         	movff	?___fltol,LoRaSetFrequency@intermediate
  6475  00D9FE  C032  F043         	movff	?___fltol+1,LoRaSetFrequency@intermediate+1
  6476  00DA02  C033  F044         	movff	?___fltol+2,LoRaSetFrequency@intermediate+2
  6477  00DA06  C034  F045         	movff	?___fltol+3,LoRaSetFrequency@intermediate+3
  6478                           
  6479                           ;LoRa.c: 221: uint8_t msb = (intermediate>>16) & 0xFF;
  6480  00DA0A  C044  F03F         	movff	LoRaSetFrequency@intermediate+2,LoRaSetFrequency@msb
  6481                           
  6482                           ;LoRa.c: 222: uint8_t mid = (intermediate>>8)& 0xFF;
  6483  00DA0E  C043  F040         	movff	LoRaSetFrequency@intermediate+1,LoRaSetFrequency@mid
  6484                           
  6485                           ;LoRa.c: 223: uint8_t lsb = intermediate & 0xFF;
  6486  00DA12  C042  F041         	movff	LoRaSetFrequency@intermediate,LoRaSetFrequency@lsb
  6487                           
  6488                           ;LoRa.c: 225: SPI2WriteByte(0x06,msb);
  6489  00DA16  C03F  F001         	movff	LoRaSetFrequency@msb,SPI2WriteByte@data
  6490  00DA1A  0E06               	movlw	6
  6491  00DA1C  ECA1  F06A         	call	_SPI2WriteByte
  6492                           
  6493                           ;LoRa.c: 226: SPI2WriteByte(0x07,mid);
  6494  00DA20  C040  F001         	movff	LoRaSetFrequency@mid,SPI2WriteByte@data
  6495  00DA24  0E07               	movlw	7
  6496  00DA26  ECA1  F06A         	call	_SPI2WriteByte
  6497                           
  6498                           ;LoRa.c: 227: SPI2WriteByte(0x08,lsb);
  6499  00DA2A  C041  F001         	movff	LoRaSetFrequency@lsb,SPI2WriteByte@data
  6500  00DA2E  0E08               	movlw	8
  6501  00DA30  ECA1  F06A         	call	_SPI2WriteByte
  6502  00DA34  0012               	return		;funcret
  6503  00DA36                     __end_of_LoRaSetFrequency:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function ___fltol *****************
  6507 ;; Defined at:
  6508 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  f1              4   48[COMRAM] void 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  exp1            1   57[COMRAM] unsigned char 
  6513 ;;  sign1           1   56[COMRAM] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  4   48[COMRAM] long 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:       10 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_LoRaSetFrequency
  6533 ;;		_printf
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text26
  6538  00DBC6                     __ptext26:
  6539                           	callstack 0
  6540  00DBC6                     ___fltol:
  6541                           	callstack 28
  6542                           
  6543                           ;incstack = 0
  6544  00DBC6  3433               	rlcf	(___fltol@f1+2)^0,w,c
  6545  00DBC8  3434               	rlcf	(___fltol@f1+3)^0,w,c
  6546  00DBCA  6E3A               	movwf	___fltol@exp1^0,c
  6547  00DBCC  503A               	movf	___fltol@exp1^0,w,c
  6548  00DBCE  A4D8               	btfss	status,2,c
  6549  00DBD0  D009               	goto	l4007
  6550  00DBD2                     u3290:
  6551  00DBD2  0E00               	movlw	0
  6552  00DBD4  6E31               	movwf	?___fltol^0,c
  6553  00DBD6  0E00               	movlw	0
  6554  00DBD8  6E32               	movwf	(?___fltol+1)^0,c
  6555  00DBDA  0E00               	movlw	0
  6556  00DBDC  6E33               	movwf	(?___fltol+2)^0,c
  6557  00DBDE  0E00               	movlw	0
  6558  00DBE0  6E34               	movwf	(?___fltol+3)^0,c
  6559  00DBE2  0012               	return	
  6560  00DBE4                     l4007:
  6561  00DBE4  C031  F035         	movff	___fltol@f1,??___fltol
  6562  00DBE8  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  6563  00DBEC  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  6564  00DBF0  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  6565  00DBF4  0E20               	movlw	32
  6566  00DBF6  D005               	goto	u3300
  6567  00DBF8                     u3305:
  6568  00DBF8  90D8               	bcf	status,0,c
  6569  00DBFA  3238               	rrcf	(??___fltol+3)^0,f,c
  6570  00DBFC  3237               	rrcf	(??___fltol+2)^0,f,c
  6571  00DBFE  3236               	rrcf	(??___fltol+1)^0,f,c
  6572  00DC00  3235               	rrcf	??___fltol^0,f,c
  6573  00DC02                     u3300:
  6574  00DC02  2EE8               	decfsz	wreg,f,c
  6575  00DC04  D7F9               	goto	u3305
  6576  00DC06  5035               	movf	??___fltol^0,w,c
  6577  00DC08  6E39               	movwf	___fltol@sign1^0,c
  6578  00DC0A  8E33               	bsf	(___fltol@f1+2)^0,7,c
  6579  00DC0C  0EFF               	movlw	255
  6580  00DC0E  1631               	andwf	___fltol@f1^0,f,c
  6581  00DC10  0EFF               	movlw	255
  6582  00DC12  1632               	andwf	(___fltol@f1+1)^0,f,c
  6583  00DC14  0EFF               	movlw	255
  6584  00DC16  1633               	andwf	(___fltol@f1+2)^0,f,c
  6585  00DC18  0E00               	movlw	0
  6586  00DC1A  1634               	andwf	(___fltol@f1+3)^0,f,c
  6587  00DC1C  0E96               	movlw	150
  6588  00DC1E  5E3A               	subwf	___fltol@exp1^0,f,c
  6589  00DC20  AE3A               	btfss	___fltol@exp1^0,7,c
  6590  00DC22  D00D               	goto	l4027
  6591  00DC24  503A               	movf	___fltol@exp1^0,w,c
  6592  00DC26  0A80               	xorlw	128
  6593  00DC28  0F97               	addlw	151
  6594  00DC2A  A0D8               	btfss	status,0,c
  6595  00DC2C  D7D2               	goto	u3290
  6596  00DC2E                     l4023:
  6597  00DC2E  90D8               	bcf	status,0,c
  6598  00DC30  3234               	rrcf	(___fltol@f1+3)^0,f,c
  6599  00DC32  3233               	rrcf	(___fltol@f1+2)^0,f,c
  6600  00DC34  3232               	rrcf	(___fltol@f1+1)^0,f,c
  6601  00DC36  3231               	rrcf	___fltol@f1^0,f,c
  6602  00DC38  3E3A               	incfsz	___fltol@exp1^0,f,c
  6603  00DC3A  D7F9               	goto	l4023
  6604  00DC3C  D00D               	goto	u3340
  6605  00DC3E                     l4027:
  6606  00DC3E  0E1F               	movlw	31
  6607  00DC40  643A               	cpfsgt	___fltol@exp1^0,c
  6608  00DC42  D007               	goto	l4035
  6609  00DC44  D7C6               	goto	u3290
  6610  00DC46                     l4033:
  6611  00DC46  90D8               	bcf	status,0,c
  6612  00DC48  3631               	rlcf	___fltol@f1^0,f,c
  6613  00DC4A  3632               	rlcf	(___fltol@f1+1)^0,f,c
  6614  00DC4C  3633               	rlcf	(___fltol@f1+2)^0,f,c
  6615  00DC4E  3634               	rlcf	(___fltol@f1+3)^0,f,c
  6616  00DC50  063A               	decf	___fltol@exp1^0,f,c
  6617  00DC52                     l4035:
  6618  00DC52  503A               	movf	___fltol@exp1^0,w,c
  6619  00DC54  A4D8               	btfss	status,2,c
  6620  00DC56  D7F7               	goto	l4033
  6621  00DC58                     u3340:
  6622  00DC58  5039               	movf	___fltol@sign1^0,w,c
  6623  00DC5A  B4D8               	btfsc	status,2,c
  6624  00DC5C  D008               	goto	l4041
  6625  00DC5E  1E34               	comf	(___fltol@f1+3)^0,f,c
  6626  00DC60  1E33               	comf	(___fltol@f1+2)^0,f,c
  6627  00DC62  1E32               	comf	(___fltol@f1+1)^0,f,c
  6628  00DC64  6C31               	negf	___fltol@f1^0,c
  6629  00DC66  0E00               	movlw	0
  6630  00DC68  2232               	addwfc	(___fltol@f1+1)^0,f,c
  6631  00DC6A  2233               	addwfc	(___fltol@f1+2)^0,f,c
  6632  00DC6C  2234               	addwfc	(___fltol@f1+3)^0,f,c
  6633  00DC6E                     l4041:
  6634  00DC6E  C031  F031         	movff	___fltol@f1,?___fltol
  6635  00DC72  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  6636  00DC76  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  6637  00DC7A  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  6638  00DC7E  0012               	return		;funcret
  6639  00DC80                     __end_of___fltol:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function ___flmul *****************
  6643 ;; Defined at:
  6644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  b               4   14[COMRAM] long 
  6647 ;;  a               4   18[COMRAM] long 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  prod            4   33[COMRAM] struct .
  6650 ;;  grs             4   28[COMRAM] unsigned long 
  6651 ;;  temp            2   37[COMRAM] struct .
  6652 ;;  bexp            1   32[COMRAM] unsigned char 
  6653 ;;  aexp            1   27[COMRAM] unsigned char 
  6654 ;;  sign            1   26[COMRAM] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  4   14[COMRAM] unsigned char 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0, prodl, prodh
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;Total ram usage:       25 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_LoRaSetFrequency
  6674 ;;		_fround
  6675 ;;		_scale
  6676 ;;		_printf
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text27
  6681  00ECF8                     __ptext27:
  6682                           	callstack 0
  6683  00ECF8                     ___flmul:
  6684                           	callstack 27
  6685                           
  6686                           ;incstack = 0
  6687  00ECF8  5012               	movf	(___flmul@b+3)^0,w,c
  6688  00ECFA  0B80               	andlw	128
  6689  00ECFC  6E1B               	movwf	___flmul@sign^0,c
  6690  00ECFE  5012               	movf	(___flmul@b+3)^0,w,c
  6691  00ED00  2412               	addwf	(___flmul@b+3)^0,w,c
  6692  00ED02  6E21               	movwf	___flmul@bexp^0,c
  6693  00ED04  BE11               	btfsc	(___flmul@b+2)^0,7,c
  6694  00ED06  8021               	bsf	___flmul@bexp^0,0,c
  6695  00ED08  5021               	movf	___flmul@bexp^0,w,c
  6696  00ED0A  B4D8               	btfsc	status,2,c
  6697  00ED0C  D00D               	goto	l3491
  6698  00ED0E  2821               	incf	___flmul@bexp^0,w,c
  6699  00ED10  A4D8               	btfss	status,2,c
  6700  00ED12  D008               	goto	l3489
  6701  00ED14  0E00               	movlw	0
  6702  00ED16  6E0F               	movwf	___flmul@b^0,c
  6703  00ED18  0E00               	movlw	0
  6704  00ED1A  6E10               	movwf	(___flmul@b+1)^0,c
  6705  00ED1C  0E00               	movlw	0
  6706  00ED1E  6E11               	movwf	(___flmul@b+2)^0,c
  6707  00ED20  0E00               	movlw	0
  6708  00ED22  6E12               	movwf	(___flmul@b+3)^0,c
  6709  00ED24                     l3489:
  6710  00ED24  8E11               	bsf	(___flmul@b+2)^0,7,c
  6711  00ED26  D008               	goto	l3493
  6712  00ED28                     l3491:
  6713  00ED28  0E00               	movlw	0
  6714  00ED2A  6E0F               	movwf	___flmul@b^0,c
  6715  00ED2C  0E00               	movlw	0
  6716  00ED2E  6E10               	movwf	(___flmul@b+1)^0,c
  6717  00ED30  0E00               	movlw	0
  6718  00ED32  6E11               	movwf	(___flmul@b+2)^0,c
  6719  00ED34  0E00               	movlw	0
  6720  00ED36  6E12               	movwf	(___flmul@b+3)^0,c
  6721  00ED38                     l3493:
  6722  00ED38  5016               	movf	(___flmul@a+3)^0,w,c
  6723  00ED3A  0B80               	andlw	128
  6724  00ED3C  1A1B               	xorwf	___flmul@sign^0,f,c
  6725  00ED3E  5016               	movf	(___flmul@a+3)^0,w,c
  6726  00ED40  2416               	addwf	(___flmul@a+3)^0,w,c
  6727  00ED42  6E1C               	movwf	___flmul@aexp^0,c
  6728  00ED44  BE15               	btfsc	(___flmul@a+2)^0,7,c
  6729  00ED46  801C               	bsf	___flmul@aexp^0,0,c
  6730  00ED48  501C               	movf	___flmul@aexp^0,w,c
  6731  00ED4A  B4D8               	btfsc	status,2,c
  6732  00ED4C  D00D               	goto	l3509
  6733  00ED4E  281C               	incf	___flmul@aexp^0,w,c
  6734  00ED50  A4D8               	btfss	status,2,c
  6735  00ED52  D008               	goto	l3507
  6736  00ED54  0E00               	movlw	0
  6737  00ED56  6E13               	movwf	___flmul@a^0,c
  6738  00ED58  0E00               	movlw	0
  6739  00ED5A  6E14               	movwf	(___flmul@a+1)^0,c
  6740  00ED5C  0E00               	movlw	0
  6741  00ED5E  6E15               	movwf	(___flmul@a+2)^0,c
  6742  00ED60  0E00               	movlw	0
  6743  00ED62  6E16               	movwf	(___flmul@a+3)^0,c
  6744  00ED64                     l3507:
  6745  00ED64  8E15               	bsf	(___flmul@a+2)^0,7,c
  6746  00ED66  D008               	goto	l1300
  6747  00ED68                     l3509:
  6748  00ED68  0E00               	movlw	0
  6749  00ED6A  6E13               	movwf	___flmul@a^0,c
  6750  00ED6C  0E00               	movlw	0
  6751  00ED6E  6E14               	movwf	(___flmul@a+1)^0,c
  6752  00ED70  0E00               	movlw	0
  6753  00ED72  6E15               	movwf	(___flmul@a+2)^0,c
  6754  00ED74  0E00               	movlw	0
  6755  00ED76  6E16               	movwf	(___flmul@a+3)^0,c
  6756  00ED78                     l1300:
  6757  00ED78  501C               	movf	___flmul@aexp^0,w,c
  6758  00ED7A  B4D8               	btfsc	status,2,c
  6759  00ED7C  D003               	goto	u2620
  6760  00ED7E  5021               	movf	___flmul@bexp^0,w,c
  6761  00ED80  A4D8               	btfss	status,2,c
  6762  00ED82  D009               	goto	l3517
  6763  00ED84                     u2620:
  6764  00ED84  0E00               	movlw	0
  6765  00ED86  6E0F               	movwf	?___flmul^0,c
  6766  00ED88  0E00               	movlw	0
  6767  00ED8A  6E10               	movwf	(?___flmul+1)^0,c
  6768  00ED8C  0E00               	movlw	0
  6769  00ED8E  6E11               	movwf	(?___flmul+2)^0,c
  6770  00ED90  0E00               	movlw	0
  6771  00ED92  6E12               	movwf	(?___flmul+3)^0,c
  6772  00ED94  0012               	return	
  6773  00ED96                     l3517:
  6774  00ED96  5015               	movf	(___flmul@a+2)^0,w,c
  6775  00ED98  020F               	mulwf	___flmul@b^0,c
  6776  00ED9A  CFF3 F026          	movff	prodl,___flmul@temp
  6777  00ED9E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6778  00EDA2  5026               	movf	___flmul@temp^0,w,c
  6779  00EDA4  6E1D               	movwf	___flmul@grs^0,c
  6780  00EDA6  6A1E               	clrf	(___flmul@grs+1)^0,c
  6781  00EDA8  6A1F               	clrf	(___flmul@grs+2)^0,c
  6782  00EDAA  6A20               	clrf	(___flmul@grs+3)^0,c
  6783  00EDAC  5027               	movf	(___flmul@temp+1)^0,w,c
  6784  00EDAE  6E22               	movwf	___flmul@prod^0,c
  6785  00EDB0  6A23               	clrf	(___flmul@prod+1)^0,c
  6786  00EDB2  6A24               	clrf	(___flmul@prod+2)^0,c
  6787  00EDB4  6A25               	clrf	(___flmul@prod+3)^0,c
  6788  00EDB6  5014               	movf	(___flmul@a+1)^0,w,c
  6789  00EDB8  0210               	mulwf	(___flmul@b+1)^0,c
  6790  00EDBA  CFF3 F026          	movff	prodl,___flmul@temp
  6791  00EDBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6792  00EDC2  5026               	movf	___flmul@temp^0,w,c
  6793  00EDC4  261D               	addwf	___flmul@grs^0,f,c
  6794  00EDC6  0E00               	movlw	0
  6795  00EDC8  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6796  00EDCA  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6797  00EDCC  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6798  00EDCE  5027               	movf	(___flmul@temp+1)^0,w,c
  6799  00EDD0  2622               	addwf	___flmul@prod^0,f,c
  6800  00EDD2  0E00               	movlw	0
  6801  00EDD4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6802  00EDD6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6803  00EDD8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6804  00EDDA  5013               	movf	___flmul@a^0,w,c
  6805  00EDDC  0211               	mulwf	(___flmul@b+2)^0,c
  6806  00EDDE  CFF3 F026          	movff	prodl,___flmul@temp
  6807  00EDE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6808  00EDE6  5026               	movf	___flmul@temp^0,w,c
  6809  00EDE8  261D               	addwf	___flmul@grs^0,f,c
  6810  00EDEA  0E00               	movlw	0
  6811  00EDEC  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6812  00EDEE  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6813  00EDF0  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6814  00EDF2  5027               	movf	(___flmul@temp+1)^0,w,c
  6815  00EDF4  2622               	addwf	___flmul@prod^0,f,c
  6816  00EDF6  0E00               	movlw	0
  6817  00EDF8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6818  00EDFA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6819  00EDFC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6820  00EDFE  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6821  00EE02  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6822  00EE06  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6823  00EE0A  6A1D               	clrf	___flmul@grs^0,c
  6824  00EE0C  5013               	movf	___flmul@a^0,w,c
  6825  00EE0E  0210               	mulwf	(___flmul@b+1)^0,c
  6826  00EE10  CFF3 F026          	movff	prodl,___flmul@temp
  6827  00EE14  CFF4 F027          	movff	prodh,___flmul@temp+1
  6828  00EE18  5026               	movf	___flmul@temp^0,w,c
  6829  00EE1A  261D               	addwf	___flmul@grs^0,f,c
  6830  00EE1C  5027               	movf	(___flmul@temp+1)^0,w,c
  6831  00EE1E  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6832  00EE20  0E00               	movlw	0
  6833  00EE22  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6834  00EE24  0E00               	movlw	0
  6835  00EE26  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6836  00EE28  5014               	movf	(___flmul@a+1)^0,w,c
  6837  00EE2A  020F               	mulwf	___flmul@b^0,c
  6838  00EE2C  CFF3 F026          	movff	prodl,___flmul@temp
  6839  00EE30  CFF4 F027          	movff	prodh,___flmul@temp+1
  6840  00EE34  5026               	movf	___flmul@temp^0,w,c
  6841  00EE36  261D               	addwf	___flmul@grs^0,f,c
  6842  00EE38  5027               	movf	(___flmul@temp+1)^0,w,c
  6843  00EE3A  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6844  00EE3C  0E00               	movlw	0
  6845  00EE3E  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6846  00EE40  0E00               	movlw	0
  6847  00EE42  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6848  00EE44  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6849  00EE48  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6850  00EE4C  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6851  00EE50  6A1D               	clrf	___flmul@grs^0,c
  6852  00EE52  5013               	movf	___flmul@a^0,w,c
  6853  00EE54  020F               	mulwf	___flmul@b^0,c
  6854  00EE56  CFF3 F026          	movff	prodl,___flmul@temp
  6855  00EE5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6856  00EE5E  5026               	movf	___flmul@temp^0,w,c
  6857  00EE60  261D               	addwf	___flmul@grs^0,f,c
  6858  00EE62  5027               	movf	(___flmul@temp+1)^0,w,c
  6859  00EE64  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6860  00EE66  0E00               	movlw	0
  6861  00EE68  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6862  00EE6A  0E00               	movlw	0
  6863  00EE6C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6864  00EE6E  5015               	movf	(___flmul@a+2)^0,w,c
  6865  00EE70  0210               	mulwf	(___flmul@b+1)^0,c
  6866  00EE72  CFF3 F026          	movff	prodl,___flmul@temp
  6867  00EE76  CFF4 F027          	movff	prodh,___flmul@temp+1
  6868  00EE7A  5026               	movf	___flmul@temp^0,w,c
  6869  00EE7C  2622               	addwf	___flmul@prod^0,f,c
  6870  00EE7E  5027               	movf	(___flmul@temp+1)^0,w,c
  6871  00EE80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6872  00EE82  0E00               	movlw	0
  6873  00EE84  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6874  00EE86  0E00               	movlw	0
  6875  00EE88  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6876  00EE8A  5014               	movf	(___flmul@a+1)^0,w,c
  6877  00EE8C  0211               	mulwf	(___flmul@b+2)^0,c
  6878  00EE8E  CFF3 F026          	movff	prodl,___flmul@temp
  6879  00EE92  CFF4 F027          	movff	prodh,___flmul@temp+1
  6880  00EE96  5026               	movf	___flmul@temp^0,w,c
  6881  00EE98  2622               	addwf	___flmul@prod^0,f,c
  6882  00EE9A  5027               	movf	(___flmul@temp+1)^0,w,c
  6883  00EE9C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6884  00EE9E  0E00               	movlw	0
  6885  00EEA0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6886  00EEA2  0E00               	movlw	0
  6887  00EEA4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6888  00EEA6  5015               	movf	(___flmul@a+2)^0,w,c
  6889  00EEA8  0211               	mulwf	(___flmul@b+2)^0,c
  6890  00EEAA  CFF3 F026          	movff	prodl,___flmul@temp
  6891  00EEAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6892  00EEB2  5026               	movf	___flmul@temp^0,w,c
  6893  00EEB4  6E17               	movwf	??___flmul^0,c
  6894  00EEB6  5027               	movf	(___flmul@temp+1)^0,w,c
  6895  00EEB8  6E18               	movwf	(??___flmul+1)^0,c
  6896  00EEBA  6A19               	clrf	(??___flmul+2)^0,c
  6897  00EEBC  6A1A               	clrf	(??___flmul+3)^0,c
  6898  00EEBE  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6899  00EEC2  C018  F019         	movff	??___flmul+1,??___flmul+2
  6900  00EEC6  C017  F018         	movff	??___flmul,??___flmul+1
  6901  00EECA  6A17               	clrf	??___flmul^0,c
  6902  00EECC  5017               	movf	??___flmul^0,w,c
  6903  00EECE  2622               	addwf	___flmul@prod^0,f,c
  6904  00EED0  5018               	movf	(??___flmul+1)^0,w,c
  6905  00EED2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6906  00EED4  5019               	movf	(??___flmul+2)^0,w,c
  6907  00EED6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6908  00EED8  501A               	movf	(??___flmul+3)^0,w,c
  6909  00EEDA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6910  00EEDC  5020               	movf	(___flmul@grs+3)^0,w,c
  6911  00EEDE  2622               	addwf	___flmul@prod^0,f,c
  6912  00EEE0  0E00               	movlw	0
  6913  00EEE2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6914  00EEE4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6915  00EEE6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6916  00EEE8  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6917  00EEEC  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6918  00EEF0  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6919  00EEF4  6A1D               	clrf	___flmul@grs^0,c
  6920  00EEF6  501C               	movf	___flmul@aexp^0,w,c
  6921  00EEF8  C021  F017         	movff	___flmul@bexp,??___flmul
  6922  00EEFC  6A18               	clrf	(??___flmul+1)^0,c
  6923  00EEFE  2617               	addwf	??___flmul^0,f,c
  6924  00EF00  0E00               	movlw	0
  6925  00EF02  2218               	addwfc	(??___flmul+1)^0,f,c
  6926  00EF04  0E82               	movlw	130
  6927  00EF06  2417               	addwf	??___flmul^0,w,c
  6928  00EF08  6E26               	movwf	___flmul@temp^0,c
  6929  00EF0A  0EFF               	movlw	255
  6930  00EF0C  2018               	addwfc	(??___flmul+1)^0,w,c
  6931  00EF0E  6E27               	movwf	(___flmul@temp+1)^0,c
  6932  00EF10  D00F               	goto	l3565
  6933  00EF12                     l3559:
  6934  00EF12  90D8               	bcf	status,0,c
  6935  00EF14  3622               	rlcf	___flmul@prod^0,f,c
  6936  00EF16  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6937  00EF18  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6938  00EF1A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6939  00EF1C  BE20               	btfsc	(___flmul@grs+3)^0,7,c
  6940  00EF1E  8022               	bsf	___flmul@prod^0,0,c
  6941  00EF20  90D8               	bcf	status,0,c
  6942  00EF22  361D               	rlcf	___flmul@grs^0,f,c
  6943  00EF24  361E               	rlcf	(___flmul@grs+1)^0,f,c
  6944  00EF26  361F               	rlcf	(___flmul@grs+2)^0,f,c
  6945  00EF28  3620               	rlcf	(___flmul@grs+3)^0,f,c
  6946  00EF2A  0626               	decf	___flmul@temp^0,f,c
  6947  00EF2C  A0D8               	btfss	status,0,c
  6948  00EF2E  0627               	decf	(___flmul@temp+1)^0,f,c
  6949  00EF30                     l3565:
  6950  00EF30  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6951  00EF32  D7EF               	goto	l3559
  6952  00EF34  0E00               	movlw	0
  6953  00EF36  6E1C               	movwf	___flmul@aexp^0,c
  6954  00EF38  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6955  00EF3A  D017               	goto	l1309
  6956  00EF3C  0EFF               	movlw	255
  6957  00EF3E  141D               	andwf	___flmul@grs^0,w,c
  6958  00EF40  6E17               	movwf	??___flmul^0,c
  6959  00EF42  0EFF               	movlw	255
  6960  00EF44  141E               	andwf	(___flmul@grs+1)^0,w,c
  6961  00EF46  6E18               	movwf	(??___flmul+1)^0,c
  6962  00EF48  0EFF               	movlw	255
  6963  00EF4A  141F               	andwf	(___flmul@grs+2)^0,w,c
  6964  00EF4C  6E19               	movwf	(??___flmul+2)^0,c
  6965  00EF4E  0E7F               	movlw	127
  6966  00EF50  1420               	andwf	(___flmul@grs+3)^0,w,c
  6967  00EF52  6E1A               	movwf	(??___flmul+3)^0,c
  6968  00EF54  5017               	movf	??___flmul^0,w,c
  6969  00EF56  1018               	iorwf	(??___flmul+1)^0,w,c
  6970  00EF58  1019               	iorwf	(??___flmul+2)^0,w,c
  6971  00EF5A  101A               	iorwf	(??___flmul+3)^0,w,c
  6972  00EF5C  B4D8               	btfsc	status,2,c
  6973  00EF5E  D003               	goto	l1310
  6974  00EF60                     u2660:
  6975  00EF60  0E01               	movlw	1
  6976  00EF62  6E1C               	movwf	___flmul@aexp^0,c
  6977  00EF64  D002               	goto	l1309
  6978  00EF66                     l1310:
  6979  00EF66  B022               	btfsc	___flmul@prod^0,0,c
  6980  00EF68  D7FB               	goto	u2660
  6981  00EF6A                     l1309:
  6982  00EF6A  501C               	movf	___flmul@aexp^0,w,c
  6983  00EF6C  B4D8               	btfsc	status,2,c
  6984  00EF6E  D01F               	goto	l3585
  6985  00EF70  0E01               	movlw	1
  6986  00EF72  2622               	addwf	___flmul@prod^0,f,c
  6987  00EF74  0E00               	movlw	0
  6988  00EF76  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6989  00EF78  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6990  00EF7A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6991  00EF7C  A025               	btfss	(___flmul@prod+3)^0,0,c
  6992  00EF7E  D017               	goto	l3585
  6993  00EF80  C022  F017         	movff	___flmul@prod,??___flmul
  6994  00EF84  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6995  00EF88  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6996  00EF8C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6997  00EF90  341A               	rlcf	(??___flmul+3)^0,w,c
  6998  00EF92  321A               	rrcf	(??___flmul+3)^0,f,c
  6999  00EF94  3219               	rrcf	(??___flmul+2)^0,f,c
  7000  00EF96  3218               	rrcf	(??___flmul+1)^0,f,c
  7001  00EF98  3217               	rrcf	??___flmul^0,f,c
  7002  00EF9A  C017  F022         	movff	??___flmul,___flmul@prod
  7003  00EF9E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7004  00EFA2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7005  00EFA6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7006  00EFAA  4A26               	infsnz	___flmul@temp^0,f,c
  7007  00EFAC  2A27               	incf	(___flmul@temp+1)^0,f,c
  7008  00EFAE                     l3585:
  7009  00EFAE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7010  00EFB0  D00D               	goto	l3589
  7011  00EFB2  5027               	movf	(___flmul@temp+1)^0,w,c
  7012  00EFB4  E103               	bnz	u2700
  7013  00EFB6  2826               	incf	___flmul@temp^0,w,c
  7014  00EFB8  A0D8               	btfss	status,0,c
  7015  00EFBA  D008               	goto	l3589
  7016  00EFBC                     u2700:
  7017  00EFBC  0E00               	movlw	0
  7018  00EFBE  6E22               	movwf	___flmul@prod^0,c
  7019  00EFC0  0E00               	movlw	0
  7020  00EFC2  6E23               	movwf	(___flmul@prod+1)^0,c
  7021  00EFC4  0E80               	movlw	128
  7022  00EFC6  6E24               	movwf	(___flmul@prod+2)^0,c
  7023  00EFC8  0E7F               	movlw	127
  7024  00EFCA  D020               	goto	L5
  7025  00EFCC                     l3589:
  7026  00EFCC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7027  00EFCE  D005               	goto	u2710
  7028  00EFD0  5027               	movf	(___flmul@temp+1)^0,w,c
  7029  00EFD2  E10E               	bnz	l1317
  7030  00EFD4  0426               	decf	___flmul@temp^0,w,c
  7031  00EFD6  B0D8               	btfsc	status,0,c
  7032  00EFD8  D00B               	goto	l1317
  7033  00EFDA                     u2710:
  7034  00EFDA  0E00               	movlw	0
  7035  00EFDC  6E22               	movwf	___flmul@prod^0,c
  7036  00EFDE  0E00               	movlw	0
  7037  00EFE0  6E23               	movwf	(___flmul@prod+1)^0,c
  7038  00EFE2  0E00               	movlw	0
  7039  00EFE4  6E24               	movwf	(___flmul@prod+2)^0,c
  7040  00EFE6  0E00               	movlw	0
  7041  00EFE8  6E25               	movwf	(___flmul@prod+3)^0,c
  7042  00EFEA  0E00               	movlw	0
  7043  00EFEC  6E1B               	movwf	___flmul@sign^0,c
  7044  00EFEE  D00F               	goto	l3601
  7045  00EFF0                     l1317:
  7046  00EFF0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7047  00EFF4  0EFF               	movlw	255
  7048  00EFF6  1622               	andwf	___flmul@prod^0,f,c
  7049  00EFF8  0EFF               	movlw	255
  7050  00EFFA  1623               	andwf	(___flmul@prod+1)^0,f,c
  7051  00EFFC  0E7F               	movlw	127
  7052  00EFFE  1624               	andwf	(___flmul@prod+2)^0,f,c
  7053  00F000  0E00               	movlw	0
  7054  00F002  1625               	andwf	(___flmul@prod+3)^0,f,c
  7055  00F004  B021               	btfsc	___flmul@bexp^0,0,c
  7056  00F006  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7057  00F008  90D8               	bcf	status,0,c
  7058  00F00A  3021               	rrcf	___flmul@bexp^0,w,c
  7059  00F00C                     L5:
  7060  00F00C  6E25               	movwf	(___flmul@prod+3)^0,c
  7061  00F00E                     l3601:
  7062  00F00E  501B               	movf	___flmul@sign^0,w,c
  7063  00F010  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7064  00F012  C022  F00F         	movff	___flmul@prod,?___flmul
  7065  00F016  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7066  00F01A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7067  00F01E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7068  00F022  0012               	return		;funcret
  7069  00F024                     __end_of___flmul:
  7070                           	callstack 0
  7071                           
  7072 ;; *************** function _LoRaReset *****************
  7073 ;; Defined at:
  7074 ;;		line 55 in file "LoRa.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg
  7083 ;; Tracked objects:
  7084 ;;		On entry : 3F/F
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;Total ram usage:        1 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_LoRaStart
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text28
  7102  00D340                     __ptext28:
  7103                           	callstack 0
  7104  00D340                     _LoRaReset:
  7105                           	callstack 28
  7106                           
  7107                           ; BSR set to: 15
  7108                           ;LoRa.c: 57: TRISCbits.RC6=0;
  7109                           
  7110                           ;incstack = 0
  7111  00D340  9C94               	bcf	148,6,c	;volatile
  7112                           
  7113                           ;LoRa.c: 58: LATCbits.LATC6=0;
  7114  00D342  9C8B               	bcf	139,6,c	;volatile
  7115                           
  7116                           ; BSR set to: 15
  7117                           ;LoRa.c: 59: _delay((unsigned long)((1)*(64000000/4000.0)));
  7118  00D344  0E15               	movlw	21
  7119  00D346  6E01               	movwf	??_LoRaReset^0,c
  7120  00D348  0EC6               	movlw	198
  7121  00D34A                     u4347:
  7122  00D34A  2EE8               	decfsz	wreg,f,c
  7123  00D34C  D7FE               	bra	u4347
  7124  00D34E  2E01               	decfsz	??_LoRaReset^0,f,c
  7125  00D350  D7FC               	bra	u4347
  7126  00D352  D000               	nop2	
  7127                           
  7128                           ;LoRa.c: 60: TRISCbits.RC6=1;
  7129  00D354  8C94               	bsf	148,6,c	;volatile
  7130                           
  7131                           ;LoRa.c: 61: _delay((unsigned long)((5)*(64000000/4000.0)));
  7132  00D356  0E68               	movlw	104
  7133  00D358  6E01               	movwf	??_LoRaReset^0,c
  7134  00D35A  0EE4               	movlw	228
  7135  00D35C                     u4357:
  7136  00D35C  2EE8               	decfsz	wreg,f,c
  7137  00D35E  D7FE               	bra	u4357
  7138  00D360  2E01               	decfsz	??_LoRaReset^0,f,c
  7139  00D362  D7FC               	bra	u4357
  7140  00D364  D000               	nop2	
  7141  00D366  0012               	return		;funcret
  7142  00D368                     __end_of_LoRaReset:
  7143                           	callstack 0
  7144                           
  7145 ;; *************** function _LoRaOptimalLoad *****************
  7146 ;; Defined at:
  7147 ;;		line 266 in file "LoRa.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  syncWord        1    wreg     unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  syncWord        1    6[COMRAM] unsigned char 
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0, cstack
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/F
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;Total ram usage:        2 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    3
  7168 ;; This function calls:
  7169 ;;		_LoRaSleepMode
  7170 ;;		_LoRaStandbyMode
  7171 ;;		_SPI2WriteByte
  7172 ;;		_setLoRaMode
  7173 ;; This function is called by:
  7174 ;;		_LoRaStart
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text29
  7179  00E374                     __ptext29:
  7180                           	callstack 0
  7181  00E374                     _LoRaOptimalLoad:
  7182                           	callstack 25
  7183                           
  7184                           ;incstack = 0
  7185                           ;LoRaOptimalLoad@syncWord stored from wreg
  7186  00E374  6E07               	movwf	LoRaOptimalLoad@syncWord^0,c
  7187                           
  7188                           ;LoRa.c: 267: LoRaSleepMode();
  7189  00E376  EC0F  F069         	call	_LoRaSleepMode	;wreg free
  7190                           
  7191                           ;LoRa.c: 268: setLoRaMode();
  7192  00E37A  EC19  F069         	call	_setLoRaMode	;wreg free
  7193                           
  7194                           ;LoRa.c: 269: LoRaStandbyMode();
  7195  00E37E  EC2F  F069         	call	_LoRaStandbyMode	;wreg free
  7196                           
  7197                           ;LoRa.c: 270: _delay((unsigned long)((10)*(64000000/4000.0)));
  7198  00E382  0ED0               	movlw	208
  7199  00E384  6E06               	movwf	??_LoRaOptimalLoad^0,c
  7200  00E386  0ECA               	movlw	202
  7201  00E388                     u4367:
  7202  00E388  2EE8               	decfsz	wreg,f,c
  7203  00E38A  D7FE               	bra	u4367
  7204  00E38C  2E06               	decfsz	??_LoRaOptimalLoad^0,f,c
  7205  00E38E  D7FC               	bra	u4367
  7206                           
  7207                           ;LoRa.c: 271: SPI2WriteByte(0x06, 0xD9);
  7208  00E390  0ED9               	movlw	217
  7209  00E392  6E01               	movwf	SPI2WriteByte@data^0,c
  7210  00E394  0E06               	movlw	6
  7211  00E396  ECA1  F06A         	call	_SPI2WriteByte
  7212                           
  7213                           ;LoRa.c: 272: SPI2WriteByte(0x07, 0);
  7214  00E39A  0E00               	movlw	0
  7215  00E39C  6E01               	movwf	SPI2WriteByte@data^0,c
  7216  00E39E  0E07               	movlw	7
  7217  00E3A0  ECA1  F06A         	call	_SPI2WriteByte
  7218                           
  7219                           ;LoRa.c: 273: SPI2WriteByte(0x08, 0);
  7220  00E3A4  0E00               	movlw	0
  7221  00E3A6  6E01               	movwf	SPI2WriteByte@data^0,c
  7222  00E3A8  0E08               	movlw	8
  7223  00E3AA  ECA1  F06A         	call	_SPI2WriteByte
  7224                           
  7225                           ;LoRa.c: 274: SPI2WriteByte(0x09, 0x8F);
  7226  00E3AE  0E8F               	movlw	143
  7227  00E3B0  6E01               	movwf	SPI2WriteByte@data^0,c
  7228  00E3B2  0E09               	movlw	9
  7229  00E3B4  ECA1  F06A         	call	_SPI2WriteByte
  7230                           
  7231                           ;LoRa.c: 275: SPI2WriteByte(0x0A, 0x09);
  7232  00E3B8  0E09               	movlw	9
  7233  00E3BA  6E01               	movwf	SPI2WriteByte@data^0,c
  7234  00E3BC  0E0A               	movlw	10
  7235  00E3BE  ECA1  F06A         	call	_SPI2WriteByte
  7236                           
  7237                           ;LoRa.c: 276: SPI2WriteByte(0x0B, 0x2B);
  7238  00E3C2  0E2B               	movlw	43
  7239  00E3C4  6E01               	movwf	SPI2WriteByte@data^0,c
  7240  00E3C6  0E0B               	movlw	11
  7241  00E3C8  ECA1  F06A         	call	_SPI2WriteByte
  7242                           
  7243                           ;LoRa.c: 277: SPI2WriteByte(0x0C, 0x23);
  7244  00E3CC  0E23               	movlw	35
  7245  00E3CE  6E01               	movwf	SPI2WriteByte@data^0,c
  7246  00E3D0  0E0C               	movlw	12
  7247  00E3D2  ECA1  F06A         	call	_SPI2WriteByte
  7248                           
  7249                           ;LoRa.c: 278: SPI2WriteByte(0x0E, 0);
  7250  00E3D6  0E00               	movlw	0
  7251  00E3D8  6E01               	movwf	SPI2WriteByte@data^0,c
  7252  00E3DA  0E0E               	movlw	14
  7253  00E3DC  ECA1  F06A         	call	_SPI2WriteByte
  7254                           
  7255                           ;LoRa.c: 279: SPI2WriteByte(0x0F, 0);
  7256  00E3E0  0E00               	movlw	0
  7257  00E3E2  6E01               	movwf	SPI2WriteByte@data^0,c
  7258  00E3E4  0E0F               	movlw	15
  7259  00E3E6  ECA1  F06A         	call	_SPI2WriteByte
  7260                           
  7261                           ;LoRa.c: 280: SPI2WriteByte(0x10, 0);
  7262  00E3EA  0E00               	movlw	0
  7263  00E3EC  6E01               	movwf	SPI2WriteByte@data^0,c
  7264  00E3EE  0E10               	movlw	16
  7265  00E3F0  ECA1  F06A         	call	_SPI2WriteByte
  7266                           
  7267                           ;LoRa.c: 281: SPI2WriteByte(0x11, 0);
  7268  00E3F4  0E00               	movlw	0
  7269  00E3F6  6E01               	movwf	SPI2WriteByte@data^0,c
  7270  00E3F8  0E11               	movlw	17
  7271  00E3FA  ECA1  F06A         	call	_SPI2WriteByte
  7272                           
  7273                           ;LoRa.c: 282: SPI2WriteByte(0x13, 0);
  7274  00E3FE  0E00               	movlw	0
  7275  00E400  6E01               	movwf	SPI2WriteByte@data^0,c
  7276  00E402  0E13               	movlw	19
  7277  00E404  ECA1  F06A         	call	_SPI2WriteByte
  7278                           
  7279                           ;LoRa.c: 283: SPI2WriteByte(0x1D, 0x72);
  7280  00E408  0E72               	movlw	114
  7281  00E40A  6E01               	movwf	SPI2WriteByte@data^0,c
  7282  00E40C  0E1D               	movlw	29
  7283  00E40E  ECA1  F06A         	call	_SPI2WriteByte
  7284                           
  7285                           ;LoRa.c: 284: SPI2WriteByte(0x1E, 0x70);
  7286  00E412  0E70               	movlw	112
  7287  00E414  6E01               	movwf	SPI2WriteByte@data^0,c
  7288  00E416  0E1E               	movlw	30
  7289  00E418  ECA1  F06A         	call	_SPI2WriteByte
  7290                           
  7291                           ;LoRa.c: 285: SPI2WriteByte(0x1F, 0x64);
  7292  00E41C  0E64               	movlw	100
  7293  00E41E  6E01               	movwf	SPI2WriteByte@data^0,c
  7294  00E420  0E1F               	movlw	31
  7295  00E422  ECA1  F06A         	call	_SPI2WriteByte
  7296                           
  7297                           ;LoRa.c: 286: SPI2WriteByte(0x20, 0);
  7298  00E426  0E00               	movlw	0
  7299  00E428  6E01               	movwf	SPI2WriteByte@data^0,c
  7300  00E42A  0E20               	movlw	32
  7301  00E42C  ECA1  F06A         	call	_SPI2WriteByte
  7302                           
  7303                           ;LoRa.c: 287: SPI2WriteByte(0x21, 0x08);
  7304  00E430  0E08               	movlw	8
  7305  00E432  6E01               	movwf	SPI2WriteByte@data^0,c
  7306  00E434  0E21               	movlw	33
  7307  00E436  ECA1  F06A         	call	_SPI2WriteByte
  7308                           
  7309                           ;LoRa.c: 288: SPI2WriteByte(0x23, 0xFF);
  7310  00E43A  0EFF               	movlw	255
  7311  00E43C  6E01               	movwf	SPI2WriteByte@data^0,c
  7312  00E43E  0E23               	movlw	35
  7313  00E440  ECA1  F06A         	call	_SPI2WriteByte
  7314                           
  7315                           ;LoRa.c: 289: SPI2WriteByte(0x24, 0);
  7316  00E444  0E00               	movlw	0
  7317  00E446  6E01               	movwf	SPI2WriteByte@data^0,c
  7318  00E448  0E24               	movlw	36
  7319  00E44A  ECA1  F06A         	call	_SPI2WriteByte
  7320                           
  7321                           ;LoRa.c: 290: SPI2WriteByte(0x25, 0);
  7322  00E44E  0E00               	movlw	0
  7323  00E450  6E01               	movwf	SPI2WriteByte@data^0,c
  7324  00E452  0E25               	movlw	37
  7325  00E454  ECA1  F06A         	call	_SPI2WriteByte
  7326                           
  7327                           ;LoRa.c: 291: SPI2WriteByte(0x26, 0x04);
  7328  00E458  0E04               	movlw	4
  7329  00E45A  6E01               	movwf	SPI2WriteByte@data^0,c
  7330  00E45C  0E26               	movlw	38
  7331  00E45E  ECA1  F06A         	call	_SPI2WriteByte
  7332                           
  7333                           ;LoRa.c: 292: SPI2WriteByte(0x2F, 0x45);
  7334  00E462  0E45               	movlw	69
  7335  00E464  6E01               	movwf	SPI2WriteByte@data^0,c
  7336  00E466  0E2F               	movlw	47
  7337  00E468  ECA1  F06A         	call	_SPI2WriteByte
  7338                           
  7339                           ;LoRa.c: 293: SPI2WriteByte(0x30, 0x55);
  7340  00E46C  0E55               	movlw	85
  7341  00E46E  6E01               	movwf	SPI2WriteByte@data^0,c
  7342  00E470  0E30               	movlw	48
  7343  00E472  ECA1  F06A         	call	_SPI2WriteByte
  7344                           
  7345                           ;LoRa.c: 294: SPI2WriteByte(0x31, 0xC3);
  7346  00E476  0EC3               	movlw	195
  7347  00E478  6E01               	movwf	SPI2WriteByte@data^0,c
  7348  00E47A  0E31               	movlw	49
  7349  00E47C  ECA1  F06A         	call	_SPI2WriteByte
  7350                           
  7351                           ;LoRa.c: 295: SPI2WriteByte(0x33, 0x27);
  7352  00E480  0E27               	movlw	39
  7353  00E482  6E01               	movwf	SPI2WriteByte@data^0,c
  7354  00E484  0E33               	movlw	51
  7355  00E486  ECA1  F06A         	call	_SPI2WriteByte
  7356                           
  7357                           ;LoRa.c: 296: SPI2WriteByte(0x36, 0x03);
  7358  00E48A  0E03               	movlw	3
  7359  00E48C  6E01               	movwf	SPI2WriteByte@data^0,c
  7360  00E48E  0E36               	movlw	54
  7361  00E490  ECA1  F06A         	call	_SPI2WriteByte
  7362                           
  7363                           ;LoRa.c: 297: SPI2WriteByte(0x37, 0x0A);
  7364  00E494  0E0A               	movlw	10
  7365  00E496  6E01               	movwf	SPI2WriteByte@data^0,c
  7366  00E498  0E37               	movlw	55
  7367  00E49A  ECA1  F06A         	call	_SPI2WriteByte
  7368                           
  7369                           ;LoRa.c: 298: SPI2WriteByte(0x39, syncWord);
  7370  00E49E  C007  F001         	movff	LoRaOptimalLoad@syncWord,SPI2WriteByte@data
  7371  00E4A2  0E39               	movlw	57
  7372  00E4A4  ECA1  F06A         	call	_SPI2WriteByte
  7373                           
  7374                           ;LoRa.c: 299: SPI2WriteByte(0x3A, 0x49);
  7375  00E4A8  0E49               	movlw	73
  7376  00E4AA  6E01               	movwf	SPI2WriteByte@data^0,c
  7377  00E4AC  0E3A               	movlw	58
  7378  00E4AE  ECA1  F06A         	call	_SPI2WriteByte
  7379                           
  7380                           ;LoRa.c: 300: SPI2WriteByte(0x4B, 0x09);
  7381  00E4B2  0E09               	movlw	9
  7382  00E4B4  6E01               	movwf	SPI2WriteByte@data^0,c
  7383  00E4B6  0E4B               	movlw	75
  7384  00E4B8  ECA1  F06A         	call	_SPI2WriteByte
  7385                           
  7386                           ;LoRa.c: 301: SPI2WriteByte(0x4D, 0x84);
  7387  00E4BC  0E84               	movlw	132
  7388  00E4BE  6E01               	movwf	SPI2WriteByte@data^0,c
  7389  00E4C0  0E4D               	movlw	77
  7390  00E4C2  ECA1  F06A         	call	_SPI2WriteByte
  7391                           
  7392                           ;LoRa.c: 302: SPI2WriteByte(0x61, 0x1C);
  7393  00E4C6  0E1C               	movlw	28
  7394  00E4C8  6E01               	movwf	SPI2WriteByte@data^0,c
  7395  00E4CA  0E61               	movlw	97
  7396  00E4CC  ECA1  F06A         	call	_SPI2WriteByte
  7397                           
  7398                           ;LoRa.c: 303: SPI2WriteByte(0x62, 0x0E);
  7399  00E4D0  0E0E               	movlw	14
  7400  00E4D2  6E01               	movwf	SPI2WriteByte@data^0,c
  7401  00E4D4  0E62               	movlw	98
  7402  00E4D6  ECA1  F06A         	call	_SPI2WriteByte
  7403                           
  7404                           ;LoRa.c: 304: SPI2WriteByte(0x63, 0x5B);
  7405  00E4DA  0E5B               	movlw	91
  7406  00E4DC  6E01               	movwf	SPI2WriteByte@data^0,c
  7407  00E4DE  0E63               	movlw	99
  7408  00E4E0  ECA1  F06A         	call	_SPI2WriteByte
  7409                           
  7410                           ;LoRa.c: 305: SPI2WriteByte(0x64, 0xCC);
  7411  00E4E4  0ECC               	movlw	204
  7412  00E4E6  6E01               	movwf	SPI2WriteByte@data^0,c
  7413  00E4E8  0E64               	movlw	100
  7414  00E4EA  ECA1  F06A         	call	_SPI2WriteByte
  7415                           
  7416                           ;LoRa.c: 306: SPI2WriteByte(0x70, 0xD0);
  7417  00E4EE  0ED0               	movlw	208
  7418  00E4F0  6E01               	movwf	SPI2WriteByte@data^0,c
  7419  00E4F2  0E70               	movlw	112
  7420  00E4F4  ECA1  F06A         	call	_SPI2WriteByte
  7421  00E4F8  0012               	return		;funcret
  7422  00E4FA                     __end_of_LoRaOptimalLoad:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _setLoRaMode *****************
  7426 ;; Defined at:
  7427 ;;		line 64 in file "LoRa.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  regValue        1    4[COMRAM] unsigned char 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/F
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:        1 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    2
  7448 ;; This function calls:
  7449 ;;		_readOpModeRegister
  7450 ;;		_writeOpModeRegister
  7451 ;; This function is called by:
  7452 ;;		_LoRaStart
  7453 ;;		_LoRaOptimalLoad
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text30
  7458  00D232                     __ptext30:
  7459                           	callstack 0
  7460  00D232                     _setLoRaMode:
  7461                           	callstack 26
  7462                           
  7463                           ;LoRa.c: 66: uint8_t regValue = readOpModeRegister();
  7464                           
  7465                           ;incstack = 0
  7466  00D232  ECD0  F068         	call	_readOpModeRegister	;wreg free
  7467  00D236  6E05               	movwf	setLoRaMode@regValue^0,c
  7468                           
  7469                           ;LoRa.c: 67: regValue = regValue | 0b10000000;
  7470  00D238  5005               	movf	setLoRaMode@regValue^0,w,c
  7471  00D23A  0980               	iorlw	128
  7472  00D23C  6E05               	movwf	setLoRaMode@regValue^0,c
  7473                           
  7474                           ;LoRa.c: 68: writeOpModeRegister(regValue);
  7475  00D23E  5005               	movf	setLoRaMode@regValue^0,w,c
  7476  00D240  ECF6  F068         	call	_writeOpModeRegister
  7477  00D244  0012               	return		;funcret
  7478  00D246                     __end_of_setLoRaMode:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function _LoRaStandbyMode *****************
  7482 ;; Defined at:
  7483 ;;		line 166 in file "LoRa.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;		None
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  regValue        1    4[COMRAM] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;Total ram usage:        1 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    2
  7504 ;; This function calls:
  7505 ;;		_readOpModeRegister
  7506 ;;		_writeOpModeRegister
  7507 ;; This function is called by:
  7508 ;;		_LoRaTXData
  7509 ;;		_LoRaOptimalLoad
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text31
  7514  00D25E                     __ptext31:
  7515                           	callstack 0
  7516  00D25E                     _LoRaStandbyMode:
  7517                           	callstack 26
  7518                           
  7519                           ;LoRa.c: 167: uint8_t regValue = readOpModeRegister();
  7520                           
  7521                           ;incstack = 0
  7522  00D25E  ECD0  F068         	call	_readOpModeRegister	;wreg free
  7523  00D262  6E05               	movwf	LoRaStandbyMode@regValue^0,c
  7524                           
  7525                           ;LoRa.c: 168: regValue = regValue & 0b11111000;
  7526  00D264  5005               	movf	LoRaStandbyMode@regValue^0,w,c
  7527  00D266  0BF8               	andlw	248
  7528  00D268  6E05               	movwf	LoRaStandbyMode@regValue^0,c
  7529                           
  7530                           ;LoRa.c: 169: regValue = regValue | 0b00000001;
  7531  00D26A  5005               	movf	LoRaStandbyMode@regValue^0,w,c
  7532  00D26C  0901               	iorlw	1
  7533  00D26E  6E05               	movwf	LoRaStandbyMode@regValue^0,c
  7534                           
  7535                           ;LoRa.c: 170: writeOpModeRegister(regValue);
  7536  00D270  5005               	movf	LoRaStandbyMode@regValue^0,w,c
  7537  00D272  ECF6  F068         	call	_writeOpModeRegister
  7538  00D276  0012               	return		;funcret
  7539  00D278                     __end_of_LoRaStandbyMode:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _LoRaSleepMode *****************
  7543 ;; Defined at:
  7544 ;;		line 173 in file "LoRa.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  regValue        1    4[COMRAM] unsigned char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;Total ram usage:        1 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    2
  7565 ;; This function calls:
  7566 ;;		_readOpModeRegister
  7567 ;;		_writeOpModeRegister
  7568 ;; This function is called by:
  7569 ;;		_transmitValues
  7570 ;;		_LoRaOptimalLoad
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text32
  7575  00D21E                     __ptext32:
  7576                           	callstack 0
  7577  00D21E                     _LoRaSleepMode:
  7578                           	callstack 25
  7579                           
  7580                           ;LoRa.c: 174: uint8_t regValue = readOpModeRegister();
  7581                           
  7582                           ;incstack = 0
  7583  00D21E  ECD0  F068         	call	_readOpModeRegister	;wreg free
  7584  00D222  6E05               	movwf	LoRaSleepMode@regValue^0,c
  7585                           
  7586                           ;LoRa.c: 176: regValue = regValue | 0b00000000;
  7587  00D224  5005               	movf	LoRaSleepMode@regValue^0,w,c
  7588  00D226  0BF8               	andlw	248
  7589  00D228  6E05               	movwf	LoRaSleepMode@regValue^0,c
  7590                           
  7591                           ;LoRa.c: 177: writeOpModeRegister(regValue);
  7592  00D22A  5005               	movf	LoRaSleepMode@regValue^0,w,c
  7593  00D22C  ECF6  F068         	call	_writeOpModeRegister
  7594  00D230  0012               	return		;funcret
  7595  00D232                     __end_of_LoRaSleepMode:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _writeOpModeRegister *****************
  7599 ;; Defined at:
  7600 ;;		line 75 in file "LoRa.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  regValue        1    wreg     unsigned char 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  regValue        1    3[COMRAM] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;Total ram usage:        1 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    1
  7621 ;; This function calls:
  7622 ;;		_SPI2WriteByte
  7623 ;; This function is called by:
  7624 ;;		_setLoRaMode
  7625 ;;		_LoRaStandbyMode
  7626 ;;		_LoRaSleepMode
  7627 ;;		_LoRaTXMode
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text33
  7632  00D1EC                     __ptext33:
  7633                           	callstack 0
  7634  00D1EC                     _writeOpModeRegister:
  7635                           	callstack 26
  7636                           
  7637                           ;incstack = 0
  7638                           ;writeOpModeRegister@regValue stored from wreg
  7639  00D1EC  6E04               	movwf	writeOpModeRegister@regValue^0,c
  7640                           
  7641                           ;LoRa.c: 76: SPI2WriteByte(0x01, regValue);
  7642  00D1EE  C004  F001         	movff	writeOpModeRegister@regValue,SPI2WriteByte@data
  7643  00D1F2  0E01               	movlw	1
  7644  00D1F4  ECA1  F06A         	call	_SPI2WriteByte
  7645  00D1F8  0012               	return		;funcret
  7646  00D1FA                     __end_of_writeOpModeRegister:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _readOpModeRegister *****************
  7650 ;; Defined at:
  7651 ;;		line 71 in file "LoRa.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      unsigned char 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    1
  7672 ;; This function calls:
  7673 ;;		_SPI2ReadByte
  7674 ;; This function is called by:
  7675 ;;		_setLoRaMode
  7676 ;;		_LoRaStandbyMode
  7677 ;;		_LoRaSleepMode
  7678 ;;		_LoRaTXMode
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text34
  7683  00D1A0                     __ptext34:
  7684                           	callstack 0
  7685  00D1A0                     _readOpModeRegister:
  7686                           	callstack 26
  7687                           
  7688                           ;LoRa.c: 72: return SPI2ReadByte(0x01);
  7689                           
  7690                           ;incstack = 0
  7691  00D1A0  0E01               	movlw	1
  7692  00D1A2  EC68  F069         	call	_SPI2ReadByte
  7693  00D1A6  0012               	return		;funcret
  7694  00D1A8                     __end_of_readOpModeRegister:
  7695                           	callstack 0
  7696                           
  7697 ;; *************** function _LoRaGetIRQFlags *****************
  7698 ;; Defined at:
  7699 ;;		line 244 in file "LoRa.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  regValue        1    2[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      unsigned char 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 3F/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;Total ram usage:        1 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    1
  7720 ;; This function calls:
  7721 ;;		_SPI2ReadByte
  7722 ;; This function is called by:
  7723 ;;		_transmitValues
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text35
  7728  00D1D2                     __ptext35:
  7729                           	callstack 0
  7730  00D1D2                     _LoRaGetIRQFlags:
  7731                           	callstack 28
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;LoRa.c: 245: uint8_t regValue = SPI2ReadByte(0x12);
  7735                           
  7736                           ;incstack = 0
  7737  00D1D2  0E12               	movlw	18
  7738  00D1D4  EC68  F069         	call	_SPI2ReadByte
  7739  00D1D8  6E03               	movwf	LoRaGetIRQFlags@regValue^0,c
  7740                           
  7741                           ;LoRa.c: 246: return regValue;
  7742  00D1DA  5003               	movf	LoRaGetIRQFlags@regValue^0,w,c
  7743  00D1DC  0012               	return		;funcret
  7744  00D1DE                     __end_of_LoRaGetIRQFlags:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _LoRaGetFrequency *****************
  7748 ;; Defined at:
  7749 ;;		line 234 in file "LoRa.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  freqMHz         4   59[COMRAM] float 
  7754 ;;  intermediate    4   55[COMRAM] unsigned long 
  7755 ;;  lsb             1   65[COMRAM] unsigned char 
  7756 ;;  mid             1   64[COMRAM] unsigned char 
  7757 ;;  msb             1   63[COMRAM] unsigned char 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  4   39[COMRAM] float 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;Total ram usage:       27 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    1
  7774 ;; This function calls:
  7775 ;;		_SPI2ReadByte
  7776 ;;		___fldiv
  7777 ;;		___xxtofl
  7778 ;; This function is called by:
  7779 ;;		_transmitValues
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text36
  7784  00DC80                     __ptext36:
  7785                           	callstack 0
  7786  00DC80                     _LoRaGetFrequency:
  7787                           	callstack 28
  7788                           
  7789                           ;LoRa.c: 235: uint8_t msb = SPI2ReadByte(0x06);
  7790                           
  7791                           ;incstack = 0
  7792  00DC80  0E06               	movlw	6
  7793  00DC82  EC68  F069         	call	_SPI2ReadByte
  7794  00DC86  6E40               	movwf	LoRaGetFrequency@msb^0,c
  7795                           
  7796                           ;LoRa.c: 236: uint8_t mid = SPI2ReadByte(0x07);
  7797  00DC88  0E07               	movlw	7
  7798  00DC8A  EC68  F069         	call	_SPI2ReadByte
  7799  00DC8E  6E41               	movwf	LoRaGetFrequency@mid^0,c
  7800                           
  7801                           ;LoRa.c: 237: uint8_t lsb = SPI2ReadByte(0x08);
  7802  00DC90  0E08               	movlw	8
  7803  00DC92  EC68  F069         	call	_SPI2ReadByte
  7804  00DC96  6E42               	movwf	LoRaGetFrequency@lsb^0,c
  7805                           
  7806                           ;LoRa.c: 238: uint32_t intermediate = (uint32_t)msb<<16 | (uint32_t)mid<<8 | lsb;
  7807  00DC98  C041  F02C         	movff	LoRaGetFrequency@mid,??_LoRaGetFrequency
  7808  00DC9C  6A2D               	clrf	(??_LoRaGetFrequency+1)^0,c
  7809  00DC9E  6A2E               	clrf	(??_LoRaGetFrequency+2)^0,c
  7810  00DCA0  6A2F               	clrf	(??_LoRaGetFrequency+3)^0,c
  7811  00DCA2  C02E  F02F         	movff	??_LoRaGetFrequency+2,??_LoRaGetFrequency+3
  7812  00DCA6  C02D  F02E         	movff	??_LoRaGetFrequency+1,??_LoRaGetFrequency+2
  7813  00DCAA  C02C  F02D         	movff	??_LoRaGetFrequency,??_LoRaGetFrequency+1
  7814  00DCAE  6A2C               	clrf	??_LoRaGetFrequency^0,c
  7815  00DCB0  C040  F030         	movff	LoRaGetFrequency@msb,??_LoRaGetFrequency+4
  7816  00DCB4  6A31               	clrf	(??_LoRaGetFrequency+5)^0,c
  7817  00DCB6  6A32               	clrf	(??_LoRaGetFrequency+6)^0,c
  7818  00DCB8  6A33               	clrf	(??_LoRaGetFrequency+7)^0,c
  7819  00DCBA  C031  F033         	movff	??_LoRaGetFrequency+5,??_LoRaGetFrequency+7
  7820  00DCBE  C030  F032         	movff	??_LoRaGetFrequency+4,??_LoRaGetFrequency+6
  7821  00DCC2  6A31               	clrf	(??_LoRaGetFrequency+5)^0,c
  7822  00DCC4  6A30               	clrf	(??_LoRaGetFrequency+4)^0,c
  7823  00DCC6  502C               	movf	??_LoRaGetFrequency^0,w,c
  7824  00DCC8  1030               	iorwf	(??_LoRaGetFrequency+4)^0,w,c
  7825  00DCCA  6E34               	movwf	(??_LoRaGetFrequency+8)^0,c
  7826  00DCCC  502D               	movf	(??_LoRaGetFrequency+1)^0,w,c
  7827  00DCCE  1031               	iorwf	(??_LoRaGetFrequency+5)^0,w,c
  7828  00DCD0  6E35               	movwf	(??_LoRaGetFrequency+9)^0,c
  7829  00DCD2  502E               	movf	(??_LoRaGetFrequency+2)^0,w,c
  7830  00DCD4  1032               	iorwf	(??_LoRaGetFrequency+6)^0,w,c
  7831  00DCD6  6E36               	movwf	(??_LoRaGetFrequency+10)^0,c
  7832  00DCD8  502F               	movf	(??_LoRaGetFrequency+3)^0,w,c
  7833  00DCDA  1033               	iorwf	(??_LoRaGetFrequency+7)^0,w,c
  7834  00DCDC  6E37               	movwf	(??_LoRaGetFrequency+11)^0,c
  7835  00DCDE  5042               	movf	LoRaGetFrequency@lsb^0,w,c
  7836  00DCE0  1034               	iorwf	(??_LoRaGetFrequency+8)^0,w,c
  7837  00DCE2  6E38               	movwf	LoRaGetFrequency@intermediate^0,c
  7838  00DCE4  5035               	movf	(??_LoRaGetFrequency+9)^0,w,c
  7839  00DCE6  6E39               	movwf	(LoRaGetFrequency@intermediate+1)^0,c
  7840  00DCE8  5036               	movf	(??_LoRaGetFrequency+10)^0,w,c
  7841  00DCEA  6E3A               	movwf	(LoRaGetFrequency@intermediate+2)^0,c
  7842  00DCEC  5037               	movf	(??_LoRaGetFrequency+11)^0,w,c
  7843  00DCEE  6E3B               	movwf	(LoRaGetFrequency@intermediate+3)^0,c
  7844                           
  7845                           ;LoRa.c: 239: float freqMHz = (float)intermediate/16384.0;
  7846  00DCF0  C038  F001         	movff	LoRaGetFrequency@intermediate,___xxtofl@val
  7847  00DCF4  C039  F002         	movff	LoRaGetFrequency@intermediate+1,___xxtofl@val+1
  7848  00DCF8  C03A  F003         	movff	LoRaGetFrequency@intermediate+2,___xxtofl@val+2
  7849  00DCFC  C03B  F004         	movff	LoRaGetFrequency@intermediate+3,___xxtofl@val+3
  7850  00DD00  0E00               	movlw	0
  7851  00DD02  EC1A  F071         	call	___xxtofl
  7852  00DD06  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7853  00DD0A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7854  00DD0E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7855  00DD12  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7856  00DD16  0E00               	movlw	0
  7857  00DD18  6E13               	movwf	___fldiv@a^0,c
  7858  00DD1A  0E00               	movlw	0
  7859  00DD1C  6E14               	movwf	(___fldiv@a+1)^0,c
  7860  00DD1E  0E80               	movlw	128
  7861  00DD20  6E15               	movwf	(___fldiv@a+2)^0,c
  7862  00DD22  0E46               	movlw	70
  7863  00DD24  6E16               	movwf	(___fldiv@a+3)^0,c
  7864  00DD26  ECB2  F073         	call	___fldiv	;wreg free
  7865  00DD2A  C00F  F03C         	movff	?___fldiv,LoRaGetFrequency@freqMHz
  7866  00DD2E  C010  F03D         	movff	?___fldiv+1,LoRaGetFrequency@freqMHz+1
  7867  00DD32  C011  F03E         	movff	?___fldiv+2,LoRaGetFrequency@freqMHz+2
  7868  00DD36  C012  F03F         	movff	?___fldiv+3,LoRaGetFrequency@freqMHz+3
  7869                           
  7870                           ;LoRa.c: 240: return freqMHz;
  7871  00DD3A  C03C  F028         	movff	LoRaGetFrequency@freqMHz,?_LoRaGetFrequency
  7872  00DD3E  C03D  F029         	movff	LoRaGetFrequency@freqMHz+1,?_LoRaGetFrequency+1
  7873  00DD42  C03E  F02A         	movff	LoRaGetFrequency@freqMHz+2,?_LoRaGetFrequency+2
  7874  00DD46  C03F  F02B         	movff	LoRaGetFrequency@freqMHz+3,?_LoRaGetFrequency+3
  7875  00DD4A  0012               	return		;funcret
  7876  00DD4C                     __end_of_LoRaGetFrequency:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function ___xxtofl *****************
  7880 ;; Defined at:
  7881 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  sign            1    wreg     unsigned char 
  7884 ;;  val             4    0[COMRAM] long 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  sign            1    8[COMRAM] unsigned char 
  7887 ;;  arg             4   10[COMRAM] unsigned long 
  7888 ;;  exp             1    9[COMRAM] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  4    0[COMRAM] unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;Total ram usage:       14 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_LoRaGetFrequency
  7908 ;;		_printf
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text37
  7913  00E234                     __ptext37:
  7914                           	callstack 0
  7915  00E234                     ___xxtofl:
  7916                           	callstack 28
  7917                           
  7918                           ;incstack = 0
  7919                           ;___xxtofl@sign stored from wreg
  7920  00E234  6E09               	movwf	___xxtofl@sign^0,c
  7921  00E236  5009               	movf	___xxtofl@sign^0,w,c
  7922  00E238  A4D8               	btfss	status,2,c
  7923  00E23A  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  7924  00E23C  D01A               	goto	l1341
  7925  00E23E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7926  00E242  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7927  00E246  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7928  00E24A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7929  00E24E  1E05               	comf	??___xxtofl^0,f,c
  7930  00E250  1E06               	comf	(??___xxtofl+1)^0,f,c
  7931  00E252  1E07               	comf	(??___xxtofl+2)^0,f,c
  7932  00E254  1E08               	comf	(??___xxtofl+3)^0,f,c
  7933  00E256  2A05               	incf	??___xxtofl^0,f,c
  7934  00E258  0E00               	movlw	0
  7935  00E25A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7936  00E25C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7937  00E25E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7938  00E260  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7939  00E264  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7940  00E268  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7941  00E26C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7942  00E270  D008               	goto	l4067
  7943  00E272                     l1341:
  7944  00E272  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7945  00E276  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7946  00E27A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7947  00E27E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7948  00E282                     l4067:
  7949  00E282  5001               	movf	___xxtofl@val^0,w,c
  7950  00E284  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7951  00E286  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7952  00E288  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7953  00E28A  A4D8               	btfss	status,2,c
  7954  00E28C  D009               	goto	l4073
  7955  00E28E  0E00               	movlw	0
  7956  00E290  6E01               	movwf	?___xxtofl^0,c
  7957  00E292  0E00               	movlw	0
  7958  00E294  6E02               	movwf	(?___xxtofl+1)^0,c
  7959  00E296  0E00               	movlw	0
  7960  00E298  6E03               	movwf	(?___xxtofl+2)^0,c
  7961  00E29A  0E00               	movlw	0
  7962  00E29C  6E04               	movwf	(?___xxtofl+3)^0,c
  7963  00E29E  0012               	return	
  7964  00E2A0                     l4073:
  7965  00E2A0  0E96               	movlw	150
  7966  00E2A2  6E0A               	movwf	___xxtofl@exp^0,c
  7967  00E2A4  D006               	goto	l4077
  7968  00E2A6                     l4075:
  7969  00E2A6  2A0A               	incf	___xxtofl@exp^0,f,c
  7970  00E2A8  90D8               	bcf	status,0,c
  7971  00E2AA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7972  00E2AC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7973  00E2AE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7974  00E2B0  320B               	rrcf	___xxtofl@arg^0,f,c
  7975  00E2B2                     l4077:
  7976  00E2B2  0E00               	movlw	0
  7977  00E2B4  140B               	andwf	___xxtofl@arg^0,w,c
  7978  00E2B6  6E05               	movwf	??___xxtofl^0,c
  7979  00E2B8  0E00               	movlw	0
  7980  00E2BA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7981  00E2BC  6E06               	movwf	(??___xxtofl+1)^0,c
  7982  00E2BE  0E00               	movlw	0
  7983  00E2C0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7984  00E2C2  6E07               	movwf	(??___xxtofl+2)^0,c
  7985  00E2C4  0EFE               	movlw	254
  7986  00E2C6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7987  00E2C8  6E08               	movwf	(??___xxtofl+3)^0,c
  7988  00E2CA  5005               	movf	??___xxtofl^0,w,c
  7989  00E2CC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7990  00E2CE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7991  00E2D0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7992  00E2D2  B4D8               	btfsc	status,2,c
  7993  00E2D4  D00D               	goto	l1348
  7994  00E2D6  D7E7               	goto	l4075
  7995  00E2D8                     l4079:
  7996  00E2D8  2A0A               	incf	___xxtofl@exp^0,f,c
  7997  00E2DA  0E01               	movlw	1
  7998  00E2DC  260B               	addwf	___xxtofl@arg^0,f,c
  7999  00E2DE  0E00               	movlw	0
  8000  00E2E0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8001  00E2E2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8002  00E2E4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8003  00E2E6  90D8               	bcf	status,0,c
  8004  00E2E8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8005  00E2EA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8006  00E2EC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8007  00E2EE  320B               	rrcf	___xxtofl@arg^0,f,c
  8008  00E2F0                     l1348:
  8009  00E2F0  0E00               	movlw	0
  8010  00E2F2  140B               	andwf	___xxtofl@arg^0,w,c
  8011  00E2F4  6E05               	movwf	??___xxtofl^0,c
  8012  00E2F6  0E00               	movlw	0
  8013  00E2F8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8014  00E2FA  6E06               	movwf	(??___xxtofl+1)^0,c
  8015  00E2FC  0E00               	movlw	0
  8016  00E2FE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8017  00E300  6E07               	movwf	(??___xxtofl+2)^0,c
  8018  00E302  0EFF               	movlw	255
  8019  00E304  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8020  00E306  6E08               	movwf	(??___xxtofl+3)^0,c
  8021  00E308  5005               	movf	??___xxtofl^0,w,c
  8022  00E30A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8023  00E30C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8024  00E30E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8025  00E310  B4D8               	btfsc	status,2,c
  8026  00E312  D007               	goto	l4087
  8027  00E314  D7E1               	goto	l4079
  8028  00E316                     l4085:
  8029  00E316  060A               	decf	___xxtofl@exp^0,f,c
  8030  00E318  90D8               	bcf	status,0,c
  8031  00E31A  360B               	rlcf	___xxtofl@arg^0,f,c
  8032  00E31C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8033  00E31E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8034  00E320  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8035  00E322                     l4087:
  8036  00E322  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8037  00E324  D003               	goto	u3450
  8038  00E326  0E02               	movlw	2
  8039  00E328  600A               	cpfslt	___xxtofl@exp^0,c
  8040  00E32A  D7F5               	goto	l4085
  8041  00E32C                     u3450:
  8042  00E32C  A00A               	btfss	___xxtofl@exp^0,0,c
  8043  00E32E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8044  00E330  90D8               	bcf	status,0,c
  8045  00E332  320A               	rrcf	___xxtofl@exp^0,f,c
  8046  00E334  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8047  00E338  6A06               	clrf	(??___xxtofl+1)^0,c
  8048  00E33A  6A07               	clrf	(??___xxtofl+2)^0,c
  8049  00E33C  6A08               	clrf	(??___xxtofl+3)^0,c
  8050  00E33E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8051  00E342  6A07               	clrf	(??___xxtofl+2)^0,c
  8052  00E344  6A06               	clrf	(??___xxtofl+1)^0,c
  8053  00E346  6A05               	clrf	??___xxtofl^0,c
  8054  00E348  5005               	movf	??___xxtofl^0,w,c
  8055  00E34A  120B               	iorwf	___xxtofl@arg^0,f,c
  8056  00E34C  5006               	movf	(??___xxtofl+1)^0,w,c
  8057  00E34E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8058  00E350  5007               	movf	(??___xxtofl+2)^0,w,c
  8059  00E352  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8060  00E354  5008               	movf	(??___xxtofl+3)^0,w,c
  8061  00E356  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8062  00E358  5009               	movf	___xxtofl@sign^0,w,c
  8063  00E35A  A4D8               	btfss	status,2,c
  8064  00E35C  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  8065  00E35E  D001               	goto	l4103
  8066  00E360  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8067  00E362                     l4103:
  8068  00E362  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8069  00E366  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8070  00E36A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8071  00E36E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8072  00E372  0012               	return		;funcret
  8073  00E374                     __end_of___xxtofl:
  8074                           	callstack 0
  8075                           
  8076 ;; *************** function ___fldiv *****************
  8077 ;; Defined at:
  8078 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  b               4   14[COMRAM] unsigned char 
  8081 ;;  a               4   18[COMRAM] unsigned char 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  grs             4   33[COMRAM] unsigned long 
  8084 ;;  rem             4   26[COMRAM] unsigned long 
  8085 ;;  new_exp         2   31[COMRAM] int 
  8086 ;;  aexp            1   38[COMRAM] unsigned char 
  8087 ;;  bexp            1   37[COMRAM] unsigned char 
  8088 ;;  sign            1   30[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4   14[COMRAM] unsigned char 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:       25 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_LoRaGetFrequency
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text38
  8112  00E764                     __ptext38:
  8113                           	callstack 0
  8114  00E764                     ___fldiv:
  8115                           	callstack 28
  8116                           
  8117                           ;incstack = 0
  8118  00E764  5012               	movf	(___fldiv@b+3)^0,w,c
  8119  00E766  0B80               	andlw	128
  8120  00E768  6E1F               	movwf	___fldiv@sign^0,c
  8121  00E76A  5012               	movf	(___fldiv@b+3)^0,w,c
  8122  00E76C  2412               	addwf	(___fldiv@b+3)^0,w,c
  8123  00E76E  6E26               	movwf	___fldiv@bexp^0,c
  8124  00E770  BE11               	btfsc	(___fldiv@b+2)^0,7,c
  8125  00E772  8026               	bsf	___fldiv@bexp^0,0,c
  8126  00E774  5026               	movf	___fldiv@bexp^0,w,c
  8127  00E776  B4D8               	btfsc	status,2,c
  8128  00E778  D00D               	goto	l4515
  8129  00E77A  2826               	incf	___fldiv@bexp^0,w,c
  8130  00E77C  A4D8               	btfss	status,2,c
  8131  00E77E  D008               	goto	l4511
  8132  00E780  0E00               	movlw	0
  8133  00E782  6E0F               	movwf	___fldiv@b^0,c
  8134  00E784  0E00               	movlw	0
  8135  00E786  6E10               	movwf	(___fldiv@b+1)^0,c
  8136  00E788  0E00               	movlw	0
  8137  00E78A  6E11               	movwf	(___fldiv@b+2)^0,c
  8138  00E78C  0E00               	movlw	0
  8139  00E78E  6E12               	movwf	(___fldiv@b+3)^0,c
  8140  00E790                     l4511:
  8141  00E790  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8142  00E792  D006               	goto	L6
  8143  00E794                     l4515:
  8144  00E794  0E00               	movlw	0
  8145  00E796  6E0F               	movwf	___fldiv@b^0,c
  8146  00E798  0E00               	movlw	0
  8147  00E79A  6E10               	movwf	(___fldiv@b+1)^0,c
  8148  00E79C  0E00               	movlw	0
  8149  00E79E  6E11               	movwf	(___fldiv@b+2)^0,c
  8150  00E7A0                     L6:
  8151  00E7A0  0E00               	movlw	0
  8152  00E7A2  6E12               	movwf	(___fldiv@b+3)^0,c
  8153  00E7A4  5016               	movf	(___fldiv@a+3)^0,w,c
  8154  00E7A6  0B80               	andlw	128
  8155  00E7A8  1A1F               	xorwf	___fldiv@sign^0,f,c
  8156  00E7AA  5016               	movf	(___fldiv@a+3)^0,w,c
  8157  00E7AC  2416               	addwf	(___fldiv@a+3)^0,w,c
  8158  00E7AE  6E27               	movwf	___fldiv@aexp^0,c
  8159  00E7B0  BE15               	btfsc	(___fldiv@a+2)^0,7,c
  8160  00E7B2  8027               	bsf	___fldiv@aexp^0,0,c
  8161  00E7B4  5027               	movf	___fldiv@aexp^0,w,c
  8162  00E7B6  B4D8               	btfsc	status,2,c
  8163  00E7B8  D00D               	goto	l4535
  8164  00E7BA  2827               	incf	___fldiv@aexp^0,w,c
  8165  00E7BC  A4D8               	btfss	status,2,c
  8166  00E7BE  D008               	goto	l4531
  8167  00E7C0  0E00               	movlw	0
  8168  00E7C2  6E13               	movwf	___fldiv@a^0,c
  8169  00E7C4  0E00               	movlw	0
  8170  00E7C6  6E14               	movwf	(___fldiv@a+1)^0,c
  8171  00E7C8  0E00               	movlw	0
  8172  00E7CA  6E15               	movwf	(___fldiv@a+2)^0,c
  8173  00E7CC  0E00               	movlw	0
  8174  00E7CE  6E16               	movwf	(___fldiv@a+3)^0,c
  8175  00E7D0                     l4531:
  8176  00E7D0  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8177  00E7D2  D006               	goto	L7
  8178  00E7D4                     l4535:
  8179  00E7D4  0E00               	movlw	0
  8180  00E7D6  6E13               	movwf	___fldiv@a^0,c
  8181  00E7D8  0E00               	movlw	0
  8182  00E7DA  6E14               	movwf	(___fldiv@a+1)^0,c
  8183  00E7DC  0E00               	movlw	0
  8184  00E7DE  6E15               	movwf	(___fldiv@a+2)^0,c
  8185  00E7E0                     L7:
  8186  00E7E0  0E00               	movlw	0
  8187  00E7E2  6E16               	movwf	(___fldiv@a+3)^0,c
  8188  00E7E4  5013               	movf	___fldiv@a^0,w,c
  8189  00E7E6  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8190  00E7E8  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8191  00E7EA  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8192  00E7EC  A4D8               	btfss	status,2,c
  8193  00E7EE  D017               	goto	l4549
  8194  00E7F0  0E00               	movlw	0
  8195  00E7F2  6E0F               	movwf	___fldiv@b^0,c
  8196  00E7F4  0E00               	movlw	0
  8197  00E7F6  6E10               	movwf	(___fldiv@b+1)^0,c
  8198  00E7F8  0E00               	movlw	0
  8199  00E7FA  6E11               	movwf	(___fldiv@b+2)^0,c
  8200  00E7FC  0E00               	movlw	0
  8201  00E7FE  6E12               	movwf	(___fldiv@b+3)^0,c
  8202  00E800  0E80               	movlw	128
  8203  00E802  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8204  00E804  0E7F               	movlw	127
  8205  00E806  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8206  00E808                     l4543:
  8207  00E808  501F               	movf	___fldiv@sign^0,w,c
  8208  00E80A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8209  00E80C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8210  00E810  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8211  00E814  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8212  00E818  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8213  00E81C  0012               	return	
  8214  00E81E                     l4549:
  8215  00E81E  5026               	movf	___fldiv@bexp^0,w,c
  8216  00E820  A4D8               	btfss	status,2,c
  8217  00E822  D009               	goto	l4557
  8218  00E824  0E00               	movlw	0
  8219  00E826  6E0F               	movwf	?___fldiv^0,c
  8220  00E828  0E00               	movlw	0
  8221  00E82A  6E10               	movwf	(?___fldiv+1)^0,c
  8222  00E82C  0E00               	movlw	0
  8223  00E82E  6E11               	movwf	(?___fldiv+2)^0,c
  8224  00E830  0E00               	movlw	0
  8225  00E832  6E12               	movwf	(?___fldiv+3)^0,c
  8226  00E834  0012               	return	
  8227  00E836                     l4557:
  8228  00E836  5027               	movf	___fldiv@aexp^0,w,c
  8229  00E838  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8230  00E83C  6A18               	clrf	(??___fldiv+1)^0,c
  8231  00E83E  5E17               	subwf	??___fldiv^0,f,c
  8232  00E840  0E00               	movlw	0
  8233  00E842  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8234  00E844  0E7F               	movlw	127
  8235  00E846  2417               	addwf	??___fldiv^0,w,c
  8236  00E848  6E20               	movwf	___fldiv@new_exp^0,c
  8237  00E84A  0E00               	movlw	0
  8238  00E84C  2018               	addwfc	(??___fldiv+1)^0,w,c
  8239  00E84E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8240  00E850  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8241  00E854  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8242  00E858  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8243  00E85C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8244  00E860  0E00               	movlw	0
  8245  00E862  6E0F               	movwf	___fldiv@b^0,c
  8246  00E864  0E00               	movlw	0
  8247  00E866  6E10               	movwf	(___fldiv@b+1)^0,c
  8248  00E868  0E00               	movlw	0
  8249  00E86A  6E11               	movwf	(___fldiv@b+2)^0,c
  8250  00E86C  0E00               	movlw	0
  8251  00E86E  6E12               	movwf	(___fldiv@b+3)^0,c
  8252  00E870  0E00               	movlw	0
  8253  00E872  6E22               	movwf	___fldiv@grs^0,c
  8254  00E874  0E00               	movlw	0
  8255  00E876  6E23               	movwf	(___fldiv@grs+1)^0,c
  8256  00E878  0E00               	movlw	0
  8257  00E87A  6E24               	movwf	(___fldiv@grs+2)^0,c
  8258  00E87C  0E00               	movlw	0
  8259  00E87E  6E25               	movwf	(___fldiv@grs+3)^0,c
  8260  00E880  0E00               	movlw	0
  8261  00E882  6E27               	movwf	___fldiv@aexp^0,c
  8262  00E884  D028               	goto	l1270
  8263  00E886                     l4567:
  8264  00E886  5027               	movf	___fldiv@aexp^0,w,c
  8265  00E888  B4D8               	btfsc	status,2,c
  8266  00E88A  D011               	goto	l4575
  8267  00E88C  90D8               	bcf	status,0,c
  8268  00E88E  361B               	rlcf	___fldiv@rem^0,f,c
  8269  00E890  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8270  00E892  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8271  00E894  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8272  00E896  90D8               	bcf	status,0,c
  8273  00E898  360F               	rlcf	___fldiv@b^0,f,c
  8274  00E89A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8275  00E89C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8276  00E89E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8277  00E8A0  BE25               	btfsc	(___fldiv@grs+3)^0,7,c
  8278  00E8A2  800F               	bsf	___fldiv@b^0,0,c
  8279  00E8A4  90D8               	bcf	status,0,c
  8280  00E8A6  3622               	rlcf	___fldiv@grs^0,f,c
  8281  00E8A8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8282  00E8AA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8283  00E8AC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8284  00E8AE                     l4575:
  8285  00E8AE  5013               	movf	___fldiv@a^0,w,c
  8286  00E8B0  5C1B               	subwf	___fldiv@rem^0,w,c
  8287  00E8B2  5014               	movf	(___fldiv@a+1)^0,w,c
  8288  00E8B4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8289  00E8B6  5015               	movf	(___fldiv@a+2)^0,w,c
  8290  00E8B8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8291  00E8BA  5016               	movf	(___fldiv@a+3)^0,w,c
  8292  00E8BC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8293  00E8BE  A0D8               	btfss	status,0,c
  8294  00E8C0  D009               	goto	l4581
  8295  00E8C2  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8296  00E8C4  5013               	movf	___fldiv@a^0,w,c
  8297  00E8C6  5E1B               	subwf	___fldiv@rem^0,f,c
  8298  00E8C8  5014               	movf	(___fldiv@a+1)^0,w,c
  8299  00E8CA  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8300  00E8CC  5015               	movf	(___fldiv@a+2)^0,w,c
  8301  00E8CE  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8302  00E8D0  5016               	movf	(___fldiv@a+3)^0,w,c
  8303  00E8D2  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8304  00E8D4                     l4581:
  8305  00E8D4  2A27               	incf	___fldiv@aexp^0,f,c
  8306  00E8D6                     l1270:
  8307  00E8D6  0E19               	movlw	25
  8308  00E8D8  6427               	cpfsgt	___fldiv@aexp^0,c
  8309  00E8DA  D7D5               	goto	l4567
  8310  00E8DC  501B               	movf	___fldiv@rem^0,w,c
  8311  00E8DE  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8312  00E8E0  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8313  00E8E2  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8314  00E8E4  B4D8               	btfsc	status,2,c
  8315  00E8E6  D011               	goto	l4593
  8316  00E8E8  8022               	bsf	___fldiv@grs^0,0,c
  8317  00E8EA  D00F               	goto	l4593
  8318  00E8EC                     l4587:
  8319  00E8EC  90D8               	bcf	status,0,c
  8320  00E8EE  360F               	rlcf	___fldiv@b^0,f,c
  8321  00E8F0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8322  00E8F2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8323  00E8F4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8324  00E8F6  BE25               	btfsc	(___fldiv@grs+3)^0,7,c
  8325  00E8F8  800F               	bsf	___fldiv@b^0,0,c
  8326  00E8FA  90D8               	bcf	status,0,c
  8327  00E8FC  3622               	rlcf	___fldiv@grs^0,f,c
  8328  00E8FE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8329  00E900  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8330  00E902  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8331  00E904  0620               	decf	___fldiv@new_exp^0,f,c
  8332  00E906  A0D8               	btfss	status,0,c
  8333  00E908  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8334  00E90A                     l4593:
  8335  00E90A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8336  00E90C  D7EF               	goto	l4587
  8337  00E90E  0E00               	movlw	0
  8338  00E910  6E27               	movwf	___fldiv@aexp^0,c
  8339  00E912  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8340  00E914  D017               	goto	l1281
  8341  00E916  0EFF               	movlw	255
  8342  00E918  1422               	andwf	___fldiv@grs^0,w,c
  8343  00E91A  6E17               	movwf	??___fldiv^0,c
  8344  00E91C  0EFF               	movlw	255
  8345  00E91E  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8346  00E920  6E18               	movwf	(??___fldiv+1)^0,c
  8347  00E922  0EFF               	movlw	255
  8348  00E924  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8349  00E926  6E19               	movwf	(??___fldiv+2)^0,c
  8350  00E928  0E7F               	movlw	127
  8351  00E92A  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8352  00E92C  6E1A               	movwf	(??___fldiv+3)^0,c
  8353  00E92E  5017               	movf	??___fldiv^0,w,c
  8354  00E930  1018               	iorwf	(??___fldiv+1)^0,w,c
  8355  00E932  1019               	iorwf	(??___fldiv+2)^0,w,c
  8356  00E934  101A               	iorwf	(??___fldiv+3)^0,w,c
  8357  00E936  B4D8               	btfsc	status,2,c
  8358  00E938  D003               	goto	l1282
  8359  00E93A                     u4000:
  8360  00E93A  0E01               	movlw	1
  8361  00E93C  6E27               	movwf	___fldiv@aexp^0,c
  8362  00E93E  D002               	goto	l1281
  8363  00E940                     l1282:
  8364  00E940  B00F               	btfsc	___fldiv@b^0,0,c
  8365  00E942  D7FB               	goto	u4000
  8366  00E944                     l1281:
  8367  00E944  5027               	movf	___fldiv@aexp^0,w,c
  8368  00E946  B4D8               	btfsc	status,2,c
  8369  00E948  D01F               	goto	l4613
  8370  00E94A  0E01               	movlw	1
  8371  00E94C  260F               	addwf	___fldiv@b^0,f,c
  8372  00E94E  0E00               	movlw	0
  8373  00E950  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8374  00E952  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8375  00E954  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8376  00E956  A012               	btfss	(___fldiv@b+3)^0,0,c
  8377  00E958  D017               	goto	l4613
  8378  00E95A  C00F  F017         	movff	___fldiv@b,??___fldiv
  8379  00E95E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8380  00E962  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8381  00E966  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8382  00E96A  341A               	rlcf	(??___fldiv+3)^0,w,c
  8383  00E96C  321A               	rrcf	(??___fldiv+3)^0,f,c
  8384  00E96E  3219               	rrcf	(??___fldiv+2)^0,f,c
  8385  00E970  3218               	rrcf	(??___fldiv+1)^0,f,c
  8386  00E972  3217               	rrcf	??___fldiv^0,f,c
  8387  00E974  C017  F00F         	movff	??___fldiv,___fldiv@b
  8388  00E978  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8389  00E97C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8390  00E980  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8391  00E984  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8392  00E986  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8393  00E988                     l4613:
  8394  00E988  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8395  00E98A  D010               	goto	l4617
  8396  00E98C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8397  00E98E  E103               	bnz	u4040
  8398  00E990  2820               	incf	___fldiv@new_exp^0,w,c
  8399  00E992  A0D8               	btfss	status,0,c
  8400  00E994  D00B               	goto	l4617
  8401  00E996                     u4040:
  8402  00E996  0E00               	movlw	0
  8403  00E998  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8404  00E99A  6820               	setf	___fldiv@new_exp^0,c
  8405  00E99C  0E00               	movlw	0
  8406  00E99E  6E0F               	movwf	___fldiv@b^0,c
  8407  00E9A0  0E00               	movlw	0
  8408  00E9A2  6E10               	movwf	(___fldiv@b+1)^0,c
  8409  00E9A4  0E00               	movlw	0
  8410  00E9A6  6E11               	movwf	(___fldiv@b+2)^0,c
  8411  00E9A8  0E00               	movlw	0
  8412  00E9AA  6E12               	movwf	(___fldiv@b+3)^0,c
  8413  00E9AC                     l4617:
  8414  00E9AC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8415  00E9AE  D005               	goto	u4050
  8416  00E9B0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8417  00E9B2  E111               	bnz	l4621
  8418  00E9B4  0420               	decf	___fldiv@new_exp^0,w,c
  8419  00E9B6  B0D8               	btfsc	status,0,c
  8420  00E9B8  D00E               	goto	l4621
  8421  00E9BA                     u4050:
  8422  00E9BA  0E00               	movlw	0
  8423  00E9BC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8424  00E9BE  0E00               	movlw	0
  8425  00E9C0  6E20               	movwf	___fldiv@new_exp^0,c
  8426  00E9C2  0E00               	movlw	0
  8427  00E9C4  6E0F               	movwf	___fldiv@b^0,c
  8428  00E9C6  0E00               	movlw	0
  8429  00E9C8  6E10               	movwf	(___fldiv@b+1)^0,c
  8430  00E9CA  0E00               	movlw	0
  8431  00E9CC  6E11               	movwf	(___fldiv@b+2)^0,c
  8432  00E9CE  0E00               	movlw	0
  8433  00E9D0  6E12               	movwf	(___fldiv@b+3)^0,c
  8434  00E9D2  0E00               	movlw	0
  8435  00E9D4  6E1F               	movwf	___fldiv@sign^0,c
  8436  00E9D6                     l4621:
  8437  00E9D6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8438  00E9DA  A026               	btfss	___fldiv@bexp^0,0,c
  8439  00E9DC  D002               	goto	l4627
  8440  00E9DE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8441  00E9E0  D001               	goto	l4629
  8442  00E9E2                     l4627:
  8443  00E9E2  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8444  00E9E4                     l4629:
  8445  00E9E4  90D8               	bcf	status,0,c
  8446  00E9E6  3026               	rrcf	___fldiv@bexp^0,w,c
  8447  00E9E8  6E12               	movwf	(___fldiv@b+3)^0,c
  8448  00E9EA  D70E               	goto	l4543
  8449  00E9EC                     __end_of___fldiv:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _SPI2ReadByte *****************
  8453 ;; Defined at:
  8454 ;;		line 119 in file "LoRa.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  address         1    wreg     unsigned char 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  address         1    0[COMRAM] unsigned char 
  8459 ;;  dataByte        1    1[COMRAM] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;Total ram usage:        2 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_readOpModeRegister
  8479 ;;		_LoRaGetFrequency
  8480 ;;		_LoRaGetIRQFlags
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text39
  8485  00D2D0                     __ptext39:
  8486                           	callstack 0
  8487  00D2D0                     _SPI2ReadByte:
  8488                           	callstack 26
  8489                           
  8490                           ;incstack = 0
  8491                           ;SPI2ReadByte@address stored from wreg
  8492  00D2D0  6E01               	movwf	SPI2ReadByte@address^0,c
  8493                           
  8494                           ;LoRa.c: 120: SSP2IF=0;
  8495  00D2D2  9EA4               	bcf	4004,7,c	;volatile
  8496                           
  8497                           ;LoRa.c: 121: LATDbits.LATD3=0;
  8498  00D2D4  968C               	bcf	140,3,c	;volatile
  8499                           
  8500                           ;LoRa.c: 122: SSP2BUF=address;
  8501  00D2D6  C001  FF6F         	movff	SPI2ReadByte@address,3951	;volatile
  8502  00D2DA                     l275:
  8503  00D2DA  AEA4               	btfss	4004,7,c	;volatile
  8504  00D2DC  D7FE               	goto	l275
  8505                           
  8506                           ;LoRa.c: 125: };LoRa.c: 126: SSP2IF=0;
  8507  00D2DE  9EA4               	bcf	4004,7,c	;volatile
  8508                           
  8509                           ;LoRa.c: 127: SSP2BUF=0;
  8510  00D2E0  0E00               	movlw	0
  8511  00D2E2  6E6F               	movwf	111,c	;volatile
  8512  00D2E4                     l278:
  8513  00D2E4  AEA4               	btfss	4004,7,c	;volatile
  8514  00D2E6  D7FE               	goto	l278
  8515                           
  8516                           ;LoRa.c: 130: };LoRa.c: 131: SSP2IF=0;
  8517  00D2E8  9EA4               	bcf	4004,7,c	;volatile
  8518                           
  8519                           ;LoRa.c: 133: LATDbits.LATD3=1;
  8520  00D2EA  868C               	bsf	140,3,c	;volatile
  8521                           
  8522                           ;LoRa.c: 134: uint8_t dataByte = SSP2BUF;
  8523  00D2EC  CF6F F002          	movff	3951,SPI2ReadByte@dataByte	;volatile
  8524                           
  8525                           ;LoRa.c: 135: return dataByte;
  8526  00D2F0  5002               	movf	SPI2ReadByte@dataByte^0,w,c
  8527  00D2F2  0012               	return		;funcret
  8528  00D2F4                     __end_of_SPI2ReadByte:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function _LoRaClearIRQFlags *****************
  8532 ;; Defined at:
  8533 ;;		line 249 in file "LoRa.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    1
  8554 ;; This function calls:
  8555 ;;		_SPI2WriteByte
  8556 ;; This function is called by:
  8557 ;;		_transmitValues
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text40
  8562  00D1C6                     __ptext40:
  8563                           	callstack 0
  8564  00D1C6                     _LoRaClearIRQFlags:
  8565                           	callstack 28
  8566                           
  8567                           ;LoRa.c: 250: SPI2WriteByte(0x12,0xFF);
  8568                           
  8569                           ;incstack = 0
  8570  00D1C6  0EFF               	movlw	255
  8571  00D1C8  6E01               	movwf	SPI2WriteByte@data^0,c
  8572  00D1CA  0E12               	movlw	18
  8573  00D1CC  ECA1  F06A         	call	_SPI2WriteByte
  8574  00D1D0  0012               	return		;funcret
  8575  00D1D2                     __end_of_LoRaClearIRQFlags:
  8576                           	callstack 0
  8577                           
  8578 ;; *************** function _SPI2WriteByte *****************
  8579 ;; Defined at:
  8580 ;;		line 91 in file "LoRa.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  address         1    wreg     unsigned char 
  8583 ;;  data            1    0[COMRAM] unsigned char 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  address         1    2[COMRAM] unsigned char 
  8586 ;;  dataByte        1    0        unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;Total ram usage:        3 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_writeOpModeRegister
  8606 ;;		_LoRaTXData
  8607 ;;		_LoRaSetFrequency
  8608 ;;		_LoRaClearIRQFlags
  8609 ;;		_LoRaOptimalLoad
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text41
  8614  00D542                     __ptext41:
  8615                           	callstack 0
  8616  00D542                     _SPI2WriteByte:
  8617                           	callstack 28
  8618                           
  8619                           ;incstack = 0
  8620                           ;SPI2WriteByte@address stored from wreg
  8621  00D542  6E03               	movwf	SPI2WriteByte@address^0,c
  8622                           
  8623                           ;LoRa.c: 92: SSP2IF=0;
  8624  00D544  9EA4               	bcf	4004,7,c	;volatile
  8625                           
  8626                           ;LoRa.c: 93: LATDbits.LATD3=0;
  8627  00D546  968C               	bcf	140,3,c	;volatile
  8628                           
  8629                           ;LoRa.c: 94: _delay((unsigned long)((5)*(64000000/4000000.0)));
  8630  00D548  0E1A               	movlw	26
  8631  00D54A                     u4377:
  8632  00D54A  2EE8               	decfsz	wreg,f,c
  8633  00D54C  D7FE               	bra	u4377
  8634  00D54E  D000               	nop2	
  8635                           
  8636                           ;LoRa.c: 95: address = address|0x80;
  8637  00D550  5003               	movf	SPI2WriteByte@address^0,w,c
  8638  00D552  0980               	iorlw	128
  8639  00D554  6E03               	movwf	SPI2WriteByte@address^0,c
  8640                           
  8641                           ;LoRa.c: 96: SSP2BUF=address;
  8642  00D556  C003  FF6F         	movff	SPI2WriteByte@address,3951	;volatile
  8643  00D55A                     l266:
  8644  00D55A  AEA4               	btfss	4004,7,c	;volatile
  8645  00D55C  D7FE               	goto	l266
  8646                           
  8647                           ;LoRa.c: 99: };LoRa.c: 100: SSP2IF=0;
  8648  00D55E  9EA4               	bcf	4004,7,c	;volatile
  8649                           
  8650                           ;LoRa.c: 101: _delay((unsigned long)((5)*(64000000/4000000.0)));
  8651  00D560  0E1A               	movlw	26
  8652  00D562                     u4387:
  8653  00D562  2EE8               	decfsz	wreg,f,c
  8654  00D564  D7FE               	bra	u4387
  8655  00D566  D000               	nop2	
  8656                           
  8657                           ;LoRa.c: 102: SSP2BUF=data;
  8658  00D568  C001  FF6F         	movff	SPI2WriteByte@data,3951	;volatile
  8659  00D56C                     l269:
  8660  00D56C  AEA4               	btfss	4004,7,c	;volatile
  8661  00D56E  D7FE               	goto	l269
  8662                           
  8663                           ;LoRa.c: 105: };LoRa.c: 106: _delay((unsigned long)((5)*(64000000/4000000.0)));
  8664  00D570  0E1A               	movlw	26
  8665  00D572                     u4397:
  8666  00D572  2EE8               	decfsz	wreg,f,c
  8667  00D574  D7FE               	bra	u4397
  8668  00D576  D000               	nop2	
  8669                           
  8670                           ;LoRa.c: 107: LATDbits.LATD3=1;
  8671  00D578  868C               	bsf	140,3,c	;volatile
  8672                           
  8673                           ;LoRa.c: 108: SSP2IF=0;
  8674  00D57A  9EA4               	bcf	4004,7,c	;volatile
  8675  00D57C  506F               	movf	111,w,c	;volatile
  8676  00D57E  0012               	return		;funcret
  8677  00D580                     __end_of_SPI2WriteByte:
  8678                           	callstack 0
  8679                           
  8680 ;; *************** function _CRC16 *****************
  8681 ;; Defined at:
  8682 ;;		line 10 in file "CRC16.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  nData           1    0[COMRAM] PTR const unsigned char 
  8685 ;;		 -> txData(50), 
  8686 ;;  wLength         2    1[COMRAM] unsigned short 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  wCRCWord        2    6[COMRAM] unsigned short 
  8689 ;;  nTemp           1    5[COMRAM] unsigned char 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  2    0[COMRAM] unsigned short 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8694 ;; Tracked objects:
  8695 ;;		On entry : 3F/0
  8696 ;;		On exit  : 3F/0
  8697 ;;		Unchanged: 3F/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8699 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;Total ram usage:        8 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_transmitValues
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text42
  8713  00D7D0                     __ptext42:
  8714                           	callstack 0
  8715  00D7D0                     _CRC16:
  8716                           	callstack 29
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;CRC16.c: 11: static const unsigned short int wCRCTable[] = {;CRC16.c: 12: 0X0000, 0XC0C
      +                          1, 0XC181, 0X0140, 0XC301, 0X03C0, 0X0280, 0XC241,;CRC16.c: 13: 0XC601, 0X06C0, 0X0780, 
      +                          0XC741, 0X0500, 0XC5C1, 0XC481, 0X0440,;CRC16.c: 14: 0XCC01, 0X0CC0, 0X0D80, 0XCD41, 0X0
      +                          F00, 0XCFC1, 0XCE81, 0X0E40,;CRC16.c: 15: 0X0A00, 0XCAC1, 0XCB81, 0X0B40, 0XC901, 0X09C0
      +                          , 0X0880, 0XC841,;CRC16.c: 16: 0XD801, 0X18C0, 0X1980, 0XD941, 0X1B00, 0XDBC1, 0XDA81, 0
      +                          X1A40,;CRC16.c: 17: 0X1E00, 0XDEC1, 0XDF81, 0X1F40, 0XDD01, 0X1DC0, 0X1C80, 0XDC41,
  8720                           
  8721                           ;incstack = 0
  8722  00D7D0  6807               	setf	CRC16@wCRCWord^0,c
  8723  00D7D2  6808               	setf	(CRC16@wCRCWord+1)^0,c
  8724                           
  8725                           ;CRC16.c: 48: while (wLength--){
  8726  00D7D4  D01C               	goto	l4725
  8727  00D7D6                     l4717:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;CRC16.c: 49: nTemp = *nData++ ^ wCRCWord;
  8731  00D7D6  5001               	movf	CRC16@nData^0,w,c
  8732  00D7D8  6ED9               	movwf	fsr2l,c
  8733  00D7DA  6ADA               	clrf	fsr2h,c
  8734  00D7DC  50DF               	movf	indf2,w,c
  8735  00D7DE  1807               	xorwf	CRC16@wCRCWord^0,w,c
  8736  00D7E0  6E06               	movwf	CRC16@nTemp^0,c
  8737                           
  8738                           ; BSR set to: 0
  8739  00D7E2  2A01               	incf	CRC16@nData^0,f,c
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;CRC16.c: 50: wCRCWord >>= 8;
  8743  00D7E4  C008  F007         	movff	CRC16@wCRCWord+1,CRC16@wCRCWord
  8744  00D7E8  6A08               	clrf	(CRC16@wCRCWord+1)^0,c
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;CRC16.c: 51: wCRCWord ^= wCRCTable[nTemp];
  8748  00D7EA  5006               	movf	CRC16@nTemp^0,w,c
  8749  00D7EC  0D02               	mullw	2
  8750  00D7EE  0E4D               	movlw	low CRC16@wCRCTable
  8751  00D7F0  24F3               	addwf	243,w,c
  8752  00D7F2  6EF6               	movwf	tblptrl,c
  8753  00D7F4  0EFC               	movlw	high CRC16@wCRCTable
  8754  00D7F6  20F4               	addwfc	244,w,c
  8755  00D7F8  6EF7               	movwf	tblptrh,c
  8756  00D7FA                     	if	0	;There are less than 3 active tblptr bytes
  8757  00D7FA                     	endif
  8758  00D7FA  0009               	tblrd		*+
  8759  00D7FC  CFF5 F004          	movff	tablat,??_CRC16
  8760  00D800  0009               	tblrd		*+
  8761  00D802  CFF5 F005          	movff	tablat,??_CRC16+1
  8762  00D806  5004               	movf	??_CRC16^0,w,c
  8763  00D808  1A07               	xorwf	CRC16@wCRCWord^0,f,c
  8764  00D80A  5005               	movf	(??_CRC16+1)^0,w,c
  8765  00D80C  1A08               	xorwf	(CRC16@wCRCWord+1)^0,f,c
  8766  00D80E                     l4725:
  8767                           
  8768                           ; BSR set to: 0
  8769  00D80E  0602               	decf	CRC16@wLength^0,f,c
  8770  00D810  A0D8               	btfss	status,0,c
  8771  00D812  0603               	decf	(CRC16@wLength+1)^0,f,c
  8772  00D814  2802               	incf	CRC16@wLength^0,w,c
  8773  00D816  E1DF               	bnz	l4717
  8774  00D818  2803               	incf	(CRC16@wLength+1)^0,w,c
  8775  00D81A  A4D8               	btfss	status,2,c
  8776  00D81C  D7DC               	goto	l4717
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;CRC16.c: 52: };CRC16.c: 53: return wCRCWord;
  8780  00D81E  C007  F001         	movff	CRC16@wCRCWord,?_CRC16
  8781  00D822  C008  F002         	movff	CRC16@wCRCWord+1,?_CRC16+1
  8782                           
  8783                           ; BSR set to: 0
  8784  00D826  0012               	return		;funcret
  8785  00D828                     __end_of_CRC16:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function _readVisValue *****************
  8789 ;; Defined at:
  8790 ;;		line 179 in file "main.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;Total ram usage:        0 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    3
  8811 ;; This function calls:
  8812 ;;		_BH1750ReadValue
  8813 ;; This function is called by:
  8814 ;;		_main
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text43
  8819  00D1DE                     __ptext43:
  8820                           	callstack 0
  8821  00D1DE                     _readVisValue:
  8822                           	callstack 27
  8823                           
  8824                           ;main.c: 180: vis = BH1750ReadValue();
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;incstack = 0
  8828  00D1DE  EC09  F06A         	call	_BH1750ReadValue	;wreg free
  8829  00D1E2  C005  F068         	movff	?_BH1750ReadValue,_vis
  8830  00D1E6  C006  F069         	movff	?_BH1750ReadValue+1,_vis+1
  8831  00D1EA  0012               	return		;funcret
  8832  00D1EC                     __end_of_readVisValue:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _BH1750ReadValue *****************
  8836 ;; Defined at:
  8837 ;;		line 69 in file "BH1750.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  lsb             1    9[COMRAM] unsigned char 
  8842 ;;  msb             1    8[COMRAM] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  2    4[COMRAM] unsigned int 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;Total ram usage:        6 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    2
  8859 ;; This function calls:
  8860 ;;		_I2C1_Read_Byte
  8861 ;;		_I2C1_Start
  8862 ;;		_I2C1_Stop
  8863 ;;		_I2C1_Write_Byte_Read_Ack
  8864 ;; This function is called by:
  8865 ;;		_readVisValue
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text44
  8870  00D412                     __ptext44:
  8871                           	callstack 0
  8872  00D412                     _BH1750ReadValue:
  8873                           	callstack 27
  8874                           
  8875                           ;BH1750.c: 70: I2C1_Start();
  8876                           
  8877                           ;incstack = 0
  8878  00D412  ECC4  F068         	call	_I2C1_Start	;wreg free
  8879                           
  8880                           ;BH1750.c: 71: I2C1_Write_Byte_Read_Ack(bh1750Address+1u);
  8881  00D416  285F               	incf	_bh1750Address^0,w,c
  8882  00D418  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  8883                           
  8884                           ;BH1750.c: 72: char msb = I2C1_Read_Byte(1);
  8885  00D41C  0E01               	movlw	1
  8886  00D41E  EC7A  F069         	call	_I2C1_Read_Byte
  8887  00D422  6E09               	movwf	BH1750ReadValue@msb^0,c
  8888                           
  8889                           ;BH1750.c: 73: char lsb = I2C1_Read_Byte(1);
  8890  00D424  0E01               	movlw	1
  8891  00D426  EC7A  F069         	call	_I2C1_Read_Byte
  8892  00D42A  6E0A               	movwf	BH1750ReadValue@lsb^0,c
  8893                           
  8894                           ;BH1750.c: 74: I2C1_Stop();
  8895  00D42C  ECC8  F068         	call	_I2C1_Stop	;wreg free
  8896                           
  8897                           ;BH1750.c: 75: return msb*256u+lsb;
  8898  00D430  5009               	movf	BH1750ReadValue@msb^0,w,c
  8899  00D432  6E07               	movwf	??_BH1750ReadValue^0,c
  8900  00D434  500A               	movf	BH1750ReadValue@lsb^0,w,c
  8901  00D436  6E05               	movwf	?_BH1750ReadValue^0,c
  8902  00D438  C007  F006         	movff	??_BH1750ReadValue,?_BH1750ReadValue+1
  8903  00D43C  0012               	return		;funcret
  8904  00D43E                     __end_of_BH1750ReadValue:
  8905                           	callstack 0
  8906                           
  8907 ;; *************** function _readUV *****************
  8908 ;; Defined at:
  8909 ;;		line 12 in file "uv.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;		None
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;		None
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  1    wreg      void 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;Total ram usage:        0 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:    3
  8930 ;; This function calls:
  8931 ;;		_I2C1_Check_Data_Stuck
  8932 ;;		_readVEML6075
  8933 ;; This function is called by:
  8934 ;;		_main
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text45
  8939  00D72C                     __ptext45:
  8940                           	callstack 0
  8941  00D72C                     _readUV:
  8942                           	callstack 27
  8943                           
  8944                           ;uv.c: 13: I2C1_Check_Data_Stuck();
  8945                           
  8946                           ;incstack = 0
  8947  00D72C  EC67  F06A         	call	_I2C1_Check_Data_Stuck	;wreg free
  8948                           
  8949                           ;uv.c: 14: uvaReading = readVEML6075(0x20, 0x07);
  8950  00D730  0E07               	movlw	7
  8951  00D732  6E05               	movwf	readVEML6075@command^0,c
  8952  00D734  0E20               	movlw	32
  8953  00D736  ECC0  F06A         	call	_readVEML6075
  8954  00D73A  C005  F070         	movff	?_readVEML6075,_uvaReading
  8955  00D73E  C006  F071         	movff	?_readVEML6075+1,_uvaReading+1
  8956                           
  8957                           ;uv.c: 15: uvbReading = readVEML6075(0x20, 0x09);
  8958  00D742  0E09               	movlw	9
  8959  00D744  6E05               	movwf	readVEML6075@command^0,c
  8960  00D746  0E20               	movlw	32
  8961  00D748  ECC0  F06A         	call	_readVEML6075
  8962  00D74C  C005  F06E         	movff	?_readVEML6075,_uvbReading
  8963  00D750  C006  F06F         	movff	?_readVEML6075+1,_uvbReading+1
  8964                           
  8965                           ;uv.c: 16: comp1Reading = readVEML6075(0x20, 0x0A);
  8966  00D754  0E0A               	movlw	10
  8967  00D756  6E05               	movwf	readVEML6075@command^0,c
  8968  00D758  0E20               	movlw	32
  8969  00D75A  ECC0  F06A         	call	_readVEML6075
  8970  00D75E  C005  F06C         	movff	?_readVEML6075,_comp1Reading
  8971  00D762  C006  F06D         	movff	?_readVEML6075+1,_comp1Reading+1
  8972                           
  8973                           ;uv.c: 17: comp2Reading = readVEML6075(0x20, 0x0B);
  8974  00D766  0E0B               	movlw	11
  8975  00D768  6E05               	movwf	readVEML6075@command^0,c
  8976  00D76A  0E20               	movlw	32
  8977  00D76C  ECC0  F06A         	call	_readVEML6075
  8978  00D770  C005  F06A         	movff	?_readVEML6075,_comp2Reading
  8979  00D774  C006  F06B         	movff	?_readVEML6075+1,_comp2Reading+1
  8980  00D778  0012               	return		;funcret
  8981  00D77A                     __end_of_readUV:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function _readVEML6075 *****************
  8985 ;; Defined at:
  8986 ;;		line 36 in file "VEML6075.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  address         1    wreg     unsigned char 
  8989 ;;  command         1    4[COMRAM] unsigned char 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  address         1   10[COMRAM] unsigned char 
  8992 ;;  msb             1    9[COMRAM] unsigned char 
  8993 ;;  lsb             1    8[COMRAM] unsigned char 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  2    4[COMRAM] unsigned int 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2, status,0, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;Total ram usage:        7 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    2
  9010 ;; This function calls:
  9011 ;;		_I2C1_Read_Byte
  9012 ;;		_I2C1_Repeated_Start
  9013 ;;		_I2C1_Start
  9014 ;;		_I2C1_Stop
  9015 ;;		_I2C1_Write_Byte_Read_Ack
  9016 ;; This function is called by:
  9017 ;;		_readUV
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text46
  9022  00D580                     __ptext46:
  9023                           	callstack 0
  9024  00D580                     _readVEML6075:
  9025                           	callstack 27
  9026                           
  9027                           ;incstack = 0
  9028                           ;readVEML6075@address stored from wreg
  9029  00D580  6E0B               	movwf	readVEML6075@address^0,c
  9030                           
  9031                           ;VEML6075.c: 37: I2C1_Start();
  9032  00D582  ECC4  F068         	call	_I2C1_Start	;wreg free
  9033                           
  9034                           ;VEML6075.c: 38: i2cFault = I2C1_Write_Byte_Read_Ack(address);
  9035  00D586  500B               	movf	readVEML6075@address^0,w,c
  9036  00D588  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9037  00D58C  6E5E               	movwf	_i2cFault^0,c
  9038                           
  9039                           ;VEML6075.c: 39: i2cFault = I2C1_Write_Byte_Read_Ack(command);
  9040  00D58E  5005               	movf	readVEML6075@command^0,w,c
  9041  00D590  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9042  00D594  6E5E               	movwf	_i2cFault^0,c
  9043                           
  9044                           ;VEML6075.c: 40: I2C1_Repeated_Start();
  9045  00D596  ECCC  F068         	call	_I2C1_Repeated_Start	;wreg free
  9046                           
  9047                           ;VEML6075.c: 42: i2cFault = I2C1_Write_Byte_Read_Ack(address+1u);
  9048  00D59A  280B               	incf	readVEML6075@address^0,w,c
  9049  00D59C  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9050  00D5A0  6E5E               	movwf	_i2cFault^0,c
  9051                           
  9052                           ;VEML6075.c: 43: char lsb = I2C1_Read_Byte(1);
  9053  00D5A2  0E01               	movlw	1
  9054  00D5A4  EC7A  F069         	call	_I2C1_Read_Byte
  9055  00D5A8  6E09               	movwf	readVEML6075@lsb^0,c
  9056                           
  9057                           ;VEML6075.c: 44: char msb = I2C1_Read_Byte(0);
  9058  00D5AA  0E00               	movlw	0
  9059  00D5AC  EC7A  F069         	call	_I2C1_Read_Byte
  9060  00D5B0  6E0A               	movwf	readVEML6075@msb^0,c
  9061                           
  9062                           ;VEML6075.c: 45: I2C1_Stop();
  9063  00D5B2  ECC8  F068         	call	_I2C1_Stop	;wreg free
  9064                           
  9065                           ;VEML6075.c: 46: return msb*256u+lsb;
  9066  00D5B6  500A               	movf	readVEML6075@msb^0,w,c
  9067  00D5B8  6E07               	movwf	??_readVEML6075^0,c
  9068  00D5BA  5009               	movf	readVEML6075@lsb^0,w,c
  9069  00D5BC  6E05               	movwf	?_readVEML6075^0,c
  9070  00D5BE  C007  F006         	movff	??_readVEML6075,?_readVEML6075+1
  9071  00D5C2  0012               	return		;funcret
  9072  00D5C4                     __end_of_readVEML6075:
  9073                           	callstack 0
  9074                           
  9075 ;; *************** function _I2C1_Repeated_Start *****************
  9076 ;; Defined at:
  9077 ;;		line 60 in file "i2c1.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;Total ram usage:        0 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:    1
  9098 ;; This function calls:
  9099 ;;		_I2C1_Wait
  9100 ;; This function is called by:
  9101 ;;		_readVEML6075
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text47
  9106  00D198                     __ptext47:
  9107                           	callstack 0
  9108  00D198                     _I2C1_Repeated_Start:
  9109                           	callstack 27
  9110                           
  9111                           ;i2c1.c: 61: I2C1_Wait();
  9112                           
  9113                           ;incstack = 0
  9114  00D198  EC58  F069         	call	_I2C1_Wait	;wreg free
  9115                           
  9116                           ;i2c1.c: 62: SSP1CON2bits.RSEN1=1;
  9117  00D19C  82C5               	bsf	197,1,c	;volatile
  9118  00D19E  0012               	return		;funcret
  9119  00D1A0                     __end_of_I2C1_Repeated_Start:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _I2C1_Read_Byte *****************
  9123 ;; Defined at:
  9124 ;;		line 84 in file "i2c1.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  a               1    wreg     unsigned char 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  a               1    2[COMRAM] unsigned char 
  9129 ;;  temp            1    3[COMRAM] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      unsigned char 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;Total ram usage:        2 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    1
  9146 ;; This function calls:
  9147 ;;		_I2C1_Wait
  9148 ;; This function is called by:
  9149 ;;		_readVEML6075
  9150 ;;		_BH1750ReadValue
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text48
  9155  00D2F4                     __ptext48:
  9156                           	callstack 0
  9157  00D2F4                     _I2C1_Read_Byte:
  9158                           	callstack 27
  9159                           
  9160                           ;incstack = 0
  9161                           ;I2C1_Read_Byte@a stored from wreg
  9162  00D2F4  6E03               	movwf	I2C1_Read_Byte@a^0,c
  9163                           
  9164                           ;i2c1.c: 85: unsigned char temp;;i2c1.c: 86: I2C1_Wait();
  9165  00D2F6  EC58  F069         	call	_I2C1_Wait	;wreg free
  9166                           
  9167                           ;i2c1.c: 87: RCEN1 = 1;
  9168  00D2FA  86C5               	bsf	4037,3,c	;volatile
  9169                           
  9170                           ;i2c1.c: 88: I2C1_Wait();
  9171  00D2FC  EC58  F069         	call	_I2C1_Wait	;wreg free
  9172                           
  9173                           ;i2c1.c: 89: temp = SSPBUF;
  9174  00D300  CFC9 F004          	movff	4041,I2C1_Read_Byte@temp	;volatile
  9175                           
  9176                           ;i2c1.c: 90: I2C1_Wait();
  9177  00D304  EC58  F069         	call	_I2C1_Wait	;wreg free
  9178                           
  9179                           ;i2c1.c: 91: ACKDT1 = (a)?0:1;
  9180  00D308  5003               	movf	I2C1_Read_Byte@a^0,w,c
  9181  00D30A  A4D8               	btfss	status,2,c
  9182  00D30C  D002               	goto	u3820
  9183  00D30E  8AC5               	bsf	4037,5,c	;volatile
  9184  00D310  D001               	goto	u3835
  9185  00D312                     u3820:
  9186  00D312  9AC5               	bcf	4037,5,c	;volatile
  9187  00D314                     u3835:
  9188                           
  9189                           ;i2c1.c: 92: ACKEN1 = 1;
  9190  00D314  88C5               	bsf	4037,4,c	;volatile
  9191                           
  9192                           ;i2c1.c: 93: return temp;
  9193  00D316  5004               	movf	I2C1_Read_Byte@temp^0,w,c
  9194  00D318  0012               	return		;funcret
  9195  00D31A                     __end_of_I2C1_Read_Byte:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _readTemperature *****************
  9199 ;; Defined at:
  9200 ;;		line 342 in file "main.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  result          2    4[COMRAM] unsigned int 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2    0[COMRAM] unsigned int 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;Total ram usage:        6 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_main
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           	psect	text49
  9228  00D43E                     __ptext49:
  9229                           	callstack 0
  9230  00D43E                     _readTemperature:
  9231                           	callstack 30
  9232                           
  9233                           ;main.c: 343: ADCON1bits.PVCFG=0;
  9234                           
  9235                           ;incstack = 0
  9236  00D43E  0EF3               	movlw	-13
  9237  00D440  16C1               	andwf	193,f,c	;volatile
  9238                           
  9239                           ;main.c: 345: ADCON0bits.CHS=1;
  9240  00D442  50C2               	movf	194,w,c	;volatile
  9241  00D444  0B83               	andlw	-125
  9242  00D446  0904               	iorlw	4
  9243  00D448  6EC2               	movwf	194,c	;volatile
  9244                           
  9245                           ;main.c: 346: ADCON0bits.GO_NOT_DONE=1;
  9246  00D44A  82C2               	bsf	194,1,c	;volatile
  9247  00D44C                     l192:
  9248  00D44C  B2C2               	btfsc	194,1,c	;volatile
  9249  00D44E  D7FE               	goto	l192
  9250                           
  9251                           ;main.c: 349: };main.c: 350: uint16_t result = ADRESH * 256 + ADRESL;
  9252  00D450  50C4               	movf	196,w,c	;volatile
  9253  00D452  6E04               	movwf	(??_readTemperature+1)^0,c
  9254  00D454  6A03               	clrf	??_readTemperature^0,c
  9255  00D456  50C3               	movf	195,w,c	;volatile
  9256  00D458  2403               	addwf	??_readTemperature^0,w,c
  9257  00D45A  6E05               	movwf	readTemperature@result^0,c
  9258  00D45C  0E00               	movlw	0
  9259  00D45E  2004               	addwfc	(??_readTemperature+1)^0,w,c
  9260  00D460  6E06               	movwf	(readTemperature@result+1)^0,c
  9261                           
  9262                           ;main.c: 351: return result;
  9263  00D462  C005  F001         	movff	readTemperature@result,?_readTemperature
  9264  00D466  C006  F002         	movff	readTemperature@result+1,?_readTemperature+1
  9265  00D46A  0012               	return		;funcret
  9266  00D46C                     __end_of_readTemperature:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _readBattery *****************
  9270 ;; Defined at:
  9271 ;;		line 332 in file "main.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  result          2    4[COMRAM] unsigned int 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  2    0[COMRAM] unsigned int 
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;Total ram usage:        6 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_main
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text50
  9299  00D392                     __ptext50:
  9300                           	callstack 0
  9301  00D392                     _readBattery:
  9302                           	callstack 30
  9303                           
  9304                           ;main.c: 333: ADCON1bits.PVCFG=0b10;
  9305                           
  9306                           ;incstack = 0
  9307  00D392  50C1               	movf	193,w,c	;volatile
  9308  00D394  0BF3               	andlw	-13
  9309  00D396  0908               	iorlw	8
  9310  00D398  6EC1               	movwf	193,c	;volatile
  9311                           
  9312                           ;main.c: 334: ADCON0bits.GO_NOT_DONE=1;
  9313  00D39A  82C2               	bsf	194,1,c	;volatile
  9314  00D39C                     l186:
  9315  00D39C  B2C2               	btfsc	194,1,c	;volatile
  9316  00D39E  D7FE               	goto	l186
  9317                           
  9318                           ;main.c: 337: };main.c: 338: uint16_t result = ADRESH * 256 + ADRESL;
  9319  00D3A0  50C4               	movf	196,w,c	;volatile
  9320  00D3A2  6E04               	movwf	(??_readBattery+1)^0,c
  9321  00D3A4  6A03               	clrf	??_readBattery^0,c
  9322  00D3A6  50C3               	movf	195,w,c	;volatile
  9323  00D3A8  2403               	addwf	??_readBattery^0,w,c
  9324  00D3AA  6E05               	movwf	readBattery@result^0,c
  9325  00D3AC  0E00               	movlw	0
  9326  00D3AE  2004               	addwfc	(??_readBattery+1)^0,w,c
  9327  00D3B0  6E06               	movwf	(readBattery@result+1)^0,c
  9328                           
  9329                           ;main.c: 339: return result;
  9330  00D3B2  C005  F001         	movff	readBattery@result,?_readBattery
  9331  00D3B6  C006  F002         	movff	readBattery@result+1,?_readBattery+1
  9332  00D3BA  0012               	return		;funcret
  9333  00D3BC                     __end_of_readBattery:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _configureIO *****************
  9337 ;; Defined at:
  9338 ;;		line 152 in file "main.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    4
  9359 ;; This function calls:
  9360 ;;		_I2C1_Check_Data_Stuck
  9361 ;;		_I2C1_Initialize
  9362 ;;		_USART2_Start
  9363 ;;		_VEML6075Start
  9364 ;;		_setBH1750Address
  9365 ;;		_setBH1750ContinuousHResolutionMode
  9366 ;;		_setupAtoD
  9367 ;; This function is called by:
  9368 ;;		_main
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text51
  9373  00D5C4                     __ptext51:
  9374                           	callstack 0
  9375  00D5C4                     _configureIO:
  9376                           	callstack 26
  9377                           
  9378                           ;main.c: 153: PMD2bits.ADCMD=0;
  9379                           
  9380                           ;incstack = 0
  9381  00D5C4  010F               	movlb	15	; () banked
  9382  00D5C6  913D               	bcf	61,0,b	;volatile
  9383                           
  9384                           ; BSR set to: 15
  9385                           ;main.c: 156: };main.c: 157: PMD1bits.MSSP1MD=0;
  9386                           
  9387                           ;main.c: 154: if(0){
  9388  00D5C8  9D3E               	bcf	62,6,b	;volatile
  9389                           
  9390                           ;main.c: 158: PMD1bits.MSSP2MD=0;
  9391  00D5CA  9F3E               	bcf	62,7,b	;volatile
  9392                           
  9393                           ;main.c: 159: ANSELAbits.ANSA2=0;
  9394  00D5CC  9538               	bcf	56,2,b	;volatile
  9395                           
  9396                           ;main.c: 160: TRISAbits.RA2=0;
  9397  00D5CE  9492               	bcf	146,2,c	;volatile
  9398                           
  9399                           ;main.c: 161: LATAbits.LATA2=0;
  9400  00D5D0  9489               	bcf	137,2,c	;volatile
  9401                           
  9402                           ;main.c: 162: ANSELEbits.ANSE1=0;
  9403  00D5D2  933C               	bcf	60,1,b	;volatile
  9404                           
  9405                           ;main.c: 163: ANSELEbits.ANSE2=0;
  9406  00D5D4  953C               	bcf	60,2,b	;volatile
  9407                           
  9408                           ;main.c: 164: ANSELBbits.ANSB4=0;
  9409  00D5D6  9939               	bcf	57,4,b	;volatile
  9410                           
  9411                           ;main.c: 165: TRISEbits.RE1=0;
  9412  00D5D8  9296               	bcf	150,1,c	;volatile
  9413                           
  9414                           ;main.c: 166: TRISEbits.RE2=0;
  9415  00D5DA  9496               	bcf	150,2,c	;volatile
  9416                           
  9417                           ;main.c: 167: LATEbits.LATE2=0;
  9418  00D5DC  948D               	bcf	141,2,c	;volatile
  9419                           
  9420                           ; BSR set to: 15
  9421                           ;main.c: 170: };main.c: 171: setupAtoD();
  9422                           
  9423                           ;main.c: 168: if(0){
  9424  00D5DE  EC4D  F06A         	call	_setupAtoD	;wreg free
  9425                           
  9426                           ; BSR set to: 15
  9427                           ;main.c: 172: I2C1_Initialize(100000);
  9428  00D5E2  0EA0               	movlw	160
  9429  00D5E4  6E0E               	movwf	I2C1_Initialize@c^0,c
  9430  00D5E6  0E86               	movlw	134
  9431  00D5E8  6E0F               	movwf	(I2C1_Initialize@c+1)^0,c
  9432  00D5EA  0E01               	movlw	1
  9433  00D5EC  6E10               	movwf	(I2C1_Initialize@c+2)^0,c
  9434  00D5EE  0E00               	movlw	0
  9435  00D5F0  6E11               	movwf	(I2C1_Initialize@c+3)^0,c
  9436  00D5F2  ECBD  F06B         	call	_I2C1_Initialize	;wreg free
  9437                           
  9438                           ;main.c: 173: I2C1_Check_Data_Stuck();
  9439  00D5F6  EC67  F06A         	call	_I2C1_Check_Data_Stuck	;wreg free
  9440                           
  9441                           ;main.c: 174: VEML6075Start();
  9442  00D5FA  EC49  F069         	call	_VEML6075Start	;wreg free
  9443                           
  9444                           ;main.c: 175: setBH1750Address(0);
  9445  00D5FE  0E00               	movlw	0
  9446  00D600  EC05  F069         	call	_setBH1750Address
  9447                           
  9448                           ;main.c: 176: setBH1750ContinuousHResolutionMode();
  9449  00D604  ECDD  F068         	call	_setBH1750ContinuousHResolutionMode	;wreg free
  9450  00D608  0012               	return		;funcret
  9451  00D60A                     __end_of_configureIO:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _setupAtoD *****************
  9455 ;; Defined at:
  9456 ;;		line 354 in file "main.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2
  9465 ;; Tracked objects:
  9466 ;;		On entry : 3F/F
  9467 ;;		On exit  : 3F/F
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_configureIO
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text52
  9484  00D49A                     __ptext52:
  9485                           	callstack 0
  9486  00D49A                     _setupAtoD:
  9487                           	callstack 29
  9488                           
  9489                           ; BSR set to: 15
  9490                           ;main.c: 358: ANSELAbits.ANSA0=1;
  9491                           
  9492                           ;incstack = 0
  9493  00D49A  8138               	bsf	56,0,b	;volatile
  9494                           
  9495                           ;main.c: 359: ANSELAbits.ANSA1=1;
  9496  00D49C  8338               	bsf	56,1,b	;volatile
  9497                           
  9498                           ;main.c: 362: TRISAbits.RA0=1;
  9499  00D49E  8092               	bsf	146,0,c	;volatile
  9500                           
  9501                           ;main.c: 363: TRISAbits.RA1=1;
  9502  00D4A0  8292               	bsf	146,1,c	;volatile
  9503                           
  9504                           ; BSR set to: 15
  9505                           ;main.c: 366: ADCON1bits.PVCFG=0;
  9506  00D4A2  0EF3               	movlw	-13
  9507  00D4A4  16C1               	andwf	193,f,c	;volatile
  9508                           
  9509                           ;main.c: 367: ADCON1bits.NVCFG=0;
  9510  00D4A6  0EFC               	movlw	-4
  9511  00D4A8  16C1               	andwf	193,f,c	;volatile
  9512                           
  9513                           ;main.c: 368: VREFCON0bits.FVRS=0b01;
  9514  00D4AA  5142               	movf	66,w,b	;volatile
  9515  00D4AC  0BCF               	andlw	-49
  9516  00D4AE  0910               	iorlw	16
  9517  00D4B0  6F42               	movwf	66,b	;volatile
  9518                           
  9519                           ; BSR set to: 15
  9520                           ;main.c: 369: VREFCON0bits.FVREN=1;
  9521  00D4B2  8F42               	bsf	66,7,b	;volatile
  9522                           
  9523                           ;main.c: 372: ADCON0bits.CHS=0;
  9524  00D4B4  0E83               	movlw	-125
  9525  00D4B6  16C2               	andwf	194,f,c	;volatile
  9526                           
  9527                           ;main.c: 375: ADCON2bits.ACQT=0b010;
  9528  00D4B8  50C0               	movf	192,w,c	;volatile
  9529  00D4BA  0BC7               	andlw	-57
  9530  00D4BC  0910               	iorlw	16
  9531  00D4BE  6EC0               	movwf	192,c	;volatile
  9532                           
  9533                           ;main.c: 378: ADCON2bits.ADCS=0b110;
  9534  00D4C0  50C0               	movf	192,w,c	;volatile
  9535  00D4C2  0BF8               	andlw	-8
  9536  00D4C4  0906               	iorlw	6
  9537  00D4C6  6EC0               	movwf	192,c	;volatile
  9538                           
  9539                           ; BSR set to: 15
  9540                           ;main.c: 381: ADCON2bits.ADFM = 1;
  9541  00D4C8  8EC0               	bsf	192,7,c	;volatile
  9542                           
  9543                           ; BSR set to: 15
  9544                           ;main.c: 384: ADCON0bits.ADON=1;
  9545  00D4CA  80C2               	bsf	194,0,c	;volatile
  9546                           
  9547                           ; BSR set to: 15
  9548  00D4CC  0012               	return		;funcret
  9549  00D4CE                     __end_of_setupAtoD:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _setBH1750ContinuousHResolutionMode *****************
  9553 ;; Defined at:
  9554 ;;		line 16 in file "BH1750.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    3
  9575 ;; This function calls:
  9576 ;;		_BH1750WriteCommand
  9577 ;; This function is called by:
  9578 ;;		_main
  9579 ;;		_configureIO
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text53
  9584  00D1BA                     __ptext53:
  9585                           	callstack 0
  9586  00D1BA                     _setBH1750ContinuousHResolutionMode:
  9587                           	callstack 27
  9588                           
  9589                           ;BH1750.c: 17: BH1750WriteCommand(bh1750Address, 0b00010000);
  9590                           
  9591                           ; BSR set to: 15
  9592                           ;incstack = 0
  9593  00D1BA  0E10               	movlw	16
  9594  00D1BC  6E05               	movwf	BH1750WriteCommand@command^0,c
  9595  00D1BE  505F               	movf	_bh1750Address^0,w,c
  9596  00D1C0  EC23  F069         	call	_BH1750WriteCommand
  9597  00D1C4  0012               	return		;funcret
  9598  00D1C6                     __end_of_setBH1750ContinuousHResolutionMode:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _BH1750WriteCommand *****************
  9602 ;; Defined at:
  9603 ;;		line 58 in file "BH1750.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  address         1    wreg     unsigned char 
  9606 ;;  command         1    4[COMRAM] unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  address         1    5[COMRAM] unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;Total ram usage:        2 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    2
  9625 ;; This function calls:
  9626 ;;		_I2C1_Start
  9627 ;;		_I2C1_Stop
  9628 ;;		_I2C1_Write_Byte_Read_Ack
  9629 ;; This function is called by:
  9630 ;;		_setBH1750ContinuousHResolutionMode
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text54
  9635  00D246                     __ptext54:
  9636                           	callstack 0
  9637  00D246                     _BH1750WriteCommand:
  9638                           	callstack 27
  9639                           
  9640                           ;incstack = 0
  9641                           ;BH1750WriteCommand@address stored from wreg
  9642  00D246  6E06               	movwf	BH1750WriteCommand@address^0,c
  9643                           
  9644                           ;BH1750.c: 59: I2C1_Start();
  9645  00D248  ECC4  F068         	call	_I2C1_Start	;wreg free
  9646                           
  9647                           ;BH1750.c: 60: I2C1_Write_Byte_Read_Ack(address);
  9648  00D24C  5006               	movf	BH1750WriteCommand@address^0,w,c
  9649  00D24E  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9650                           
  9651                           ;BH1750.c: 61: I2C1_Write_Byte_Read_Ack(command);
  9652  00D252  5005               	movf	BH1750WriteCommand@command^0,w,c
  9653  00D254  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9654                           
  9655                           ;BH1750.c: 62: I2C1_Stop();
  9656  00D258  ECC8  F068         	call	_I2C1_Stop	;wreg free
  9657  00D25C  0012               	return		;funcret
  9658  00D25E                     __end_of_BH1750WriteCommand:
  9659                           	callstack 0
  9660                           
  9661 ;; *************** function _setBH1750Address *****************
  9662 ;; Defined at:
  9663 ;;		line 7 in file "BH1750.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  add             1    wreg     unsigned char 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  add             1    0[COMRAM] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/F
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;Total ram usage:        1 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_configureIO
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text55
  9691  00D20A                     __ptext55:
  9692                           	callstack 0
  9693  00D20A                     _setBH1750Address:
  9694                           	callstack 29
  9695                           
  9696                           ;incstack = 0
  9697                           ;setBH1750Address@add stored from wreg
  9698  00D20A  6E01               	movwf	setBH1750Address@add^0,c
  9699                           
  9700                           ;BH1750.c: 8: if(add>0){
  9701  00D20C  5001               	movf	setBH1750Address@add^0,w,c
  9702  00D20E  B4D8               	btfsc	status,2,c
  9703  00D210  D003               	goto	l4707
  9704                           
  9705                           ;BH1750.c: 9: bh1750Address = 0b10111000;
  9706  00D212  0EB8               	movlw	184
  9707  00D214  6E5F               	movwf	_bh1750Address^0,c
  9708                           
  9709                           ;BH1750.c: 10: }
  9710  00D216  0012               	return	
  9711  00D218                     l4707:
  9712                           
  9713                           ;BH1750.c: 11: else{;BH1750.c: 12: bh1750Address=0b01000110;
  9714  00D218  0E46               	movlw	70
  9715  00D21A  6E5F               	movwf	_bh1750Address^0,c
  9716  00D21C  0012               	return		;funcret
  9717  00D21E                     __end_of_setBH1750Address:
  9718                           	callstack 0
  9719                           
  9720 ;; *************** function _VEML6075Start *****************
  9721 ;; Defined at:
  9722 ;;		line 52 in file "VEML6075.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  configLSB       1    8[COMRAM] unsigned char 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      void 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/F
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;Total ram usage:        1 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    3
  9743 ;; This function calls:
  9744 ;;		_writeVEML6075
  9745 ;; This function is called by:
  9746 ;;		_configureIO
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text56
  9751  00D292                     __ptext56:
  9752                           	callstack 0
  9753  00D292                     _VEML6075Start:
  9754                           	callstack 26
  9755                           
  9756                           ;VEML6075.c: 54: if(100==100){
  9757                           
  9758                           ;incstack = 0
  9759  00D292  0E00               	movlw	0
  9760  00D294  6E09               	movwf	VEML6075Start@configLSB^0,c
  9761                           
  9762                           ;VEML6075.c: 55: configLSB = configLSB | 0b00010000;
  9763  00D296  5009               	movf	VEML6075Start@configLSB^0,w,c
  9764  00D298  0910               	iorlw	16
  9765  00D29A  6E09               	movwf	VEML6075Start@configLSB^0,c
  9766                           
  9767                           ;VEML6075.c: 68: };VEML6075.c: 69: writeVEML6075(0x20, 0x00, configLSB, 0);
  9768                           
  9769                           ;VEML6075.c: 56: }
  9770  00D29C  0E00               	movlw	0
  9771  00D29E  6E05               	movwf	writeVEML6075@command^0,c
  9772  00D2A0  C009  F006         	movff	VEML6075Start@configLSB,writeVEML6075@dataByteLow
  9773  00D2A4  0E00               	movlw	0
  9774  00D2A6  6E07               	movwf	writeVEML6075@dataByteHigh^0,c
  9775  00D2A8  0E20               	movlw	32
  9776  00D2AA  ECF3  F069         	call	_writeVEML6075
  9777  00D2AE  0012               	return		;funcret
  9778  00D2B0                     __end_of_VEML6075Start:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _writeVEML6075 *****************
  9782 ;; Defined at:
  9783 ;;		line 22 in file "VEML6075.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  address         1    wreg     unsigned char 
  9786 ;;  command         1    4[COMRAM] unsigned char 
  9787 ;;  dataByteLow     1    5[COMRAM] unsigned char 
  9788 ;;  dataByteHigh    1    6[COMRAM] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  address         1    7[COMRAM] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      void 
  9793 ;; Registers used:
  9794 ;;		wreg, status,2, status,0, cstack
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/F
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9800 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;Total ram usage:        4 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    2
  9807 ;; This function calls:
  9808 ;;		_I2C1_Start
  9809 ;;		_I2C1_Stop
  9810 ;;		_I2C1_Write_Byte_Read_Ack
  9811 ;; This function is called by:
  9812 ;;		_VEML6075Start
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text57
  9817  00D3E6                     __ptext57:
  9818                           	callstack 0
  9819  00D3E6                     _writeVEML6075:
  9820                           	callstack 26
  9821                           
  9822                           ;incstack = 0
  9823                           ;writeVEML6075@address stored from wreg
  9824  00D3E6  6E08               	movwf	writeVEML6075@address^0,c
  9825                           
  9826                           ;VEML6075.c: 23: I2C1_Start();
  9827  00D3E8  ECC4  F068         	call	_I2C1_Start	;wreg free
  9828                           
  9829                           ;VEML6075.c: 24: i2cFault = I2C1_Write_Byte_Read_Ack(address);
  9830  00D3EC  5008               	movf	writeVEML6075@address^0,w,c
  9831  00D3EE  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9832  00D3F2  6E5E               	movwf	_i2cFault^0,c
  9833                           
  9834                           ;VEML6075.c: 25: i2cFault = I2C1_Write_Byte_Read_Ack(command);
  9835  00D3F4  5005               	movf	writeVEML6075@command^0,w,c
  9836  00D3F6  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9837  00D3FA  6E5E               	movwf	_i2cFault^0,c
  9838                           
  9839                           ;VEML6075.c: 26: i2cFault = I2C1_Write_Byte_Read_Ack(dataByteLow);
  9840  00D3FC  5006               	movf	writeVEML6075@dataByteLow^0,w,c
  9841  00D3FE  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9842  00D402  6E5E               	movwf	_i2cFault^0,c
  9843                           
  9844                           ;VEML6075.c: 27: i2cFault = I2C1_Write_Byte_Read_Ack(dataByteHigh);
  9845  00D404  5007               	movf	writeVEML6075@dataByteHigh^0,w,c
  9846  00D406  ECB4  F069         	call	_I2C1_Write_Byte_Read_Ack
  9847  00D40A  6E5E               	movwf	_i2cFault^0,c
  9848                           
  9849                           ;VEML6075.c: 28: I2C1_Stop();
  9850  00D40C  ECC8  F068         	call	_I2C1_Stop	;wreg free
  9851  00D410  0012               	return		;funcret
  9852  00D412                     __end_of_writeVEML6075:
  9853                           	callstack 0
  9854                           
  9855 ;; *************** function _I2C1_Write_Byte_Read_Ack *****************
  9856 ;; Defined at:
  9857 ;;		line 66 in file "i2c1.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  d               1    wreg     unsigned char 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  d               1    2[COMRAM] unsigned char 
  9862 ;;  tries           1    3[COMRAM] unsigned char 
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      unsigned char 
  9865 ;; Registers used:
  9866 ;;		wreg, status,2, status,0, cstack
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;Total ram usage:        2 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:    1
  9879 ;; This function calls:
  9880 ;;		_I2C1_Wait
  9881 ;; This function is called by:
  9882 ;;		_writeVEML6075
  9883 ;;		_readVEML6075
  9884 ;;		_BH1750WriteCommand
  9885 ;;		_BH1750ReadValue
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text58
  9890  00D368                     __ptext58:
  9891                           	callstack 0
  9892  00D368                     _I2C1_Write_Byte_Read_Ack:
  9893                           	callstack 27
  9894                           
  9895                           ;incstack = 0
  9896                           ;I2C1_Write_Byte_Read_Ack@d stored from wreg
  9897  00D368  6E03               	movwf	I2C1_Write_Byte_Read_Ack@d^0,c
  9898                           
  9899                           ;i2c1.c: 67: I2C1_Wait();
  9900  00D36A  EC58  F069         	call	_I2C1_Wait	;wreg free
  9901                           
  9902                           ;i2c1.c: 68: PIR1bits.SSP1IF=0;
  9903  00D36E  969E               	bcf	158,3,c	;volatile
  9904                           
  9905                           ;i2c1.c: 69: SSP1BUF=d;
  9906  00D370  C003  FFC9         	movff	I2C1_Write_Byte_Read_Ack@d,4041	;volatile
  9907                           
  9908                           ;i2c1.c: 70: unsigned char tries=0;
  9909  00D374  0E00               	movlw	0
  9910  00D376  6E04               	movwf	I2C1_Write_Byte_Read_Ack@tries^0,c
  9911                           
  9912                           ;i2c1.c: 71: while(!PIR1bits.SSP1IF && tries<150){
  9913  00D378  D001               	goto	l4357
  9914  00D37A                     l4355:
  9915                           
  9916                           ;i2c1.c: 73: tries++;
  9917  00D37A  2A04               	incf	I2C1_Write_Byte_Read_Ack@tries^0,f,c
  9918  00D37C                     l4357:
  9919  00D37C  B69E               	btfsc	158,3,c	;volatile
  9920  00D37E  D003               	goto	u3800
  9921  00D380  0E95               	movlw	149
  9922  00D382  6404               	cpfsgt	I2C1_Write_Byte_Read_Ack@tries^0,c
  9923  00D384  D7FA               	goto	l4355
  9924  00D386                     u3800:
  9925                           
  9926                           ;i2c1.c: 74: };i2c1.c: 75: return SSP1CON2bits.ACKSTAT1;
  9927  00D386  ACC5               	btfss	197,6,c	;volatile
  9928  00D388  D002               	goto	u3810
  9929  00D38A  0E01               	movlw	1
  9930  00D38C  0012               	return	
  9931  00D38E                     u3810:
  9932  00D38E  0E00               	movlw	0
  9933  00D390  0012               	return		;funcret
  9934  00D392                     __end_of_I2C1_Write_Byte_Read_Ack:
  9935                           	callstack 0
  9936                           
  9937 ;; *************** function _I2C1_Stop *****************
  9938 ;; Defined at:
  9939 ;;		line 78 in file "i2c1.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    1
  9960 ;; This function calls:
  9961 ;;		_I2C1_Wait
  9962 ;; This function is called by:
  9963 ;;		_writeVEML6075
  9964 ;;		_readVEML6075
  9965 ;;		_BH1750WriteCommand
  9966 ;;		_BH1750ReadValue
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text59
  9971  00D190                     __ptext59:
  9972                           	callstack 0
  9973  00D190                     _I2C1_Stop:
  9974                           	callstack 27
  9975                           
  9976                           ;i2c1.c: 79: I2C1_Wait();
  9977                           
  9978                           ;incstack = 0
  9979  00D190  EC58  F069         	call	_I2C1_Wait	;wreg free
  9980                           
  9981                           ;i2c1.c: 80: SSP1CON2bits.PEN1=1;
  9982  00D194  84C5               	bsf	197,2,c	;volatile
  9983  00D196  0012               	return		;funcret
  9984  00D198                     __end_of_I2C1_Stop:
  9985                           	callstack 0
  9986                           
  9987 ;; *************** function _I2C1_Start *****************
  9988 ;; Defined at:
  9989 ;;		line 52 in file "i2c1.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;		None
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    1
 10010 ;; This function calls:
 10011 ;;		_I2C1_Wait
 10012 ;; This function is called by:
 10013 ;;		_writeVEML6075
 10014 ;;		_readVEML6075
 10015 ;;		_BH1750WriteCommand
 10016 ;;		_BH1750ReadValue
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text60
 10021  00D188                     __ptext60:
 10022                           	callstack 0
 10023  00D188                     _I2C1_Start:
 10024                           	callstack 27
 10025                           
 10026                           ;i2c1.c: 53: I2C1_Wait();
 10027                           
 10028                           ;incstack = 0
 10029  00D188  EC58  F069         	call	_I2C1_Wait	;wreg free
 10030                           
 10031                           ;i2c1.c: 54: SSP1CON2bits.SEN1=1;
 10032  00D18C  80C5               	bsf	197,0,c	;volatile
 10033  00D18E  0012               	return		;funcret
 10034  00D190                     __end_of_I2C1_Start:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function _I2C1_Wait *****************
 10038 ;; Defined at:
 10039 ;;		line 43 in file "i2c1.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  tries           1    1[COMRAM] unsigned char 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  1    wreg      void 
 10046 ;; Registers used:
 10047 ;;		wreg, status,2, status,0
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;Total ram usage:        2 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_I2C1_Start
 10063 ;;		_I2C1_Repeated_Start
 10064 ;;		_I2C1_Write_Byte_Read_Ack
 10065 ;;		_I2C1_Stop
 10066 ;;		_I2C1_Read_Byte
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text61
 10071  00D2B0                     __ptext61:
 10072                           	callstack 0
 10073  00D2B0                     _I2C1_Wait:
 10074                           	callstack 27
 10075                           
 10076                           ;i2c1.c: 44: unsigned char tries=0;
 10077                           
 10078                           ;incstack = 0
 10079  00D2B0  0E00               	movlw	0
 10080  00D2B2  6E02               	movwf	I2C1_Wait@tries^0,c
 10081                           
 10082                           ;i2c1.c: 45: while (((SSP1STAT & 0x04)||(SSP1CON2 & 0x1F))&&(tries<150)){
 10083  00D2B4  D001               	goto	l3743
 10084  00D2B6                     l3741:
 10085                           
 10086                           ;i2c1.c: 46: tries++;
 10087  00D2B6  2A02               	incf	I2C1_Wait@tries^0,f,c
 10088  00D2B8                     l3743:
 10089  00D2B8  B4C7               	btfsc	199,2,c	;volatile
 10090  00D2BA  D006               	goto	u2920
 10091  00D2BC  CFC5 F001          	movff	4037,??_I2C1_Wait	;volatile
 10092  00D2C0  0E1F               	movlw	31
 10093  00D2C2  1601               	andwf	??_I2C1_Wait^0,f,c
 10094  00D2C4  B4D8               	btfsc	status,2,c
 10095  00D2C6  0012               	return	
 10096  00D2C8                     u2920:
 10097  00D2C8  0E95               	movlw	149
 10098  00D2CA  6402               	cpfsgt	I2C1_Wait@tries^0,c
 10099  00D2CC  D7F4               	goto	l3741
 10100  00D2CE  0012               	return	
 10101  00D2D0                     __end_of_I2C1_Wait:
 10102                           	callstack 0
 10103                           
 10104 ;; *************** function _USART2_Start *****************
 10105 ;; Defined at:
 10106 ;;		line 10 in file "usart2.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  baudrate        1    wreg     const unsigned char 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  baudrate        1    0[COMRAM] const unsigned char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;Total ram usage:        1 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_configureIO
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text62
 10134  00D828                     __ptext62:
 10135                           	callstack 0
 10136  00D828                     _USART2_Start:
 10137                           	callstack 29
 10138                           
 10139                           ;incstack = 0
 10140                           ;USART2_Start@baudrate stored from wreg
 10141  00D828  6E01               	movwf	USART2_Start@baudrate^0,c
 10142                           
 10143                           ;usart2.c: 13: TXSTA2bits.CSRC = 0;
 10144  00D82A  9E72               	bcf	114,7,c	;volatile
 10145                           
 10146                           ;usart2.c: 14: TXSTA2bits.TX9 = 0;
 10147  00D82C  9C72               	bcf	114,6,c	;volatile
 10148                           
 10149                           ;usart2.c: 15: TXSTA2bits.TXEN = 1;
 10150  00D82E  8A72               	bsf	114,5,c	;volatile
 10151                           
 10152                           ;usart2.c: 16: TXSTA2bits.SYNC = 0;
 10153  00D830  9872               	bcf	114,4,c	;volatile
 10154                           
 10155                           ;usart2.c: 17: TXSTA2bits.SENDB = 0;
 10156  00D832  9672               	bcf	114,3,c	;volatile
 10157                           
 10158                           ;usart2.c: 18: TXSTA2bits.BRGH = 1;
 10159  00D834  8472               	bsf	114,2,c	;volatile
 10160                           
 10161                           ;usart2.c: 21: RCSTA2bits.SPEN = 1;
 10162  00D836  8E71               	bsf	113,7,c	;volatile
 10163                           
 10164                           ;usart2.c: 22: RCSTA2bits.RX9 = 0;
 10165  00D838  9C71               	bcf	113,6,c	;volatile
 10166                           
 10167                           ;usart2.c: 23: RCSTA2bits.CREN = 1;
 10168  00D83A  8871               	bsf	113,4,c	;volatile
 10169                           
 10170                           ;usart2.c: 24: RCSTA2bits.ADDEN = 0;
 10171  00D83C  9671               	bcf	113,3,c	;volatile
 10172                           
 10173                           ;usart2.c: 27: BAUDCON2bits.ABDOVF = 0;
 10174  00D83E  9E70               	bcf	112,7,c	;volatile
 10175                           
 10176                           ;usart2.c: 28: BAUDCON2bits.DTRXP = 0;
 10177  00D840  9A70               	bcf	112,5,c	;volatile
 10178                           
 10179                           ;usart2.c: 29: BAUDCON2bits.CKTXP = 0;
 10180  00D842  9870               	bcf	112,4,c	;volatile
 10181                           
 10182                           ;usart2.c: 30: BAUDCON2bits.BRG16 = 1;
 10183  00D844  8670               	bsf	112,3,c	;volatile
 10184                           
 10185                           ;usart2.c: 31: BAUDCON2bits.WUE = 0;
 10186  00D846  9270               	bcf	112,1,c	;volatile
 10187                           
 10188                           ;usart2.c: 32: BAUDCON2bits.ABDEN = 0;
 10189  00D848  9070               	bcf	112,0,c	;volatile
 10190                           
 10191                           ;usart2.c: 34: if(baudrate==1){
 10192  00D84A  0401               	decf	USART2_Start@baudrate^0,w,c
 10193  00D84C  A4D8               	btfss	status,2,c
 10194  00D84E  D005               	goto	l4645
 10195                           
 10196                           ;usart2.c: 35: SPBRGH2 = 0x03;
 10197  00D850  0E03               	movlw	3
 10198  00D852  6E76               	movwf	118,c	;volatile
 10199                           
 10200                           ;usart2.c: 36: SPBRG2 = 0x40;
 10201  00D854  0E40               	movlw	64
 10202  00D856  6E75               	movwf	117,c	;volatile
 10203                           
 10204                           ;usart2.c: 38: }
 10205  00D858  0012               	return	
 10206  00D85A                     l4645:
 10207                           
 10208                           ;usart2.c: 39: else if(baudrate==0){
 10209  00D85A  5001               	movf	USART2_Start@baudrate^0,w,c
 10210  00D85C  A4D8               	btfss	status,2,c
 10211  00D85E  D005               	goto	l4649
 10212                           
 10213                           ;usart2.c: 40: SPBRGH2 = 0x06;
 10214  00D860  0E06               	movlw	6
 10215  00D862  6E76               	movwf	118,c	;volatile
 10216                           
 10217                           ;usart2.c: 41: SPBRG2 = 0x82;
 10218  00D864  0E82               	movlw	130
 10219  00D866  6E75               	movwf	117,c	;volatile
 10220                           
 10221                           ;usart2.c: 43: }
 10222  00D868  0012               	return	
 10223  00D86A                     l4649:
 10224                           
 10225                           ;usart2.c: 44: else if(baudrate==3){
 10226  00D86A  0E03               	movlw	3
 10227  00D86C  1801               	xorwf	USART2_Start@baudrate^0,w,c
 10228  00D86E  A4D8               	btfss	status,2,c
 10229  00D870  D005               	goto	l4653
 10230                           
 10231                           ;usart2.c: 45: SPBRGH2 = 0;
 10232  00D872  0E00               	movlw	0
 10233  00D874  6E76               	movwf	118,c	;volatile
 10234                           
 10235                           ;usart2.c: 46: SPBRG2 = 0x8A;
 10236  00D876  0E8A               	movlw	138
 10237  00D878  6E75               	movwf	117,c	;volatile
 10238                           
 10239                           ;usart2.c: 48: }
 10240  00D87A  0012               	return	
 10241  00D87C                     l4653:
 10242                           
 10243                           ;usart2.c: 49: else{;usart2.c: 51: SPBRGH2 = 0x01;
 10244  00D87C  0E01               	movlw	1
 10245  00D87E  6E76               	movwf	118,c	;volatile
 10246                           
 10247                           ;usart2.c: 52: SPBRG2 = 0x17;
 10248  00D880  0E17               	movlw	23
 10249  00D882  6E75               	movwf	117,c	;volatile
 10250  00D884  0012               	return		;funcret
 10251  00D886                     __end_of_USART2_Start:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _I2C1_Initialize *****************
 10255 ;; Defined at:
 10256 ;;		line 13 in file "i2c1.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  c               4   13[COMRAM] const unsigned long 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2, status,0, cstack
 10265 ;; Tracked objects:
 10266 ;;		On entry : 3F/F
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;Total ram usage:        8 bytes
 10275 ;; Hardware stack levels used:    1
 10276 ;; Hardware stack levels required when called:    1
 10277 ;; This function calls:
 10278 ;;		___lldiv
 10279 ;; This function is called by:
 10280 ;;		_configureIO
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text63
 10285  00D77A                     __ptext63:
 10286                           	callstack 0
 10287  00D77A                     _I2C1_Initialize:
 10288                           	callstack 28
 10289                           
 10290                           ; BSR set to: 15
 10291                           ;i2c1.c: 15: TRISCbits.RC3=1;
 10292                           
 10293                           ;incstack = 0
 10294  00D77A  8694               	bsf	148,3,c	;volatile
 10295                           
 10296                           ;i2c1.c: 16: TRISCbits.RC4=1;
 10297  00D77C  8894               	bsf	148,4,c	;volatile
 10298                           
 10299                           ;i2c1.c: 17: ANSELCbits.ANSC3=0;
 10300  00D77E  973A               	bcf	58,3,b	;volatile
 10301                           
 10302                           ;i2c1.c: 18: ANSELCbits.ANSC4=0;
 10303  00D780  993A               	bcf	58,4,b	;volatile
 10304                           
 10305                           ; BSR set to: 15
 10306                           ;i2c1.c: 19: SSP1CON1 = 0b00101000;
 10307  00D782  0E28               	movlw	40
 10308  00D784  6EC6               	movwf	198,c	;volatile
 10309                           
 10310                           ; BSR set to: 15
 10311                           ;i2c1.c: 23: SSP1ADD = (64000000/(4*c))-1;
 10312  00D786  0E00               	movlw	0
 10313  00D788  6E01               	movwf	___lldiv@dividend^0,c
 10314  00D78A  0E90               	movlw	144
 10315  00D78C  6E02               	movwf	(___lldiv@dividend+1)^0,c
 10316  00D78E  0ED0               	movlw	208
 10317  00D790  6E03               	movwf	(___lldiv@dividend+2)^0,c
 10318  00D792  0E03               	movlw	3
 10319  00D794  6E04               	movwf	(___lldiv@dividend+3)^0,c
 10320  00D796  C00E  F012         	movff	I2C1_Initialize@c,??_I2C1_Initialize
 10321  00D79A  C00F  F013         	movff	I2C1_Initialize@c+1,??_I2C1_Initialize+1
 10322  00D79E  C010  F014         	movff	I2C1_Initialize@c+2,??_I2C1_Initialize+2
 10323  00D7A2  C011  F015         	movff	I2C1_Initialize@c+3,??_I2C1_Initialize+3
 10324  00D7A6  0E02               	movlw	2
 10325  00D7A8                     u4105:
 10326  00D7A8  90D8               	bcf	status,0,c
 10327  00D7AA  3612               	rlcf	??_I2C1_Initialize^0,f,c
 10328  00D7AC  3613               	rlcf	(??_I2C1_Initialize+1)^0,f,c
 10329  00D7AE  3614               	rlcf	(??_I2C1_Initialize+2)^0,f,c
 10330  00D7B0  3615               	rlcf	(??_I2C1_Initialize+3)^0,f,c
 10331  00D7B2  2EE8               	decfsz	wreg,f,c
 10332  00D7B4  D7F9               	goto	u4105
 10333  00D7B6  C012  F005         	movff	??_I2C1_Initialize,___lldiv@divisor
 10334  00D7BA  C013  F006         	movff	??_I2C1_Initialize+1,___lldiv@divisor+1
 10335  00D7BE  C014  F007         	movff	??_I2C1_Initialize+2,___lldiv@divisor+2
 10336  00D7C2  C015  F008         	movff	??_I2C1_Initialize+3,___lldiv@divisor+3
 10337  00D7C6  EC1B  F06D         	call	___lldiv	;wreg free
 10338  00D7CA  0401               	decf	?___lldiv^0,w,c
 10339  00D7CC  6EC8               	movwf	200,c	;volatile
 10340  00D7CE  0012               	return		;funcret
 10341  00D7D0                     __end_of_I2C1_Initialize:
 10342                           	callstack 0
 10343                           
 10344 ;; *************** function ___lldiv *****************
 10345 ;; Defined at:
 10346 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  dividend        4    0[COMRAM] unsigned long 
 10349 ;;  divisor         4    4[COMRAM] unsigned long 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  quotient        4    8[COMRAM] unsigned long 
 10352 ;;  counter         1   12[COMRAM] unsigned char 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  4    0[COMRAM] unsigned long 
 10355 ;; Registers used:
 10356 ;;		wreg, status,2, status,0
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;Total ram usage:       13 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_I2C1_Initialize
 10372 ;;		_printf
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text64
 10377  00DA36                     __ptext64:
 10378                           	callstack 0
 10379  00DA36                     ___lldiv:
 10380                           	callstack 28
 10381                           
 10382                           ;incstack = 0
 10383  00DA36  0E00               	movlw	0
 10384  00DA38  6E09               	movwf	___lldiv@quotient^0,c
 10385  00DA3A  0E00               	movlw	0
 10386  00DA3C  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10387  00DA3E  0E00               	movlw	0
 10388  00DA40  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10389  00DA42  0E00               	movlw	0
 10390  00DA44  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10391  00DA46  5005               	movf	___lldiv@divisor^0,w,c
 10392  00DA48  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10393  00DA4A  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10394  00DA4C  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10395  00DA4E  B4D8               	btfsc	status,2,c
 10396  00DA50  D02A               	goto	l691
 10397  00DA52  0E01               	movlw	1
 10398  00DA54  6E0D               	movwf	___lldiv@counter^0,c
 10399  00DA56  D006               	goto	l3935
 10400  00DA58                     l3933:
 10401  00DA58  90D8               	bcf	status,0,c
 10402  00DA5A  3605               	rlcf	___lldiv@divisor^0,f,c
 10403  00DA5C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10404  00DA5E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10405  00DA60  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10406  00DA62  2A0D               	incf	___lldiv@counter^0,f,c
 10407  00DA64                     l3935:
 10408  00DA64  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10409  00DA66  D7F8               	goto	l3933
 10410  00DA68                     u3180:
 10411  00DA68  90D8               	bcf	status,0,c
 10412  00DA6A  3609               	rlcf	___lldiv@quotient^0,f,c
 10413  00DA6C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10414  00DA6E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10415  00DA70  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10416  00DA72  5005               	movf	___lldiv@divisor^0,w,c
 10417  00DA74  5C01               	subwf	___lldiv@dividend^0,w,c
 10418  00DA76  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10419  00DA78  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10420  00DA7A  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10421  00DA7C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10422  00DA7E  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10423  00DA80  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10424  00DA82  A0D8               	btfss	status,0,c
 10425  00DA84  D009               	goto	l3945
 10426  00DA86  5005               	movf	___lldiv@divisor^0,w,c
 10427  00DA88  5E01               	subwf	___lldiv@dividend^0,f,c
 10428  00DA8A  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10429  00DA8C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 10430  00DA8E  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10431  00DA90  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 10432  00DA92  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10433  00DA94  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 10434  00DA96  8009               	bsf	___lldiv@quotient^0,0,c
 10435  00DA98                     l3945:
 10436  00DA98  90D8               	bcf	status,0,c
 10437  00DA9A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 10438  00DA9C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 10439  00DA9E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 10440  00DAA0  3205               	rrcf	___lldiv@divisor^0,f,c
 10441  00DAA2  2E0D               	decfsz	___lldiv@counter^0,f,c
 10442  00DAA4  D7E1               	goto	u3180
 10443  00DAA6                     l691:
 10444  00DAA6  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10445  00DAAA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10446  00DAAE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10447  00DAB2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10448  00DAB6  0012               	return		;funcret
 10449  00DAB8                     __end_of___lldiv:
 10450                           	callstack 0
 10451                           
 10452 ;; *************** function _I2C1_Check_Data_Stuck *****************
 10453 ;; Defined at:
 10454 ;;		line 26 in file "i2c1.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;		None
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  i               1    1[COMRAM] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, status,2, status,0
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;Total ram usage:        2 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_configureIO
 10478 ;;		_readUV
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text65
 10483  00D4CE                     __ptext65:
 10484                           	callstack 0
 10485  00D4CE                     _I2C1_Check_Data_Stuck:
 10486                           	callstack 29
 10487                           
 10488                           ;i2c1.c: 28: if(PORTCbits.RC4==0){
 10489                           
 10490                           ;incstack = 0
 10491  00D4CE  B882               	btfsc	130,4,c	;volatile
 10492  00D4D0  0012               	return	
 10493                           
 10494                           ;i2c1.c: 30: TRISCbits.RC3=0;
 10495  00D4D2  9694               	bcf	148,3,c	;volatile
 10496                           
 10497                           ;i2c1.c: 32: for(i=0;i<8;i++){
 10498  00D4D4  0E00               	movlw	0
 10499  00D4D6  6E02               	movwf	I2C1_Check_Data_Stuck@i^0,c
 10500  00D4D8                     l445:
 10501                           
 10502                           ;i2c1.c: 34: LATCbits.LATC3=0;
 10503  00D4D8  968B               	bcf	139,3,c	;volatile
 10504                           
 10505                           ;i2c1.c: 35: _delay((unsigned long)((1)*(64000000/4000.0)));
 10506  00D4DA  0E15               	movlw	21
 10507  00D4DC  6E01               	movwf	??_I2C1_Check_Data_Stuck^0,c
 10508  00D4DE  0EC6               	movlw	198
 10509  00D4E0                     u4407:
 10510  00D4E0  2EE8               	decfsz	wreg,f,c
 10511  00D4E2  D7FE               	bra	u4407
 10512  00D4E4  2E01               	decfsz	??_I2C1_Check_Data_Stuck^0,f,c
 10513  00D4E6  D7FC               	bra	u4407
 10514  00D4E8  D000               	nop2	
 10515                           
 10516                           ;i2c1.c: 36: LATCbits.LATC3=1;
 10517  00D4EA  868B               	bsf	139,3,c	;volatile
 10518                           
 10519                           ;i2c1.c: 37: _delay((unsigned long)((1)*(64000000/4000.0)));
 10520  00D4EC  0E15               	movlw	21
 10521  00D4EE  6E01               	movwf	??_I2C1_Check_Data_Stuck^0,c
 10522  00D4F0  0EC6               	movlw	198
 10523  00D4F2                     u4417:
 10524  00D4F2  2EE8               	decfsz	wreg,f,c
 10525  00D4F4  D7FE               	bra	u4417
 10526  00D4F6  2E01               	decfsz	??_I2C1_Check_Data_Stuck^0,f,c
 10527  00D4F8  D7FC               	bra	u4417
 10528  00D4FA  D000               	nop2	
 10529  00D4FC  2A02               	incf	I2C1_Check_Data_Stuck@i^0,f,c
 10530  00D4FE  0E07               	movlw	7
 10531  00D500  6402               	cpfsgt	I2C1_Check_Data_Stuck@i^0,c
 10532  00D502  D7EA               	goto	l445
 10533                           
 10534                           ;i2c1.c: 38: };i2c1.c: 39: TRISCbits.RC3=1;
 10535  00D504  8694               	bsf	148,3,c	;volatile
 10536  00D506  0012               	return		;funcret
 10537  00D508                     __end_of_I2C1_Check_Data_Stuck:
 10538                           	callstack 0
 10539                           
 10540                           	psect	rparam
 10541  0000                     
 10542                           	psect	idloc
 10543                           
 10544                           ;Config register IDLOC0 @ 0x200000
 10545                           ;	unspecified, using default values
 10546  200000                     	org	2097152
 10547  200000  FF                 	db	255
 10548                           
 10549                           ;Config register IDLOC1 @ 0x200001
 10550                           ;	unspecified, using default values
 10551  200001                     	org	2097153
 10552  200001  FF                 	db	255
 10553                           
 10554                           ;Config register IDLOC2 @ 0x200002
 10555                           ;	unspecified, using default values
 10556  200002                     	org	2097154
 10557  200002  FF                 	db	255
 10558                           
 10559                           ;Config register IDLOC3 @ 0x200003
 10560                           ;	unspecified, using default values
 10561  200003                     	org	2097155
 10562  200003  FF                 	db	255
 10563                           
 10564                           ;Config register IDLOC4 @ 0x200004
 10565                           ;	unspecified, using default values
 10566  200004                     	org	2097156
 10567  200004  FF                 	db	255
 10568                           
 10569                           ;Config register IDLOC5 @ 0x200005
 10570                           ;	unspecified, using default values
 10571  200005                     	org	2097157
 10572  200005  FF                 	db	255
 10573                           
 10574                           ;Config register IDLOC6 @ 0x200006
 10575                           ;	unspecified, using default values
 10576  200006                     	org	2097158
 10577  200006  FF                 	db	255
 10578                           
 10579                           ;Config register IDLOC7 @ 0x200007
 10580                           ;	unspecified, using default values
 10581  200007                     	org	2097159
 10582  200007  FF                 	db	255
 10583                           
 10584                           	psect	config
 10585                           
 10586                           ; Padding undefined space
 10587  300000                     	org	3145728
 10588  300000  FF                 	db	255
 10589                           
 10590                           ;Config register CONFIG1H @ 0x300001
 10591                           ;	Oscillator Selection bits
 10592                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 10593                           ;	4X PLL Enable
 10594                           ;	PLLCFG = ON, Oscillator multiplied by 4
 10595                           ;	Primary clock enable bit
 10596                           ;	PRICLKEN = ON, Primary clock is always enabled
 10597                           ;	Fail-Safe Clock Monitor Enable bit
 10598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10599                           ;	Internal/External Oscillator Switchover bit
 10600                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10601  300001                     	org	3145729
 10602  300001  33                 	db	51
 10603                           
 10604                           ;Config register CONFIG2L @ 0x300002
 10605                           ;	Power-up Timer Enable bit
 10606                           ;	PWRTEN = ON, Power up timer enabled
 10607                           ;	Brown-out Reset Enable bits
 10608                           ;	BOREN = NOSLP, Brown-out Reset enabled in hardware only and disabled in Sleep mode (SB
      +                          OREN is disabled)
 10609                           ;	Brown Out Reset Voltage bits
 10610                           ;	BORV = 190, VBOR set to 1.90 V nominal
 10611  300002                     	org	3145730
 10612  300002  1C                 	db	28
 10613                           
 10614                           ;Config register CONFIG2H @ 0x300003
 10615                           ;	Watchdog Timer Enable bits
 10616                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
 10617                           ;	Watchdog Timer Postscale Select bits
 10618                           ;	WDTPS = 16384, 1:16384
 10619  300003                     	org	3145731
 10620  300003  3B                 	db	59
 10621                           
 10622                           ; Padding undefined space
 10623  300004                     	org	3145732
 10624  300004  FF                 	db	255
 10625                           
 10626                           ;Config register CONFIG3H @ 0x300005
 10627                           ;	CCP2 MUX bit
 10628                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 10629                           ;	PORTB A/D Enable bit
 10630                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 10631                           ;	P3A/CCP3 Mux bit
 10632                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 10633                           ;	HFINTOSC Fast Start-up
 10634                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 10635                           ;	Timer3 Clock input mux bit
 10636                           ;	T3CMX = PORTC0, T3CKI is on RC0
 10637                           ;	ECCP2 B output mux bit
 10638                           ;	P2BMX = PORTD2, P2B is on RD2
 10639                           ;	MCLR Pin Enable bit
 10640                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 10641  300005                     	org	3145733
 10642  300005  BD                 	db	189
 10643                           
 10644                           ;Config register CONFIG4L @ 0x300006
 10645                           ;	Stack Full/Underflow Reset Enable bit
 10646                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10647                           ;	Single-Supply ICSP Enable bit
 10648                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10649                           ;	Extended Instruction Set Enable bit
 10650                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10651                           ;	Background Debug
 10652                           ;	DEBUG = 0x1, unprogrammed default
 10653  300006                     	org	3145734
 10654  300006  85                 	db	133
 10655                           
 10656                           ; Padding undefined space
 10657  300007                     	org	3145735
 10658  300007  FF                 	db	255
 10659                           
 10660                           ;Config register CONFIG5L @ 0x300008
 10661                           ;	Code Protection Block 0
 10662                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10663                           ;	Code Protection Block 1
 10664                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10665                           ;	Code Protection Block 2
 10666                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10667                           ;	Code Protection Block 3
 10668                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10669  300008                     	org	3145736
 10670  300008  0F                 	db	15
 10671                           
 10672                           ;Config register CONFIG5H @ 0x300009
 10673                           ;	Boot Block Code Protection bit
 10674                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10675                           ;	Data EEPROM Code Protection bit
 10676                           ;	CPD = OFF, Data EEPROM not code-protected
 10677  300009                     	org	3145737
 10678  300009  C0                 	db	192
 10679                           
 10680                           ;Config register CONFIG6L @ 0x30000A
 10681                           ;	Write Protection Block 0
 10682                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10683                           ;	Write Protection Block 1
 10684                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10685                           ;	Write Protection Block 2
 10686                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10687                           ;	Write Protection Block 3
 10688                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10689  30000A                     	org	3145738
 10690  30000A  0F                 	db	15
 10691                           
 10692                           ;Config register CONFIG6H @ 0x30000B
 10693                           ;	Configuration Register Write Protection bit
 10694                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10695                           ;	Boot Block Write Protection bit
 10696                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10697                           ;	Data EEPROM Write Protection bit
 10698                           ;	WRTD = OFF, Data EEPROM not write-protected
 10699  30000B                     	org	3145739
 10700  30000B  E0                 	db	224
 10701                           
 10702                           ;Config register CONFIG7L @ 0x30000C
 10703                           ;	Table Read Protection Block 0
 10704                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10705                           ;	Table Read Protection Block 1
 10706                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10707                           ;	Table Read Protection Block 2
 10708                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10709                           ;	Table Read Protection Block 3
 10710                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10711  30000C                     	org	3145740
 10712  30000C  0F                 	db	15
 10713                           
 10714                           ;Config register CONFIG7H @ 0x30000D
 10715                           ;	Boot Block Table Read Protection bit
 10716                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10717  30000D                     	org	3145741
 10718  30000D  40                 	db	64
 10719                           tosu	equ	0xFFF
 10720                           tosh	equ	0xFFE
 10721                           tosl	equ	0xFFD
 10722                           stkptr	equ	0xFFC
 10723                           pclatu	equ	0xFFB
 10724                           pclath	equ	0xFFA
 10725                           pcl	equ	0xFF9
 10726                           tblptru	equ	0xFF8
 10727                           tblptrh	equ	0xFF7
 10728                           tblptrl	equ	0xFF6
 10729                           tablat	equ	0xFF5
 10730                           prodh	equ	0xFF4
 10731                           prodl	equ	0xFF3
 10732                           indf0	equ	0xFEF
 10733                           postinc0	equ	0xFEE
 10734                           postdec0	equ	0xFED
 10735                           preinc0	equ	0xFEC
 10736                           plusw0	equ	0xFEB
 10737                           fsr0h	equ	0xFEA
 10738                           fsr0l	equ	0xFE9
 10739                           wreg	equ	0xFE8
 10740                           indf1	equ	0xFE7
 10741                           postinc1	equ	0xFE6
 10742                           postdec1	equ	0xFE5
 10743                           preinc1	equ	0xFE4
 10744                           plusw1	equ	0xFE3
 10745                           fsr1h	equ	0xFE2
 10746                           fsr1l	equ	0xFE1
 10747                           bsr	equ	0xFE0
 10748                           indf2	equ	0xFDF
 10749                           postinc2	equ	0xFDE
 10750                           postdec2	equ	0xFDD
 10751                           preinc2	equ	0xFDC
 10752                           plusw2	equ	0xFDB
 10753                           fsr2h	equ	0xFDA
 10754                           fsr2l	equ	0xFD9
 10755                           status	equ	0xFD8

Data Sizes:
    Strings     257
    Constant    688
    Data        9
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     31     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_18(CODE[12]), STR_17(CODE[10]), STR_16(CODE[8]), STR_15(CODE[18]), 
		 -> STR_14(CODE[8]), STR_13(CODE[10]), STR_12(CODE[34]), STR_11(CODE[10]), 
		 -> STR_10(CODE[26]), STR_9(CODE[11]), STR_8(CODE[10]), STR_7(CODE[10]), 
		 -> STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[9]), 
		 -> STR_2(CODE[9]), STR_1(CODE[34]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    CRC16@nData	PTR const unsigned char  size(1) Largest target is 50
		 -> txData(BANK0[50]), 

    LoRaTXData@data	PTR unsigned char  size(1) Largest target is 50
		 -> txData(BANK0[50]), 


Critical Paths under _main in COMRAM

    _main->_transmitValues
    _transmitValues->_LoRaTXData
    _LoRaTXData->_LoRaTXMode
    _LoRaTXMode->_printf
    _printf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lbdiv->___lbmod
    ___llmod->___lldiv
    ___flsub->___fladd
    ___fladd->_fround
    _LoRaStart->_LoRaSetFrequency
    _LoRaSetFrequency->___fltol
    ___fltol->_scale
    ___flmul->___awdiv
    _LoRaOptimalLoad->_LoRaSleepMode
    _LoRaOptimalLoad->_LoRaStandbyMode
    _LoRaOptimalLoad->_setLoRaMode
    _setLoRaMode->_writeOpModeRegister
    _LoRaStandbyMode->_writeOpModeRegister
    _LoRaSleepMode->_writeOpModeRegister
    _writeOpModeRegister->_SPI2WriteByte
    _readOpModeRegister->_SPI2ReadByte
    _LoRaGetIRQFlags->_SPI2ReadByte
    _LoRaGetFrequency->___fldiv
    ___fldiv->___xxtofl
    _LoRaClearIRQFlags->_SPI2WriteByte
    _readVisValue->_BH1750ReadValue
    _BH1750ReadValue->_I2C1_Read_Byte
    _BH1750ReadValue->_I2C1_Write_Byte_Read_Ack
    _readUV->_readVEML6075
    _readVEML6075->_I2C1_Read_Byte
    _readVEML6075->_I2C1_Write_Byte_Read_Ack
    _I2C1_Repeated_Start->_I2C1_Wait
    _I2C1_Read_Byte->_I2C1_Wait
    _configureIO->_I2C1_Initialize
    _setBH1750ContinuousHResolutionMode->_BH1750WriteCommand
    _BH1750WriteCommand->_I2C1_Write_Byte_Read_Ack
    _VEML6075Start->_writeVEML6075
    _writeVEML6075->_I2C1_Write_Byte_Read_Ack
    _I2C1_Write_Byte_Read_Ack->_I2C1_Wait
    _I2C1_Stop->_I2C1_Wait
    _I2C1_Start->_I2C1_Wait
    _I2C1_Initialize->___lldiv

Critical Paths under _main in BANK0

    _main->_transmitValues
    _transmitValues->_printf
    _LoRaTXData->_printf
    _LoRaTXMode->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  174878
                                             91 COMRAM     2     2      0
                        _configureIO
                             _printf
                        _readBattery
                    _readTemperature
                             _readUV
                       _readVisValue
 _setBH1750ContinuousHResolutionMode
                     _transmitValues
                       _turnStuffOff
 ---------------------------------------------------------------------------------
 (1) _turnStuffOff                                         0     0      0       0
                        _USART2_Stop
                 _disablePeripherals
 ---------------------------------------------------------------------------------
 (2) _disablePeripherals                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmitValues                                       7     7      0  140063
                                             90 COMRAM     1     1      0
                                             25 BANK0      6     6      0
                              _CRC16
                  _LoRaClearIRQFlags
                   _LoRaGetFrequency
                    _LoRaGetIRQFlags
                      _LoRaSleepMode
                          _LoRaStart
                         _LoRaTXData
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LoRaTXData                                           3     1      2   72743
                                             87 COMRAM     3     1      2
                    _LoRaStandbyMode
                         _LoRaTXMode
                      _SPI2WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LoRaTXMode                                           1     1      0   34464
                                             86 COMRAM     1     1      0
                             _printf
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (2) _printf                                              41    35      6   30777
                                             78 COMRAM     8     2      6
                                              0 BANK0     25    25      0
                   _LoRaGetFrequency (ARG)
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4    6888
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              15    11      4    4895
                                             39 COMRAM    15    11      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     387
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             70 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2414
                                             54 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _LoRaStart                                            6     1      5   26641
                                             69 COMRAM     6     1      5
                    _LoRaOptimalLoad
                          _LoRaReset
                   _LoRaSetFrequency
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (3) _LoRaSetFrequency                                    11     7      4    8193
                                             58 COMRAM    11     7      4
                      _SPI2WriteByte
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3873
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LoRaReset                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LoRaOptimalLoad                                      2     2      0   14588
                                              5 COMRAM     2     2      0
                      _LoRaSleepMode
                    _LoRaStandbyMode
                      _SPI2WriteByte
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (3) _setLoRaMode                                          1     1      0    3664
                                              4 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (3) _LoRaStandbyMode                                      1     1      0    3687
                                              4 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (4) _LoRaSleepMode                                        1     1      0    3664
                                              4 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (4) _writeOpModeRegister                                  1     1      0    3573
                                              3 COMRAM     1     1      0
                      _SPI2WriteByte
 ---------------------------------------------------------------------------------
 (4) _readOpModeRegister                                   0     0      0      45
                       _SPI2ReadByte
 ---------------------------------------------------------------------------------
 (2) _LoRaGetIRQFlags                                      1     1      0      68
                                              2 COMRAM     1     1      0
                       _SPI2ReadByte
 ---------------------------------------------------------------------------------
 (2) _LoRaGetFrequency                                    27    23      4    2033
                                             39 COMRAM    27    23      4
                       _SPI2ReadByte
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _SPI2ReadByte                                         2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LoRaClearIRQFlags                                    0     0      0    3551
                      _SPI2WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI2WriteByte                                        3     2      1    3551
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _CRC16                                                8     5      3     290
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _readVisValue                                         0     0      0     233
                    _BH1750ReadValue
 ---------------------------------------------------------------------------------
 (2) _BH1750ReadValue                                      6     4      2     233
                                              4 COMRAM     6     4      2
                     _I2C1_Read_Byte
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (1) _readUV                                               0     0      0     674
              _I2C1_Check_Data_Stuck
                       _readVEML6075
 ---------------------------------------------------------------------------------
 (2) _readVEML6075                                         7     5      2     627
                                              4 COMRAM     7     5      2
                     _I2C1_Read_Byte
                _I2C1_Repeated_Start
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (3) _I2C1_Repeated_Start                                  0     0      0      24
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read_Byte                                       2     2      0      69
                                              2 COMRAM     2     2      0
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _readBattery                                          6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configureIO                                          0     0      0    2406
              _I2C1_Check_Data_Stuck
                    _I2C1_Initialize
                       _USART2_Start
                      _VEML6075Start
                   _setBH1750Address
 _setBH1750ContinuousHResolutionMode
                          _setupAtoD
 ---------------------------------------------------------------------------------
 (2) _setupAtoD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setBH1750ContinuousHResolutionMode                   0     0      0     679
                 _BH1750WriteCommand
 ---------------------------------------------------------------------------------
 (2) _BH1750WriteCommand                                   2     1      1     679
                                              4 COMRAM     2     1      1
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (2) _setBH1750Address                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _VEML6075Start                                        1     1      0     572
                                              8 COMRAM     1     1      0
                      _writeVEML6075
 ---------------------------------------------------------------------------------
 (3) _writeVEML6075                                        4     1      3     434
                                              4 COMRAM     4     1      3
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write_Byte_Read_Ack                             2     2      0      70
                                              2 COMRAM     2     2      0
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C1_Stop                                            0     0      0      24
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C1_Start                                           0     0      0      24
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C1_Wait                                            2     2      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USART2_Start                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      8     4      4    1020
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     922
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _I2C1_Check_Data_Stuck                                2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configureIO
     _I2C1_Check_Data_Stuck
     _I2C1_Initialize
       ___lldiv
     _USART2_Start
     _VEML6075Start
       _writeVEML6075
         _I2C1_Start
           _I2C1_Wait
         _I2C1_Stop
           _I2C1_Wait
         _I2C1_Write_Byte_Read_Ack
           _I2C1_Wait
     _setBH1750Address
     _setBH1750ContinuousHResolutionMode
       _BH1750WriteCommand
         _I2C1_Start
           _I2C1_Wait
         _I2C1_Stop
           _I2C1_Wait
         _I2C1_Write_Byte_Read_Ack
           _I2C1_Wait
     _setupAtoD
   _printf
     _LoRaGetFrequency (ARG)
       _SPI2ReadByte
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
     ___fladd (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___flneg (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _putch (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
   _readBattery
   _readTemperature
   _readUV
     _I2C1_Check_Data_Stuck
     _readVEML6075
       _I2C1_Read_Byte
         _I2C1_Wait
       _I2C1_Repeated_Start
         _I2C1_Wait
       _I2C1_Start
         _I2C1_Wait
       _I2C1_Stop
         _I2C1_Wait
       _I2C1_Write_Byte_Read_Ack
         _I2C1_Wait
   _readVisValue
     _BH1750ReadValue
       _I2C1_Read_Byte
         _I2C1_Wait
       _I2C1_Start
         _I2C1_Wait
       _I2C1_Stop
         _I2C1_Wait
       _I2C1_Write_Byte_Read_Ack
         _I2C1_Wait
   _setBH1750ContinuousHResolutionMode
     _BH1750WriteCommand
       _I2C1_Start
         _I2C1_Wait
       _I2C1_Stop
         _I2C1_Wait
       _I2C1_Write_Byte_Read_Ack
         _I2C1_Wait
   _transmitValues
     _CRC16
     _LoRaClearIRQFlags
       _SPI2WriteByte
     _LoRaGetFrequency
       _SPI2ReadByte
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _LoRaGetIRQFlags
       _SPI2ReadByte
     _LoRaSleepMode
       _readOpModeRegister
         _SPI2ReadByte
       _writeOpModeRegister
         _SPI2WriteByte
     _LoRaStart
       _LoRaOptimalLoad
         _LoRaSleepMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
         _LoRaStandbyMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
         _SPI2WriteByte
         _setLoRaMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
       _LoRaReset
       _LoRaSetFrequency
         _SPI2WriteByte
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
       _setLoRaMode
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
     _LoRaTXData
       _LoRaStandbyMode
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
       _LoRaTXMode
         _printf
           _LoRaGetFrequency (ARG)
             _SPI2ReadByte
             ___fldiv
               ___xxtofl (ARG)
             ___xxtofl
           ___awdiv (ARG)
             ___awmod (ARG)
           ___fladd (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___fleq (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lbdiv (ARG)
                     ___lbmod (ARG)
                   ___lbmod (ARG)
                 ___lbdiv
                   ___lbmod (ARG)
                 ___lbmod
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
           _putch (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
       _SPI2WriteByte
       _printf
         _LoRaGetFrequency (ARG)
           _SPI2ReadByte
           ___fldiv
             ___xxtofl (ARG)
           ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
         ___fladd (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
         __div_to_l_ (ARG)
         __tdiv_to_l_ (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
         _putch (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
     _printf
       _LoRaGetFrequency (ARG)
         _SPI2ReadByte
         ___fldiv
           ___xxtofl (ARG)
         ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
       ___fladd (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _putch (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
   _turnStuffOff
     _USART2_Stop
     _disablePeripherals

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      6B       5       66.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      12        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 18 16:12:44 2021

                               ?_configureIO 0001                                 ___fldiv@aexp 0027  
                               ___fldiv@bexp 0026                                 ___fldiv@sign 001F  
                               ___awdiv@sign 000C                          ___wmul@multiplicand 0003  
                         I2C1_Read_Byte@temp 0004                                          l150 DF64  
                                        l192 D44C                                          l186 D39C  
                                        l266 D55A                                          l602 FA26  
                                        l275 D2DA                                          l445 D4D8  
                                        l269 D56C                                          l278 D2E4  
                                        l630 F8B0                                          l368 D204  
                                        l691 DAA6                                          l942 DDE0  
                                        _vis 0068                                 ___awmod@sign 0006  
                                        wreg 000FE8                                   _TXSTA2bits 000F72  
                               ___flmul@aexp 001C                                 ___flmul@bexp 0021  
                               ___flmul@sign 001B                                 ___flmul@temp 0026  
                               ___flmul@prod 0022                             ?_LoRaGetIRQFlags 0001  
                               ___fltol@exp1 003A                                         l1030 E0B2  
                                       l1106 D940                                         l1300 ED78  
                                       l1029 E08A                                         l1310 EF66  
                                       l1231 EC00                                         l1215 EB2E  
                                       l1240 EC66                                         l1216 EB0C  
                                       l1241 EC62                                         l1341 E272  
                                       l1317 EFF0                                         l1309 EF6A  
                                       l1270 E8D6                                         l1281 E944  
                                       l1282 E940                                         l1348 E2F0  
                                       l4103 E362                                         l4023 DC2E  
                                       l4007 DBE4                                         l3311 EA60  
                                       l4041 DC6E                                         l4033 DC46  
                                       l4201 F79E                                         l4121 F422  
                                       l4113 F410                                         l4035 DC52  
                                       l4027 DC3E                                         l3323 EA84  
                                       l3315 EA64                                         l4051 D90A  
                                       l4123 F45C                                         l4115 F41A  
                                       l4301 FB08                                         l4221 F87E  
                                       l4213 F7E8                                         l4117 F41E  
                                       l4109 F3FE                                         l5013 DFF4  
                                       l4231 F8B4                                         l4073 E2A0  
                                       l3601 F00E                                         l3417 EC24  
                                       l3433 EC44                                         l3409 EBF0  
                                       l3353 EAC0                                         l4057 D932  
                                       l4049 D8FE                                         l4305 FB1A  
                                       l4241 F92A                                         l4225 F88C  
                                       l4161 F5B8                                         l4153 F53A  
                                       l4137 F4B2                                         l4075 E2A6  
                                       l4067 E282                                         l3507 ED64  
                                       l3427 EC3A                                         l3291 EA1C  
                                       l4315 FC06                                         l4307 FB24  
                                       l4219 F872                                         l4085 E316  
                                       l4077 E2B2                                         l3517 ED96  
                                       l3509 ED68                                         l3461 ECD2  
                                       l3453 ECAC                                         l3381 EB52  
                                       l3365 EB1A                                         l3621 DADC  
                                       l4309 FB9E                                         l4317 FC16  
                                       l4253 FA1C                                         l4237 F8C8  
                                       l4181 F6BA                                         l4165 F5E6  
                                       l4511 E790                                         l4087 E322  
                                       l4079 E2D8                                         l3391 EB78  
                                       l3367 EB1E                                         l3287 EA18  
                                       l3615 DACC                                         l4319 FC1C  
                                       l4247 FA02                                         l4191 F722  
                                       l3465 ECDA                                         l3705 D536  
                                       l3801 F3CA                                         l4265 FA60  
                                       l4249 FA0E                                         l4177 F68C  
                                       l4355 D37A                                         l4531 E7D0  
                                       l4515 E794                                         l3491 ED28  
                                       l3467 ECDC                                         l3811 E036  
                                       l3723 D3DE                                         l3715 D3C6  
                                       l3627 DAF2                                         l3643 DB24  
                                       l4283 FABC                                         l4275 FA84  
                                       l4195 F79A                                         l3741 D2B6  
                                       l4357 D37C                                         l4621 E9D6  
                                       l4613 E988                                         l3565 EF30  
                                       l3493 ED38                                         l3389 EB74  
                                       l3709 D53E                                         l3629 DAFA  
                                       l4269 FA80                                         l3743 D2B8  
                                       l4543 E808                                         l4535 E7D4  
                                       l3559 EF12                                         l3399 EB8A  
                                       l3911 DEE4                                         l3735 D1FC  
                                       l3647 DB32                                         l3639 DB1A  
                                       l3663 D972                                         l4617 E9AC  
                                       l3585 EFAE                                         l3489 ED24  
                                       l4289 FAC0                                         l4707 D218  
                                       l4627 E9E2                                         l3907 DED4  
                                       l3851 E0DC                                         l3763 E716  
                                       l3683 D9B8                                         l3675 D9A0  
                                       l3667 D980                                         l3659 D966  
                                       l4299 FAF8                                         l3933 DA58  
                                       l4653 D87C                                         l4645 D85A  
                                       l4717 D7D6                                         l4725 D80E  
                                       l4629 E9E4                                         l4581 E8D4  
                                       l4557 E836                                         l4549 E81E  
                                       l3589 EFCC                                         l3917 DEEC  
                                       l3693 D51A                                         l3757 E642  
                                       l3669 D988                                         l3935 DA64  
                                       l4575 E8AE                                         l4567 E886  
                                       l3919 DEF8                                         l3847 E0CC  
                                       l3679 D9AA                                         l3783 F1E6  
                                       l3945 DA98                                         l4649 D86A  
                                       l4593 E90A                                         l3857 E0E4  
                                       l3697 D520                                         l3777 F146  
                                       l4587 E8EC                                         l3963 DBA4  
                                       l3867 DE3A                                         l3859 E0F0  
                                       l3795 F32A                                         l3787 F210  
                                       l4771 D6CA                                         l4915 E194  
                                       l3967 DBC2                                         l3959 DB70  
                                       l3983 DDCA                                         l3975 DD80  
                                       l3895 DEB8                                         l3887 DE88  
                                       l4767 D6B6                                         l4951 E1FA  
                                       l3979 DDB4                                         l4867 E118  
                                       l3989 DE18                                         l3997 D488  
                                       STR_1 FF1F                                         STR_2 FFDB  
                                       STR_3 FFE4                                         STR_4 FF9F  
                                       STR_5 FFA9                                         STR_6 FFED  
                                       STR_7 FFBD                                         STR_8 FFB3  
                                       STR_9 FF8A                                         u3011 E01A  
                                       u2300 EB36                                         u3100 DE28  
                                       u3020 E024                                         _LATA 000F89  
                                       _LATB 000F8A                                         u3031 E046  
                                       _LATC 000F8B                                         u4000 E93A  
                                       _LATD 000F8C                                         _LATE 000F8D  
                                       u2250 EAE2                                         u3300 DC02  
                                       u3220 DBBE                                         u2260 EAF2  
                                       u2510 ECB8                                         u2430 EC48  
                                       u2270 EAF4                                         u4040 E996  
                                       u3160 DEFE                                         u4105 D7A8  
                                       u3305 DBF8                                         u4050 E9BA  
                                       u2450 EC5C                                         u3090 E0F6  
                                       u4210 E220                                         u3180 DA68  
                                       u2700 EFBC                                         u2620 ED84  
                                       u3340 DC58                                         u2710 EFDA  
                                       u3450 E32C                                         u3290 DBD2  
                                       u3370 D90E                                         u4307 E20E  
                               printf@tmpval 00B0                                         u2660 EF60  
                                       u2820 D98C                                         u3620 F7D4  
                                       u4317 E22A                                         u4237 DF22  
                                       u4407 D4E0                                         u4327 D8B6  
                                       u4247 DF70                                         u2920 D2C8  
                                       u3800 D386                                         u2760 DAFE  
                                       u3560 F632                                         u4417 D4F2  
                                       u4337 D8C8                                         u4257 DF88  
                                       u3810 D38E                                         u3650 F89A  
                                       u4347 D34A                                         u4267 DFA0  
                                       u3820 D312                                         u2860 D524  
                                       u3660 F8AA                                         _PMD0 000F3F  
                                       u4357 D35C                                         u4277 DFB8  
                                       _PMD1 000F3E                                         u3590 F68C  
                                       _PMD2 000F3D                                         u4367 E388  
                                       u4287 DFD0                                         u4377 D54A  
                                       u4297 DFE8                                         u3770 FC2E  
                                       u3835 D314                                         u4387 D562  
                                       u4397 D572                             ??_I2C1_Read_Byte 0003  
                    LoRaStandbyMode@regValue 0005                                         _batt 0066  
                       writeVEML6075@address 0008                                         _main DF10  
                                       _temp 0064                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                                         prodh 000FF4  
                                       prodl 000FF3                                         start 0000  
                            ___fldiv@new_exp 0020                         writeVEML6075@command 0005  
                       LoRaTXData@dataLength 0059                                 ___param_bank 000000  
                               ?_readBattery 0001                          _I2C1_Repeated_Start D198  
                               _BAUDCON2bits 000F70                        _I2C1_Check_Data_Stuck D4CE  
                              ___fltol@sign1 0039                              __end_of___fladd ECF8  
                                      ?_main 0001                            __end_of_I2C1_Wait D2D0  
                            __end_of___fldiv E9EC                              __end_of___awdiv DB3C  
                          __end_of_I2C1_Stop D198                              __end_of___lbdiv D542  
                            __end_of___flneg D49A                                        STR_10 FF41  
                                      STR_11 FFC7                                        STR_12 FEFD  
                                      STR_13 FFD1                             _LoRaSetFrequency D9C2  
                                      STR_14 FFF6                                        STR_15 FF5B  
                                      _CRC16 D7D0                                        STR_17 FF95  
                                      STR_18 FF7E                                   _LoRaTXData D698  
                                      STR_19 FF6D                              __end_of___awmod D9C2  
                            __end_of___lbmod D3E6                              __end_of___flmul F024  
                            __end_of___flsub D650                              __end_of___fltol DC80  
                            __end_of___lldiv DAB8                              ___awdiv@divisor 0009  
                        SPI2ReadByte@address 0001                              __end_of___llmod D952  
                                 _LoRaTXMode D278                                        _RCEN1 007E2B  
                          ??_BH1750ReadValue 0007                              ___awdiv@counter 000B  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRMT2 007B91  
                                      _TRISD 000F95                                        _TRISE 000F96  
                          ??_I2C1_Initialize 0012                         ?_I2C1_Repeated_Start 0001  
                            __end_of_dpowers FEFD                                        _scale F024  
                              ?_readVEML6075 0005                                        _putch D1FA  
                                      tablat 000FF5                                        status 000FD8  
                            ___lbdiv@divisor 0005                              ___lbdiv@counter 0007  
                            _LoRaOptimalLoad E374                                 ??_I2C1_Start 0003  
                            __initialization D6E2                        __size_of_turnStuffOff 000A  
                               __end_of_main E00A                           LoRaTXMode@regValue 0057  
                               ?_setLoRaMode 0001                        LoRaSleepMode@regValue 0005  
                                     ??_main 005C                                       ?_CRC16 0001  
                            _LoRaStandbyMode D25E                                __activetblptr 000002  
                       __size_of__tdiv_to_l_ 00FE                              _readTemperature D43E  
                         _readOpModeRegister D1A0                           __size_of_LoRaReset 0028  
                      ??_I2C1_Repeated_Start 0003                           __size_of_LoRaStart 0066  
                             ??_readVEML6075 0007                                       _ACKEN1 007E2C  
                                     _ACKDT1 007E2D                           __end_of_I2C1_Start D190  
                           ___llmod@dividend 000E                                       ?_scale 0028  
                                     _ADRESH 000FC4                                       _ADRESL 000FC3  
                           ___awdiv@dividend 0007                                       ?_putch 0001  
                        LoRaGetFrequency@mid 0041                          LoRaGetFrequency@lsb 0042  
                        LoRaGetFrequency@msb 0040                         SPI2ReadByte@dataByte 0002  
                              ?_readVisValue 0001                          ?_readOpModeRegister 0001  
                          _LoRaClearIRQFlags D1C6                                 _turnStuffOff D1B0  
                             _transmitValues E108                                       _SPBRG2 000F75  
                          ?_LoRaGetFrequency 0028                                       _SSP2IF 007D27  
                                     _SSPBUF 000FC9                                       _TXREG2 000F73  
                           __end_of___xxtofl E374                        readTemperature@result 0005  
               __size_of_writeOpModeRegister 000E                           ?_LoRaClearIRQFlags 0001  
                         ??_LoRaGetFrequency 002C                  __size_of_disablePeripherals 0048  
                           __end_of__powers_ FE81                       __size_of_writeVEML6075 002C  
                                     ___flge DD4C                                       ___fleq DB3C  
                                  ??___fladd 003F                           _BH1750WriteCommand D246  
                                     ___wmul D31A                                    ??___fldiv 0017  
                                  ??___awdiv 000B                                    ??___lbdiv 0006  
                                  ??___flneg 0005                          ??_LoRaClearIRQFlags 0004  
                                  ??___awmod 0005                                    ??___lbmod 0002  
                                  ??___flmul 0017                                    ??___flsub 004F  
                                  ??___fltol 0035                                    ??___lldiv 0009  
                                  ??___llmod 0016                         __size_of_configureIO 0046  
                     ?_I2C1_Check_Data_Stuck 0001                                       _readUV D72C  
                      __end_of_SPI2WriteByte D580                                       _fround E4FA  
                                     clear_0 D71A                         ??_readOpModeRegister 0003  
                           ___awdiv@quotient 000D                     __end_of_setBH1750Address D21E  
                            ___awmod@divisor 0003                                       _txData 0072  
                            ___awmod@counter 0005                                       _printf F3F4  
                                ?_LoRaTXData 0058                            SPI2WriteByte@data 0001  
                        ?_BH1750WriteCommand 0005                                  ?_LoRaTXMode 0001  
          __size_of_I2C1_Write_Byte_Read_Ack 002A                    ?_I2C1_Write_Byte_Read_Ack 0001  
                               __pdataCOMRAM 005F                            readBattery@result 0005  
                               __mediumconst FC4C                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                               ?_USART2_Stop 0001                    __end_of_LoRaClearIRQFlags D1D2  
                     __end_of_transmitValues E234                             ___lbdiv@dividend 0006  
                             ??_readVisValue 000B                      __end_of_LoRaOptimalLoad E4FA  
                                 ___flge@ff1 0001                                   ___flge@ff2 0005  
                               ___xxtofl@arg 000B                                 ___xxtofl@exp 000A  
                               ___xxtofl@val 0001                                   ___fleq@ff1 0001  
                                 ___fleq@ff2 0005                              ___lbmod@divisor 0001  
                                 __accesstop 0060                      __end_of__initialization D722  
                            ___lbmod@counter 0003                                   ___flneg@f1 0001  
                       ??_BH1750WriteCommand 0006                                __end_of_CRC16 D828  
                              ___rparam_used 000001                                   ___fltol@f1 0031  
                          __end_of_LoRaReset D368                               __pcstackCOMRAM 0001  
                          __end_of_LoRaStart D8EC                                 __pidataBANK0 D1A8  
                    __end_of_LoRaStandbyMode D278                                __end_of_scale F3F4  
                       __size_of_readBattery 002A                                __end_of_putch D20A  
                    __end_of_readTemperature D46C                             ___lbdiv@quotient 0008  
                                    ??_CRC16 0004                    I2C1_Write_Byte_Read_Ack@d 0003  
                                 __div_to_l_ DE1C                              readVEML6075@lsb 0009  
                            readVEML6075@msb 000A                                _writeVEML6075 D3E6  
                      __end_of_LoRaSleepMode D232                              __div_to_l_@exp1 000E  
                            __div_to_l_@cntr 000D                                      ??_scale 002C  
                            __div_to_l_@quot 0009                              ?_transmitValues 0001  
                                    ??_putch 0001                                   __pbssBANK0 0060  
                   __end_of_LoRaSetFrequency DA36                          __size_of_LoRaTXData 004A  
                              __div_to_l_@f1 0001                                __div_to_l_@f2 0005  
                  writeVEML6075@dataByteHigh 0007                          __size_of_LoRaTXMode 001A  
                             LoRaTXData@data 0058                              _BH1750ReadValue D412  
                                    ?___flge 0001                                      ?___fleq 0001  
                     __size_of_VEML6075Start 001E                                      ?___wmul 0001  
                              ?_SPI2ReadByte 0001                         __end_of_readVEML6075 D5C4  
                            _I2C1_Initialize D77A                                      ?_readUV 0001  
                                    ?_fround 0028                                      ?_printf 004F  
                       __size_of_setLoRaMode 0014                                 _comp1Reading 006C  
                                 CRC16@nData 0001                                 _comp2Reading 006A  
                         __size_of_setupAtoD 0034                                   CRC16@nTemp 0006  
                                  ?___xxtofl 0001                               ?_writeVEML6075 0005  
                                  _I2C1_Wait D2B0                                    _I2C1_Stop D190  
                                    _SPBRGH2 000F76                                      _SSP1ADD 000FC8  
                                    _SSP1BUF 000FC9                                      _SSP2BUF 000F6F  
                 __size_of_LoRaClearIRQFlags 000C                             ?_LoRaOptimalLoad 0001  
                   __size_of_LoRaGetIRQFlags 000C                            __end_of__npowers_ FEB5  
                                    __Hparam 0000                                   _scale$2775 002C  
                                    __Lparam 0000                               ??_SPI2ReadByte 0001  
                            __size_of___flge 00D0                              __size_of___fleq 008A  
                                    ___fladd E9EC                                      ___fldiv E764  
                                    ___awdiv DAB8                                      ___lbdiv D508  
                                    ___flneg D46C                                      ___awmod D952  
                           ?_LoRaStandbyMode 0001                                      ___lbmod D3BC  
                                    ___flmul ECF8                                      ___flsub D60A  
                                    ___fltol DBC6                                      ___lldiv DA36  
                            __size_of___wmul 0026                                      ___llmod D8EC  
                                    _address 00C3                         __end_of_readVisValue D1EC  
                                    __pcinit D6E2                              __size_of_readUV 004E  
                            __size_of_fround 026A                             ?_readTemperature 0001  
                                    __ramtop 1000                                      __ptext0 DF10  
                                    __ptext1 D1B0                                      __ptext2 D650  
                                    __ptext3 D182                                      __ptext4 E108  
                                    __ptext5 D698                                      __ptext6 D278  
                                    __ptext7 F3F4                                      __ptext8 F024  
                                    __ptext9 D952                              __size_of_printf 0858  
                        _writeOpModeRegister D1EC                            __end_of_hexpowers FED5  
                                ?__div_to_l_ 0001                                      _dpowers FED5  
                                 ??___xxtofl 0005                             ___awmod@dividend 0001  
                                 ?_I2C1_Wait 0001                                   ?_I2C1_Stop 0001  
                              _VEML6075Start D292                         end_of_initialization D722  
                               CRC16@wLength 0002                         __size_of_USART2_Stop 0006  
                    __end_of_BH1750ReadValue D43E                                __Lmediumconst FC4C  
                       ?_writeOpModeRegister 0001                      __end_of_I2C1_Initialize D7D0  
                            ___lldiv@divisor 0005                            __end_of_setupAtoD D4CE  
                            ___lldiv@counter 000D             __end_of_I2C1_Write_Byte_Read_Ack D392  
                    ??_I2C1_Check_Data_Stuck 0001                                      printf@c 00BC  
                                    printf@f 004F                      __size_of_I2C1_Read_Byte 0026  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                              ?_USART2_Start 0001                               __tdiv_to_l_@f1 0001  
                             __tdiv_to_l_@f2 0005                    BH1750WriteCommand@address 0006  
                  __size_of_LoRaGetFrequency 00CC                                ??__tdiv_to_l_ 0009  
                          ?_setBH1750Address 0001                                    _PORTCbits 000F82  
                               ??_LoRaTXData 005A                  __end_of_I2C1_Repeated_Start D1A0  
                               ??_LoRaTXMode 0057                              ??_writeVEML6075 0008  
                  BH1750WriteCommand@command 0005                                  ___fladd@grs 0046  
                         ??_setBH1750Address 0001                                   _uvaReading 0070  
                           ___lbmod@dividend 0002                                ___xxtofl@sign 0009  
                                 _uvbReading 006E                                    _TRISAbits 000F92  
                                  _TRISCbits 000F94                                    _TRISDbits 000F95  
                                  _TRISEbits 000F96                               ?_VEML6075Start 0001  
                                ___fldiv@grs 0022                                  ___fldiv@rem 001B  
                                ___lbmod@rem 0004                                  ___flmul@grs 001D  
                      ??_writeOpModeRegister 0004                   __end_of_disablePeripherals D698  
                      __size_of_readVEML6075 0044                           __end_of_LoRaTXData D6E2  
                        __size_of__div_to_l_ 00F4                           __end_of_LoRaTXMode D292  
                              ??_configureIO 0016                             I2C1_Initialize@c 000E  
                             ??_USART2_Start 0001                               __end_of___flge DE1C  
                             __end_of___fleq DBC6                            ??_LoRaGetIRQFlags 0003  
                    LoRaOptimalLoad@syncWord 0007                               __end_of___wmul D340  
                                  _LoRaReset D340                                __pidataCOMRAM D181  
                                  _LoRaStart D886                  __size_of_readOpModeRegister 0008  
                             __end_of_readUV D77A                               __end_of_fround E764  
                             __end_of_printf FC4C                             ??_transmitValues 005B  
                        start_initialization D6E2                                  ??_I2C1_Wait 0001  
                                ??_I2C1_Stop 0003                          __end_of__tdiv_to_l_ E108  
                       __end_of_SPI2ReadByte D2F4                                 _readVEML6075 D580  
                     __size_of_SPI2WriteByte 003E                             ?_BH1750ReadValue 0005  
                            ___llmod@divisor 0012                  __size_of_BH1750WriteCommand 0018  
                            ___llmod@counter 0016                            ?_LoRaSetFrequency 003B  
               LoRaGetFrequency@intermediate 0038                             ?_I2C1_Initialize 000E  
                         ??_LoRaSetFrequency 003F                        __size_of_readVisValue 000E  
                              ??_readBattery 0003                                     ??___flge 0009  
                                   ??___fleq 0009                       VEML6075Start@configLSB 0009  
                                   ??___wmul 0005                                  __pdataBANK0 00C3  
                   _I2C1_Write_Byte_Read_Ack D368                                     ??_readUV 000C  
                                   ??_fround 002C                                   ?_LoRaReset 0001  
                                 ?_LoRaStart 0046                                     ??_printf 0055  
                        __end_of_configureIO D60A                       I2C1_Check_Data_Stuck@i 0002  
                                  ___fladd@a 003B                                    ___fladd@b 0037  
                                 fround@prec 0036                                    ___fldiv@a 0013  
                                  ___fldiv@b 000F                              ??_VEML6075Start 0009  
                                  ___flmul@a 0013                                    ___flmul@b 000F  
                                __pbssCOMRAM 005E                                    ___flsub@a 004B  
                                  ___flsub@b 0047                                __pcstackBANK0 00A4  
                          __size_of___xxtofl 0140                I2C1_Write_Byte_Read_Ack@tries 0004  
                               _readVisValue D1DE                            LoRaStart@syncWord 004A  
                    LoRaGetIRQFlags@regValue 0003                               _I2C1_Read_Byte D2F4  
                              __pmediumconst FC4C                                     ?___fladd 0037  
                     __size_of_LoRaSleepMode 0014                                     ?___fldiv 000F  
                                   ?___awdiv 0007                                     ?___lbdiv 0005  
                                   ?___flneg 0001                                     ?___awmod 0001  
                                   ?___lbmod 0001                                     ?___flmul 000F  
 __end_of_setBH1750ContinuousHResolutionMode D1C6  __size_of_setBH1750ContinuousHResolutionMode 000C  
       ??_setBH1750ContinuousHResolutionMode 0007          ?_setBH1750ContinuousHResolutionMode 0001  
         _setBH1750ContinuousHResolutionMode D1BA                                     ?___flsub 0047  
                                   ?___fltol 0031                                     ?___lldiv 0001  
                                   ?___llmod 000E                                    __npowers_ FE81  
                              ??_setLoRaMode 0005                          LoRaSetFrequency@mid 0040  
                        LoRaSetFrequency@lsb 0041                          LoRaSetFrequency@msb 003F  
                           _LoRaGetFrequency DC80                                _SPI2WriteByte D542  
                                __tdiv_to_l_ E00A                          __end_of_readBattery D3BC  
                             __size_of_CRC16 0058                                 ??__div_to_l_ 0009  
               LoRaSetFrequency@intermediate 0042                                    _hexpowers FEB5  
                               _messageCount 0060                               __size_of_scale 03D0  
                       __end_of_USART2_Start D886                               __size_of_putch 0010  
                              ?_turnStuffOff 0001                               CRC16@wCRCTable FC4D  
                             ___wmul@product 0005                                     _LATAbits 000F89  
                                   _LATCbits 000F8B                                     _LATDbits 000F8C  
                                   _LATEbits 000F8D                       __end_of_I2C1_Read_Byte D31A  
                                   _PMD0bits 000F3F                                     _PMD1bits 000F3E  
                                   _PMD2bits 000F3D                                     _PIR1bits 000F9E  
                         __end_of__div_to_l_ DF10                                   _I2C1_Start D188  
                   __size_of_LoRaOptimalLoad 0186                                  _configureIO D5C4  
                                   _SSP1CON1 000FC6                                     _SSP1CON2 000FC5  
                        readVEML6075@address 000B               __size_of_I2C1_Check_Data_Stuck 003A  
                                  _setupAtoD D49A                                     _SSP1STAT 000FC7  
              __end_of_I2C1_Check_Data_Stuck D508                                  ??_LoRaReset 0001  
                             ?_SPI2WriteByte 0001                                  ??_LoRaStart 004B  
                        readVEML6075@command 0005                              I2C1_Read_Byte@a 0003  
                                 _ADCON0bits 000FC2                                   _ADCON1bits 000FC1  
                                 _ADCON2bits 000FC0                            ___wmul@multiplier 0001  
                                 printf@flag 00AA                        __size_of_SPI2ReadByte 0024  
                                 printf@eexp 00AE                                   printf@fval 00B8  
                                 printf@prec 00AC                     __size_of_LoRaStandbyMode 001A  
                        __end_of_setLoRaMode D246                          setLoRaMode@regValue 0005  
                              ??_USART2_Stop 0001                     __size_of_readTemperature 002E  
                       SPI2WriteByte@address 0003                                _LoRaSleepMode D21E  
                                  copy_data0 D6F6                                     _i2cFault 005E  
                     __end_ofCRC16@wCRCTable FE4D                               ??_turnStuffOff 0001  
                  __size_of_setBH1750Address 0014                              _LoRaGetIRQFlags D1D2  
                            ?_I2C1_Read_Byte 0001                                     __Hrparam 0000  
                                   __Lrparam 0000                                  _readBattery D392  
                                 ?_setupAtoD 0001                                 _SPI2ReadByte D2D0  
                           __size_of___fladd 030C                             __size_of___fldiv 0288  
                           __size_of___awdiv 0084                             __size_of___lbdiv 003A  
                           __size_of___flneg 002E                             __size_of___awmod 0070  
                           __size_of___lbmod 002A                              transmitValues@i 00C2  
                            transmitValues@j 00C1                             __size_of___flmul 032C  
                           __size_of___flsub 0046                             __size_of___fltol 00BA  
                           __size_of___lldiv 0082                             __size_of___llmod 0066  
                         _disablePeripherals D650                                  _fround$2773 0032  
                                _fround$2774 002E                                _bh1750Address 005F  
                                 _ANSELAbits 000F38                                   _ANSELBbits 000F39  
                                 _ANSELCbits 000F3A                                   _ANSELDbits 000F3B  
                                 _ANSELEbits 000F3C                                     ___xxtofl E234  
                      __end_of_writeVEML6075 D412                          ?_disablePeripherals 0001  
                             ?_LoRaSleepMode 0001                                     __ptext10 DAB8  
                                   __ptext11 D1FA                                     __ptext20 E9EC  
                                   __ptext12 E4FA                                     __ptext21 D46C  
                                   __ptext13 D3BC                                     __ptext30 D232  
                                   __ptext22 DD4C                                     __ptext14 D508  
                                   __ptext31 D25E                                     __ptext23 DB3C  
                                   __ptext15 E00A                                     __ptext40 D1C6  
                                   __ptext32 D21E                                     __ptext24 D886  
                                   __ptext16 DE1C                                     __ptext41 D542  
                                   __ptext33 D1EC                                     __ptext25 D9C2  
                                   __ptext17 D31A                                     __ptext50 D392  
                                   __ptext42 D7D0                                     __ptext34 D1A0  
                                   __ptext26 DBC6                                     __ptext18 D8EC  
                                   __ptext51 D5C4                                     __ptext43 D1DE  
                                   __ptext35 D1D2                                     __ptext27 ECF8  
                                   __ptext19 D60A                                     __ptext60 D188  
                                   __ptext52 D49A                                     __ptext44 D412  
                                   __ptext36 DC80                                     __ptext28 D340  
                                   __ptext61 D2B0                                     __ptext53 D1BA  
                                   __ptext45 D72C                                     __ptext37 E234  
                                   __ptext29 E374                                     __ptext62 D828  
                                   __ptext54 D246                                     __ptext46 D580  
                                   __ptext38 E764                                     __ptext63 D77A  
                                   __ptext55 D20A                                     __ptext47 D198  
                                   __ptext39 D2D0                                     __ptext64 DA36  
                                   __ptext56 D292                                     __ptext48 D2F4  
                                   __ptext65 D4CE                                     __ptext57 D3E6  
                                   __ptext49 D43E                                     __ptext58 D368  
                                   __ptext59 D190                  __end_of_writeOpModeRegister D1FA  
               __size_of_I2C1_Repeated_Start 0008                                 _SSP1CON2bits 000FC5  
                                   __powers_ FE4D                                 _SSP2CON1bits 000F6C  
                              LoRaStart@freq 0046                                __size_of_main 00FA  
                        __end_of_USART2_Stop D188                      LoRaGetFrequency@freqMHz 003C  
                 ??_I2C1_Write_Byte_Read_Ack 0003                                CRC16@wCRCWord 0007  
                    LoRaSetFrequency@freqMHz 003B                         ??_disablePeripherals 0001  
                                ?_I2C1_Start 0001                     writeVEML6075@dataByteLow 0006  
                            ??_SPI2WriteByte 0002                   __end_of_readOpModeRegister D1A8  
                                  printf@idx 00A8                                  _setLoRaMode D232  
                                  printf@val 00B4                         USART2_Start@baudrate 0001  
                               _SSP2STATbits 000F6D                            ??_LoRaOptimalLoad 0006  
                  __size_of_LoRaSetFrequency 0074                                    putch@data 0001  
                      __size_of_USART2_Start 005E                                     scale@scl 0030  
                writeOpModeRegister@regValue 0004                      __end_of_LoRaGetIRQFlags D1DE  
                          ??_LoRaStandbyMode 0005                   __end_of_BH1750WriteCommand D25E  
                           __tdiv_to_l_@exp1 0011                             __tdiv_to_l_@cntr 0010  
                   __end_of_LoRaGetFrequency DD4C                             __tdiv_to_l_@quot 000C  
                                LoRaTXData@i 005A                                 _VREFCON0bits 000F42  
                           ___lldiv@dividend 0001                            ??_readTemperature 0003  
                                 _RCSTA2bits 000F71                               I2C1_Wait@tries 0002  
                                   printf@ap 00A9                     __size_of_BH1750ReadValue 002C  
                                ??_setupAtoD 0001                                 _USART2_Start D828  
                       __end_of_turnStuffOff D1BA                     __size_of_I2C1_Initialize 0056  
                               ?__tdiv_to_l_ 0001                                  _printf$2776 00A4  
                           ___lldiv@quotient 0009                              ??_LoRaSleepMode 0005  
                      __end_of_VEML6075Start D2B0                          __size_of_I2C1_Start 0008  
                      transmitValues@calcCRC 00BE                                  _USART2_Stop D182  
                              ___fladd@signs 0043                             _setBH1750Address D20A  
                        setBH1750Address@add 0001                           __size_of_I2C1_Wait 0020  
                               ___fladd@aexp 0044                                 ___fladd@bexp 0045  
                         __size_of_I2C1_Stop 0008                      __size_of_transmitValues 012C  
                        transmitValues@i_810 00C0                          transmitValues@flags 00BD  
                         BH1750ReadValue@lsb 000A                           BH1750ReadValue@msb 0009  
